/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2010 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 8000.0;
	SIMULATION_TIME = 8000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("SHLL")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("SHLL[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SHLL";
}

SIGNAL("SHLL[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SHLL";
}

SIGNAL("SHLL[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SHLL";
}

SIGNAL("SHLL[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SHLL";
}

SIGNAL("SHLL[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SHLL";
}

SIGNAL("SHLL[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SHLL";
}

SIGNAL("SHLL[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SHLL";
}

SIGNAL("SHLL[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SHLL";
}

SIGNAL("SHRA")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("SHRA[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SHRA";
}

SIGNAL("SHRA[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SHRA";
}

SIGNAL("SHRA[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SHRA";
}

SIGNAL("SHRA[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SHRA";
}

SIGNAL("SHRA[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SHRA";
}

SIGNAL("SHRA[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SHRA";
}

SIGNAL("SHRA[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SHRA";
}

SIGNAL("SHRA[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SHRA";
}

SIGNAL("SHRL")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("SHRL[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SHRL";
}

SIGNAL("SHRL[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SHRL";
}

SIGNAL("SHRL[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SHRL";
}

SIGNAL("SHRL[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SHRL";
}

SIGNAL("SHRL[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SHRL";
}

SIGNAL("SHRL[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SHRL";
}

SIGNAL("SHRL[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SHRL";
}

SIGNAL("SHRL[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "SHRL";
}

SIGNAL("ShiftBy")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 3;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("ShiftBy[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ShiftBy";
}

SIGNAL("ShiftBy[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ShiftBy";
}

SIGNAL("ShiftBy[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "ShiftBy";
}

SIGNAL("Value")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("Value[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "Value";
}

SIGNAL("Value[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "Value";
}

SIGNAL("Value[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "Value";
}

SIGNAL("Value[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "Value";
}

SIGNAL("Value[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "Value";
}

SIGNAL("Value[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "Value";
}

SIGNAL("Value[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "Value";
}

SIGNAL("Value[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "Value";
}

TRANSITION_LIST("SHLL[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1007.402;
		LEVEL 0 FOR 1000.678;
		LEVEL 1 FOR 2.181;
		LEVEL 0 FOR 4998.39;
		LEVEL 1 FOR 991.349;
	}
}

TRANSITION_LIST("SHLL[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 6010.273;
		LEVEL 1 FOR 998.49;
		LEVEL 0 FOR 991.237;
	}
}

TRANSITION_LIST("SHLL[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5008.784;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 1991.216;
	}
}

TRANSITION_LIST("SHLL[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 4010.1;
		LEVEL 1 FOR 997.934;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1.519;
		LEVEL 0 FOR 1990.447;
	}
}

TRANSITION_LIST("SHLL[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3007.941;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 3992.059;
	}
}

TRANSITION_LIST("SHLL[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2009.302;
		LEVEL 1 FOR 998.49;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1.625;
		LEVEL 0 FOR 3990.583;
	}
}

TRANSITION_LIST("SHLL[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1008.221;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 5991.779;
	}
}

TRANSITION_LIST("SHLL[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1007.377;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1.518;
		LEVEL 0 FOR 2000.0;
		LEVEL 1 FOR 0.509;
		LEVEL 0 FOR 3990.596;
	}
}

TRANSITION_LIST("SHRA[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 8000.0;
	}
}

TRANSITION_LIST("SHRA[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1006.971;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 2.607;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 0.484;
		LEVEL 1 FOR 3989.938;
	}
}

TRANSITION_LIST("SHRA[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2008.918;
		LEVEL 1 FOR 2000.0;
		LEVEL 0 FOR 0.311;
		LEVEL 1 FOR 3990.771;
	}
}

TRANSITION_LIST("SHRA[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3008.305;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 0.913;
		LEVEL 1 FOR 3990.782;
	}
}

TRANSITION_LIST("SHRA[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 4009.03;
		LEVEL 1 FOR 3990.97;
	}
}

TRANSITION_LIST("SHRA[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 4009.482;
		LEVEL 1 FOR 0.624;
		LEVEL 0 FOR 998.271;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 1.729;
		LEVEL 1 FOR 1989.894;
	}
}

TRANSITION_LIST("SHRA[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 6009.712;
		LEVEL 1 FOR 1990.288;
	}
}

TRANSITION_LIST("SHRA[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1008.624;
		LEVEL 0 FOR 1000.085;
		LEVEL 1 FOR 2.169;
		LEVEL 0 FOR 4997.746;
		LEVEL 1 FOR 991.376;
	}
}

TRANSITION_LIST("SHRL[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1007.502;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1.292;
		LEVEL 0 FOR 5991.206;
	}
}

TRANSITION_LIST("SHRL[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1008.211;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 5991.789;
	}
}

TRANSITION_LIST("SHRL[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 2009.677;
		LEVEL 1 FOR 998.269;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1.731;
		LEVEL 0 FOR 3990.323;
	}
}

TRANSITION_LIST("SHRL[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 3007.891;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 3992.109;
	}
}

TRANSITION_LIST("SHRL[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 4010.208;
		LEVEL 1 FOR 997.972;
		LEVEL 0 FOR 1000.0;
		LEVEL 1 FOR 1.718;
		LEVEL 0 FOR 1990.102;
	}
}

TRANSITION_LIST("SHRL[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 5007.884;
		LEVEL 1 FOR 1000.0;
		LEVEL 0 FOR 1992.116;
	}
}

TRANSITION_LIST("SHRL[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 6009.963;
		LEVEL 1 FOR 998.242;
		LEVEL 0 FOR 991.795;
	}
}

TRANSITION_LIST("SHRL[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1008.624;
		LEVEL 0 FOR 1000.085;
		LEVEL 1 FOR 2.169;
		LEVEL 0 FOR 4997.746;
		LEVEL 1 FOR 991.376;
	}
}

TRANSITION_LIST("ShiftBy[2]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 1;
			LEVEL 0 FOR 4000.0;
			LEVEL 1 FOR 4000.0;
		}
	}
}

TRANSITION_LIST("ShiftBy[1]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 2;
			LEVEL 0 FOR 2000.0;
			LEVEL 1 FOR 2000.0;
		}
	}
}

TRANSITION_LIST("ShiftBy[0]")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 4;
			LEVEL 0 FOR 1000.0;
			LEVEL 1 FOR 1000.0;
		}
	}
}

TRANSITION_LIST("Value[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 8000.0;
	}
}

TRANSITION_LIST("Value[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 8000.0;
	}
}

TRANSITION_LIST("Value[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 8000.0;
	}
}

TRANSITION_LIST("Value[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 8000.0;
	}
}

TRANSITION_LIST("Value[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 8000.0;
	}
}

TRANSITION_LIST("Value[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 8000.0;
	}
}

TRANSITION_LIST("Value[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 8000.0;
	}
}

TRANSITION_LIST("Value[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 8000.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "Value";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
	CHILDREN = 1, 2, 3, 4, 5, 6, 7, 8;
}

DISPLAY_LINE
{
	CHANNEL = "Value[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Value[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 2;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Value[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Value[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Value[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Value[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Value[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "Value[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 0;
}

DISPLAY_LINE
{
	CHANNEL = "ShiftBy";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 9;
	TREE_LEVEL = 0;
	CHILDREN = 10, 11, 12;
}

DISPLAY_LINE
{
	CHANNEL = "ShiftBy[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "ShiftBy[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "ShiftBy[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 9;
}

DISPLAY_LINE
{
	CHANNEL = "SHLL";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 13;
	TREE_LEVEL = 0;
	CHILDREN = 14, 15, 16, 17, 18, 19, 20, 21;
}

DISPLAY_LINE
{
	CHANNEL = "SHLL[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 13;
}

DISPLAY_LINE
{
	CHANNEL = "SHLL[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 13;
}

DISPLAY_LINE
{
	CHANNEL = "SHLL[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 13;
}

DISPLAY_LINE
{
	CHANNEL = "SHLL[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 13;
}

DISPLAY_LINE
{
	CHANNEL = "SHLL[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 13;
}

DISPLAY_LINE
{
	CHANNEL = "SHLL[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 13;
}

DISPLAY_LINE
{
	CHANNEL = "SHLL[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 13;
}

DISPLAY_LINE
{
	CHANNEL = "SHLL[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 13;
}

DISPLAY_LINE
{
	CHANNEL = "SHRA";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 22;
	TREE_LEVEL = 0;
	CHILDREN = 23, 24, 25, 26, 27, 28, 29, 30;
}

DISPLAY_LINE
{
	CHANNEL = "SHRA[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "SHRA[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "SHRA[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "SHRA[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "SHRA[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "SHRA[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "SHRA[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 29;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "SHRA[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 30;
	TREE_LEVEL = 1;
	PARENT = 22;
}

DISPLAY_LINE
{
	CHANNEL = "SHRL";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 31;
	TREE_LEVEL = 0;
	CHILDREN = 32, 33, 34, 35, 36, 37, 38, 39;
}

DISPLAY_LINE
{
	CHANNEL = "SHRL[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 32;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "SHRL[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 33;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "SHRL[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 34;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "SHRL[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 35;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "SHRL[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 36;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "SHRL[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 37;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "SHRL[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 38;
	TREE_LEVEL = 1;
	PARENT = 31;
}

DISPLAY_LINE
{
	CHANNEL = "SHRL[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 39;
	TREE_LEVEL = 1;
	PARENT = 31;
}

TIME_BAR
{
	TIME = 16875;
	MASTER = TRUE;
}
;
