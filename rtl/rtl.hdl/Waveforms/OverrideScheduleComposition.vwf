/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2010 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	PRINT_OPTIONS = "Print_options_version 6\
range_start 0ps\
range_end 1.0us\
width 1\
names_percentage 25\
comments 1\
grid_lines 1\
time_bars 1\
name_every_page 0\
expand_groups 0\
print_all 1\
print_row_height 100";
	DATA_OFFSET = 0.0;
	DATA_DURATION = 1000.0;
	SIMULATION_TIME = 1000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("InOverride")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("InValue")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("InValue[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "InValue";
}

SIGNAL("InValue[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "InValue";
}

SIGNAL("InValue[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "InValue";
}

SIGNAL("InValue[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "InValue";
}

SIGNAL("InValue[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "InValue";
}

SIGNAL("InValue[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "InValue";
}

SIGNAL("InValue[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "InValue";
}

SIGNAL("InValue[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "InValue";
}

SIGNAL("NoOverrideValue")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("NoOverrideValue[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "NoOverrideValue";
}

SIGNAL("NoOverrideValue[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "NoOverrideValue";
}

SIGNAL("NoOverrideValue[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "NoOverrideValue";
}

SIGNAL("NoOverrideValue[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "NoOverrideValue";
}

SIGNAL("NoOverrideValue[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "NoOverrideValue";
}

SIGNAL("NoOverrideValue[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "NoOverrideValue";
}

SIGNAL("NoOverrideValue[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "NoOverrideValue";
}

SIGNAL("NoOverrideValue[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "NoOverrideValue";
}

SIGNAL("AutoOverrideValue")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("AutoOverrideValue[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AutoOverrideValue";
}

SIGNAL("AutoOverrideValue[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AutoOverrideValue";
}

SIGNAL("AutoOverrideValue[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AutoOverrideValue";
}

SIGNAL("AutoOverrideValue[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AutoOverrideValue";
}

SIGNAL("AutoOverrideValue[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AutoOverrideValue";
}

SIGNAL("AutoOverrideValue[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AutoOverrideValue";
}

SIGNAL("AutoOverrideValue[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AutoOverrideValue";
}

SIGNAL("AutoOverrideValue[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AutoOverrideValue";
}

SIGNAL("L1Value")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("L1Value[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "L1Value";
}

SIGNAL("L1Value[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "L1Value";
}

SIGNAL("L1Value[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "L1Value";
}

SIGNAL("L1Value[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "L1Value";
}

SIGNAL("L1Value[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "L1Value";
}

SIGNAL("L1Value[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "L1Value";
}

SIGNAL("L1Value[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "L1Value";
}

SIGNAL("L1Value[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "L1Value";
}

SIGNAL("L2Value")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("L2Value[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "L2Value";
}

SIGNAL("L2Value[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "L2Value";
}

SIGNAL("L2Value[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "L2Value";
}

SIGNAL("L2Value[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "L2Value";
}

SIGNAL("L2Value[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "L2Value";
}

SIGNAL("L2Value[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "L2Value";
}

SIGNAL("L2Value[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "L2Value";
}

SIGNAL("L2Value[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "L2Value";
}

SIGNAL("L3Value")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("L3Value[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "L3Value";
}

SIGNAL("L3Value[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "L3Value";
}

SIGNAL("L3Value[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "L3Value";
}

SIGNAL("L3Value[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "L3Value";
}

SIGNAL("L3Value[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "L3Value";
}

SIGNAL("L3Value[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "L3Value";
}

SIGNAL("L3Value[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "L3Value";
}

SIGNAL("L3Value[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "L3Value";
}

SIGNAL("GetValue")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("GetValue[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "GetValue";
}

SIGNAL("GetValue[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "GetValue";
}

SIGNAL("GetValue[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "GetValue";
}

SIGNAL("GetValue[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "GetValue";
}

SIGNAL("GetValue[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "GetValue";
}

SIGNAL("GetValue[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "GetValue";
}

SIGNAL("GetValue[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "GetValue";
}

SIGNAL("GetValue[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "GetValue";
}

SIGNAL("RawInputs_InOverride")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("RawInputs_InValue")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("RawInputs_InValue[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "RawInputs_InValue";
}

SIGNAL("RawInputs_InValue[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "RawInputs_InValue";
}

SIGNAL("RawInputs_InValue[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "RawInputs_InValue";
}

SIGNAL("RawInputs_InValue[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "RawInputs_InValue";
}

SIGNAL("RawInputs_InValue[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "RawInputs_InValue";
}

SIGNAL("RawInputs_InValue[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "RawInputs_InValue";
}

SIGNAL("RawInputs_InValue[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "RawInputs_InValue";
}

SIGNAL("RawInputs_InValue[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "RawInputs_InValue";
}

SIGNAL("OverrideInputs_InOverride")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("OverrideInputs_InValue")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("OverrideInputs_InValue[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OverrideInputs_InValue";
}

SIGNAL("OverrideInputs_InValue[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OverrideInputs_InValue";
}

SIGNAL("OverrideInputs_InValue[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OverrideInputs_InValue";
}

SIGNAL("OverrideInputs_InValue[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OverrideInputs_InValue";
}

SIGNAL("OverrideInputs_InValue[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OverrideInputs_InValue";
}

SIGNAL("OverrideInputs_InValue[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OverrideInputs_InValue";
}

SIGNAL("OverrideInputs_InValue[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OverrideInputs_InValue";
}

SIGNAL("OverrideInputs_InValue[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OverrideInputs_InValue";
}

TRANSITION_LIST("InOverride")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 600.0;
	}
}

TRANSITION_LIST("InValue[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("InValue[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 600.0;
	}
}

TRANSITION_LIST("InValue[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 600.0;
	}
}

TRANSITION_LIST("InValue[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 600.0;
	}
}

TRANSITION_LIST("InValue[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("InValue[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("InValue[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("InValue[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("NoOverrideValue[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 111.244;
		NODE
		{
			REPEAT = 2;
			LEVEL 1 FOR 0.384;
			LEVEL 0 FOR 99.616;
		}
		LEVEL 1 FOR 0.594;
		LEVEL 0 FOR 99.406;
		LEVEL 1 FOR 0.524;
		LEVEL 0 FOR 0.134;
		LEVEL 1 FOR 0.075;
		LEVEL 0 FOR 588.023;
	}
}

TRANSITION_LIST("NoOverrideValue[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 111.268;
		LEVEL 0 FOR 0.271;
		LEVEL 1 FOR 99.673;
		LEVEL 0 FOR 0.056;
		LEVEL 1 FOR 0.271;
		LEVEL 0 FOR 99.729;
		LEVEL 1 FOR 0.527;
		LEVEL 0 FOR 99.417;
		LEVEL 1 FOR 0.056;
		LEVEL 0 FOR 0.457;
		LEVEL 1 FOR 0.134;
		LEVEL 0 FOR 0.075;
		LEVEL 1 FOR 588.066;
	}
}

TRANSITION_LIST("NoOverrideValue[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 111.608;
		LEVEL 0 FOR 0.498;
		LEVEL 1 FOR 98.647;
		LEVEL 0 FOR 0.855;
		LEVEL 1 FOR 0.632;
		LEVEL 0 FOR 99.368;
		LEVEL 1 FOR 0.568;
		LEVEL 0 FOR 98.577;
		LEVEL 1 FOR 0.855;
		LEVEL 0 FOR 0.498;
		LEVEL 1 FOR 0.134;
		LEVEL 0 FOR 0.075;
		LEVEL 1 FOR 587.685;
	}
}

TRANSITION_LIST("NoOverrideValue[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 111.277;
		LEVEL 0 FOR 0.387;
		LEVEL 1 FOR 99.613;
		LEVEL 0 FOR 0.139;
		LEVEL 1 FOR 0.387;
		LEVEL 0 FOR 99.474;
		LEVEL 1 FOR 0.387;
		LEVEL 0 FOR 99.613;
		LEVEL 1 FOR 0.139;
		LEVEL 0 FOR 0.387;
		LEVEL 1 FOR 588.197;
	}
}

TRANSITION_LIST("NoOverrideValue[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 111.48;
		LEVEL 0 FOR 0.384;
		LEVEL 1 FOR 99.616;
		LEVEL 0 FOR 0.454;
		LEVEL 1 FOR 99.546;
		LEVEL 0 FOR 0.384;
		LEVEL 1 FOR 99.616;
		LEVEL 0 FOR 0.454;
		LEVEL 1 FOR 588.066;
	}
}

TRANSITION_LIST("NoOverrideValue[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 111.475;
		NODE
		{
			REPEAT = 3;
			LEVEL 0 FOR 0.387;
			LEVEL 1 FOR 99.613;
		}
		LEVEL 0 FOR 0.387;
		LEVEL 1 FOR 588.138;
	}
}

TRANSITION_LIST("NoOverrideValue[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 111.729;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 588.271;
	}
}

TRANSITION_LIST("NoOverrideValue[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("AutoOverrideValue[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 111.029;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 0.639;
		LEVEL 0 FOR 200.99;
		LEVEL 1 FOR 587.342;
	}
}

TRANSITION_LIST("AutoOverrideValue[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 111.859;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 0.515;
		LEVEL 1 FOR 0.374;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 0.616;
		LEVEL 0 FOR 586.636;
	}
}

TRANSITION_LIST("AutoOverrideValue[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 111.498;
		LEVEL 1 FOR 101.154;
		LEVEL 0 FOR 198.943;
		LEVEL 1 FOR 1.057;
		LEVEL 0 FOR 587.348;
	}
}

TRANSITION_LIST("AutoOverrideValue[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 111.297;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 1.221;
		LEVEL 1 FOR 98.779;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 1.221;
		LEVEL 0 FOR 587.482;
	}
}

TRANSITION_LIST("AutoOverrideValue[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 111.582;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 588.418;
	}
}

TRANSITION_LIST("AutoOverrideValue[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 111.288;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 588.712;
	}
}

TRANSITION_LIST("AutoOverrideValue[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("AutoOverrideValue[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 112.823;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 587.177;
	}
}

TRANSITION_LIST("L1Value[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 111.651;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 0.468;
		LEVEL 1 FOR 201.253;
		LEVEL 0 FOR 586.628;
	}
}

TRANSITION_LIST("L1Value[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 111.46;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 0.24;
		LEVEL 0 FOR 0.636;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 0.617;
		LEVEL 1 FOR 587.047;
	}
}

TRANSITION_LIST("L1Value[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 111.857;
		LEVEL 0 FOR 101.401;
		LEVEL 1 FOR 198.586;
		LEVEL 0 FOR 1.414;
		LEVEL 1 FOR 586.742;
	}
}

TRANSITION_LIST("L1Value[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 111.677;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 0.993;
		LEVEL 0 FOR 99.007;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 0.993;
		LEVEL 1 FOR 587.33;
	}
}

TRANSITION_LIST("L1Value[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 111.488;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 588.512;
	}
}

TRANSITION_LIST("L1Value[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 112.313;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 587.687;
	}
}

TRANSITION_LIST("L1Value[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("L1Value[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("L2Value[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 111.898;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 0.473;
		LEVEL 1 FOR 99.527;
		LEVEL 0 FOR 0.677;
		LEVEL 1 FOR 99.323;
		LEVEL 0 FOR 0.384;
		LEVEL 1 FOR 0.089;
		LEVEL 0 FOR 0.683;
		LEVEL 1 FOR 0.28;
		LEVEL 0 FOR 586.666;
	}
}

TRANSITION_LIST("L2Value[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 111.919;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 0.084;
		LEVEL 0 FOR 0.299;
		LEVEL 1 FOR 99.617;
		LEVEL 0 FOR 0.605;
		LEVEL 1 FOR 99.395;
		LEVEL 0 FOR 0.084;
		LEVEL 1 FOR 1.0;
		LEVEL 0 FOR 0.28;
		LEVEL 1 FOR 586.717;
	}
}

TRANSITION_LIST("L2Value[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 111.588;
		LEVEL 0 FOR 98.856;
		LEVEL 1 FOR 1.144;
		LEVEL 0 FOR 0.467;
		LEVEL 1 FOR 99.533;
		LEVEL 0 FOR 0.534;
		LEVEL 1 FOR 98.322;
		LEVEL 0 FOR 1.144;
		LEVEL 1 FOR 1.013;
		LEVEL 0 FOR 0.28;
		LEVEL 1 FOR 587.119;
	}
}

TRANSITION_LIST("L2Value[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 111.886;
		LEVEL 0 FOR 99.772;
		LEVEL 1 FOR 0.228;
		LEVEL 0 FOR 0.452;
		LEVEL 1 FOR 0.69;
		LEVEL 0 FOR 0.726;
		LEVEL 1 FOR 98.132;
		LEVEL 0 FOR 0.383;
		LEVEL 1 FOR 99.389;
		LEVEL 0 FOR 0.228;
		LEVEL 1 FOR 0.862;
		LEVEL 0 FOR 0.28;
		LEVEL 1 FOR 586.972;
	}
}

TRANSITION_LIST("L2Value[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 111.669;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 0.381;
		LEVEL 0 FOR 0.69;
		LEVEL 1 FOR 0.726;
		LEVEL 0 FOR 98.203;
		LEVEL 1 FOR 0.381;
		LEVEL 0 FOR 99.619;
		LEVEL 1 FOR 0.791;
		LEVEL 0 FOR 0.28;
		LEVEL 1 FOR 587.26;
	}
}

TRANSITION_LIST("L2Value[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 111.622;
		LEVEL 0 FOR 1.002;
		LEVEL 1 FOR 98.998;
		LEVEL 0 FOR 1.002;
		LEVEL 1 FOR 0.726;
		LEVEL 0 FOR 98.272;
		LEVEL 1 FOR 1.002;
		LEVEL 0 FOR 98.998;
		LEVEL 1 FOR 0.722;
		LEVEL 0 FOR 0.28;
		LEVEL 1 FOR 587.376;
	}
}

TRANSITION_LIST("L2Value[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 112.284;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 0.726;
		LEVEL 0 FOR 99.274;
		LEVEL 1 FOR 99.72;
		LEVEL 0 FOR 0.28;
		LEVEL 1 FOR 587.716;
	}
}

TRANSITION_LIST("L2Value[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("L3Value[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 111.271;
		LEVEL 0 FOR 0.692;
		LEVEL 1 FOR 99.308;
		LEVEL 0 FOR 0.764;
		LEVEL 1 FOR 99.236;
		LEVEL 0 FOR 0.907;
		LEVEL 1 FOR 99.093;
		LEVEL 0 FOR 0.692;
		LEVEL 1 FOR 588.037;
	}
}

TRANSITION_LIST("L3Value[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 111.09;
		LEVEL 1 FOR 0.387;
		LEVEL 0 FOR 99.613;
		LEVEL 1 FOR 0.387;
		LEVEL 0 FOR 0.469;
		LEVEL 1 FOR 99.144;
		LEVEL 0 FOR 0.53;
		LEVEL 1 FOR 99.47;
		LEVEL 0 FOR 0.458;
		LEVEL 1 FOR 0.099;
		LEVEL 0 FOR 0.186;
		LEVEL 1 FOR 0.113;
		LEVEL 0 FOR 588.054;
	}
}

TRANSITION_LIST("L3Value[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 111.29;
		LEVEL 1 FOR 0.388;
		LEVEL 0 FOR 99.21;
		LEVEL 1 FOR 0.402;
		LEVEL 0 FOR 0.487;
		LEVEL 1 FOR 99.513;
		LEVEL 0 FOR 0.46;
		LEVEL 1 FOR 99.138;
		LEVEL 0 FOR 0.402;
		LEVEL 1 FOR 0.388;
		LEVEL 0 FOR 0.099;
		LEVEL 1 FOR 0.186;
		LEVEL 0 FOR 588.037;
	}
}

TRANSITION_LIST("L3Value[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 111.13;
		LEVEL 1 FOR 0.387;
		LEVEL 0 FOR 99.613;
		LEVEL 1 FOR 0.102;
		LEVEL 0 FOR 0.498;
		LEVEL 1 FOR 99.4;
		LEVEL 0 FOR 0.387;
		LEVEL 1 FOR 99.613;
		LEVEL 0 FOR 0.102;
		LEVEL 1 FOR 0.498;
		LEVEL 0 FOR 588.27;
	}
}

TRANSITION_LIST("L3Value[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 110.813;
		LEVEL 1 FOR 0.459;
		LEVEL 0 FOR 99.541;
		LEVEL 1 FOR 0.53;
		LEVEL 0 FOR 99.47;
		LEVEL 1 FOR 0.459;
		LEVEL 0 FOR 99.541;
		LEVEL 1 FOR 0.53;
		LEVEL 0 FOR 588.657;
	}
}

TRANSITION_LIST("L3Value[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 111.726;
		LEVEL 1 FOR 100.071;
		LEVEL 0 FOR 99.929;
		LEVEL 1 FOR 100.071;
		LEVEL 0 FOR 588.203;
	}
}

TRANSITION_LIST("L3Value[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 111.566;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 0.388;
			LEVEL 0 FOR 99.612;
		}
		LEVEL 1 FOR 0.388;
		LEVEL 0 FOR 588.046;
	}
}

TRANSITION_LIST("L3Value[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 111.33;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 588.67;
	}
}

TRANSITION_LIST("GetValue[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 110.982;
		LEVEL 0 FOR 0.692;
		LEVEL 1 FOR 99.308;
		LEVEL 0 FOR 0.763;
		LEVEL 1 FOR 99.237;
		LEVEL 0 FOR 0.906;
		LEVEL 1 FOR 99.094;
		LEVEL 0 FOR 0.692;
		LEVEL 1 FOR 588.326;
	}
}

TRANSITION_LIST("GetValue[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 111.103;
		LEVEL 1 FOR 0.386;
		LEVEL 0 FOR 99.614;
		LEVEL 1 FOR 0.386;
		LEVEL 0 FOR 0.467;
		LEVEL 1 FOR 99.147;
		LEVEL 0 FOR 0.529;
		LEVEL 1 FOR 99.471;
		LEVEL 0 FOR 0.458;
		LEVEL 1 FOR 0.395;
		LEVEL 0 FOR 588.044;
	}
}

TRANSITION_LIST("GetValue[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 111.107;
		LEVEL 1 FOR 0.389;
		LEVEL 0 FOR 99.209;
		LEVEL 1 FOR 0.402;
		LEVEL 0 FOR 0.485;
		LEVEL 1 FOR 99.515;
		LEVEL 0 FOR 0.46;
		LEVEL 1 FOR 99.138;
		LEVEL 0 FOR 0.402;
		LEVEL 1 FOR 0.389;
		LEVEL 0 FOR 588.504;
	}
}

TRANSITION_LIST("GetValue[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 111.316;
		LEVEL 1 FOR 0.386;
		LEVEL 0 FOR 99.614;
		LEVEL 1 FOR 0.099;
		LEVEL 0 FOR 0.359;
		LEVEL 1 FOR 99.542;
		LEVEL 0 FOR 0.386;
		LEVEL 1 FOR 99.614;
		LEVEL 0 FOR 0.099;
		LEVEL 1 FOR 0.359;
		LEVEL 0 FOR 588.226;
	}
}

TRANSITION_LIST("GetValue[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 110.81;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 0.389;
			LEVEL 0 FOR 99.611;
		}
		LEVEL 1 FOR 0.389;
		LEVEL 0 FOR 588.801;
	}
}

TRANSITION_LIST("GetValue[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 111.568;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 588.432;
	}
}

TRANSITION_LIST("GetValue[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("GetValue[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("RawInputs_InOverride")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 108.723;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 591.277;
	}
}

TRANSITION_LIST("RawInputs_InValue[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("RawInputs_InValue[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 208.279;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 591.721;
	}
}

TRANSITION_LIST("RawInputs_InValue[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 208.587;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 591.413;
	}
}

TRANSITION_LIST("RawInputs_InValue[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 208.431;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 591.569;
	}
}

TRANSITION_LIST("RawInputs_InValue[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("RawInputs_InValue[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("RawInputs_InValue[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("RawInputs_InValue[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("OverrideInputs_InOverride")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 108.703;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 591.297;
	}
}

TRANSITION_LIST("OverrideInputs_InValue[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("OverrideInputs_InValue[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 208.279;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 591.721;
	}
}

TRANSITION_LIST("OverrideInputs_InValue[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 208.297;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 591.703;
	}
}

TRANSITION_LIST("OverrideInputs_InValue[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 208.421;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 591.579;
	}
}

TRANSITION_LIST("OverrideInputs_InValue[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("OverrideInputs_InValue[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("OverrideInputs_InValue[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("OverrideInputs_InValue[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "InOverride";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "InValue";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
	CHILDREN = 2, 3, 4, 5, 6, 7, 8, 9;
}

DISPLAY_LINE
{
	CHANNEL = "InValue[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 2;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "InValue[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "InValue[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "InValue[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "InValue[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "InValue[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "InValue[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "InValue[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "OverrideInputs_InOverride";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 10;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "OverrideInputs_InValue";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 11;
	TREE_LEVEL = 0;
	CHILDREN = 12, 13, 14, 15, 16, 17, 18, 19;
}

DISPLAY_LINE
{
	CHANNEL = "OverrideInputs_InValue[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "OverrideInputs_InValue[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "OverrideInputs_InValue[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "OverrideInputs_InValue[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "OverrideInputs_InValue[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "OverrideInputs_InValue[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "OverrideInputs_InValue[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "OverrideInputs_InValue[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "NoOverrideValue";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 20;
	TREE_LEVEL = 0;
	CHILDREN = 21, 22, 23, 24, 25, 26, 27, 28;
}

DISPLAY_LINE
{
	CHANNEL = "NoOverrideValue[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 20;
}

DISPLAY_LINE
{
	CHANNEL = "NoOverrideValue[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 20;
}

DISPLAY_LINE
{
	CHANNEL = "NoOverrideValue[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 20;
}

DISPLAY_LINE
{
	CHANNEL = "NoOverrideValue[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 20;
}

DISPLAY_LINE
{
	CHANNEL = "NoOverrideValue[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 20;
}

DISPLAY_LINE
{
	CHANNEL = "NoOverrideValue[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 20;
}

DISPLAY_LINE
{
	CHANNEL = "NoOverrideValue[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 20;
}

DISPLAY_LINE
{
	CHANNEL = "NoOverrideValue[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 20;
}

DISPLAY_LINE
{
	CHANNEL = "AutoOverrideValue";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 29;
	TREE_LEVEL = 0;
	CHILDREN = 30, 31, 32, 33, 34, 35, 36, 37;
}

DISPLAY_LINE
{
	CHANNEL = "AutoOverrideValue[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 30;
	TREE_LEVEL = 1;
	PARENT = 29;
}

DISPLAY_LINE
{
	CHANNEL = "AutoOverrideValue[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 31;
	TREE_LEVEL = 1;
	PARENT = 29;
}

DISPLAY_LINE
{
	CHANNEL = "AutoOverrideValue[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 32;
	TREE_LEVEL = 1;
	PARENT = 29;
}

DISPLAY_LINE
{
	CHANNEL = "AutoOverrideValue[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 33;
	TREE_LEVEL = 1;
	PARENT = 29;
}

DISPLAY_LINE
{
	CHANNEL = "AutoOverrideValue[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 34;
	TREE_LEVEL = 1;
	PARENT = 29;
}

DISPLAY_LINE
{
	CHANNEL = "AutoOverrideValue[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 35;
	TREE_LEVEL = 1;
	PARENT = 29;
}

DISPLAY_LINE
{
	CHANNEL = "AutoOverrideValue[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 36;
	TREE_LEVEL = 1;
	PARENT = 29;
}

DISPLAY_LINE
{
	CHANNEL = "AutoOverrideValue[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 37;
	TREE_LEVEL = 1;
	PARENT = 29;
}

DISPLAY_LINE
{
	CHANNEL = "L1Value";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 38;
	TREE_LEVEL = 0;
	CHILDREN = 39, 40, 41, 42, 43, 44, 45, 46;
}

DISPLAY_LINE
{
	CHANNEL = "L1Value[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 39;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "L1Value[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 40;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "L1Value[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 41;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "L1Value[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 42;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "L1Value[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 43;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "L1Value[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 44;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "L1Value[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 45;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "L1Value[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 46;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "L2Value";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 47;
	TREE_LEVEL = 0;
	CHILDREN = 48, 49, 50, 51, 52, 53, 54, 55;
}

DISPLAY_LINE
{
	CHANNEL = "L2Value[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 48;
	TREE_LEVEL = 1;
	PARENT = 47;
}

DISPLAY_LINE
{
	CHANNEL = "L2Value[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 49;
	TREE_LEVEL = 1;
	PARENT = 47;
}

DISPLAY_LINE
{
	CHANNEL = "L2Value[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 50;
	TREE_LEVEL = 1;
	PARENT = 47;
}

DISPLAY_LINE
{
	CHANNEL = "L2Value[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 51;
	TREE_LEVEL = 1;
	PARENT = 47;
}

DISPLAY_LINE
{
	CHANNEL = "L2Value[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 52;
	TREE_LEVEL = 1;
	PARENT = 47;
}

DISPLAY_LINE
{
	CHANNEL = "L2Value[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 53;
	TREE_LEVEL = 1;
	PARENT = 47;
}

DISPLAY_LINE
{
	CHANNEL = "L2Value[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 54;
	TREE_LEVEL = 1;
	PARENT = 47;
}

DISPLAY_LINE
{
	CHANNEL = "L2Value[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 55;
	TREE_LEVEL = 1;
	PARENT = 47;
}

DISPLAY_LINE
{
	CHANNEL = "L3Value";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 56;
	TREE_LEVEL = 0;
	CHILDREN = 57, 58, 59, 60, 61, 62, 63, 64;
}

DISPLAY_LINE
{
	CHANNEL = "L3Value[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 57;
	TREE_LEVEL = 1;
	PARENT = 56;
}

DISPLAY_LINE
{
	CHANNEL = "L3Value[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 58;
	TREE_LEVEL = 1;
	PARENT = 56;
}

DISPLAY_LINE
{
	CHANNEL = "L3Value[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 59;
	TREE_LEVEL = 1;
	PARENT = 56;
}

DISPLAY_LINE
{
	CHANNEL = "L3Value[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 60;
	TREE_LEVEL = 1;
	PARENT = 56;
}

DISPLAY_LINE
{
	CHANNEL = "L3Value[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 61;
	TREE_LEVEL = 1;
	PARENT = 56;
}

DISPLAY_LINE
{
	CHANNEL = "L3Value[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 62;
	TREE_LEVEL = 1;
	PARENT = 56;
}

DISPLAY_LINE
{
	CHANNEL = "L3Value[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 63;
	TREE_LEVEL = 1;
	PARENT = 56;
}

DISPLAY_LINE
{
	CHANNEL = "L3Value[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 64;
	TREE_LEVEL = 1;
	PARENT = 56;
}

DISPLAY_LINE
{
	CHANNEL = "GetValue";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 65;
	TREE_LEVEL = 0;
	CHILDREN = 66, 67, 68, 69, 70, 71, 72, 73;
}

DISPLAY_LINE
{
	CHANNEL = "GetValue[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 66;
	TREE_LEVEL = 1;
	PARENT = 65;
}

DISPLAY_LINE
{
	CHANNEL = "GetValue[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 67;
	TREE_LEVEL = 1;
	PARENT = 65;
}

DISPLAY_LINE
{
	CHANNEL = "GetValue[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 68;
	TREE_LEVEL = 1;
	PARENT = 65;
}

DISPLAY_LINE
{
	CHANNEL = "GetValue[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 69;
	TREE_LEVEL = 1;
	PARENT = 65;
}

DISPLAY_LINE
{
	CHANNEL = "GetValue[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 70;
	TREE_LEVEL = 1;
	PARENT = 65;
}

DISPLAY_LINE
{
	CHANNEL = "GetValue[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 71;
	TREE_LEVEL = 1;
	PARENT = 65;
}

DISPLAY_LINE
{
	CHANNEL = "GetValue[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 72;
	TREE_LEVEL = 1;
	PARENT = 65;
}

DISPLAY_LINE
{
	CHANNEL = "GetValue[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 73;
	TREE_LEVEL = 1;
	PARENT = 65;
}

DISPLAY_LINE
{
	CHANNEL = "RawInputs_InOverride";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 74;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "RawInputs_InValue";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 75;
	TREE_LEVEL = 0;
	CHILDREN = 76, 77, 78, 79, 80, 81, 82, 83;
}

DISPLAY_LINE
{
	CHANNEL = "RawInputs_InValue[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 76;
	TREE_LEVEL = 1;
	PARENT = 75;
}

DISPLAY_LINE
{
	CHANNEL = "RawInputs_InValue[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 77;
	TREE_LEVEL = 1;
	PARENT = 75;
}

DISPLAY_LINE
{
	CHANNEL = "RawInputs_InValue[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 78;
	TREE_LEVEL = 1;
	PARENT = 75;
}

DISPLAY_LINE
{
	CHANNEL = "RawInputs_InValue[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 79;
	TREE_LEVEL = 1;
	PARENT = 75;
}

DISPLAY_LINE
{
	CHANNEL = "RawInputs_InValue[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 80;
	TREE_LEVEL = 1;
	PARENT = 75;
}

DISPLAY_LINE
{
	CHANNEL = "RawInputs_InValue[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 81;
	TREE_LEVEL = 1;
	PARENT = 75;
}

DISPLAY_LINE
{
	CHANNEL = "RawInputs_InValue[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 82;
	TREE_LEVEL = 1;
	PARENT = 75;
}

DISPLAY_LINE
{
	CHANNEL = "RawInputs_InValue[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 83;
	TREE_LEVEL = 1;
	PARENT = 75;
}

TIME_BAR
{
	TIME = 14650;
	MASTER = TRUE;
}
;
