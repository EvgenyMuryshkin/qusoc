/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2010 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	PRINT_OPTIONS = "Print_options_version 6\
range_start 0ps\
range_end 1.0us\
width 1\
names_percentage 25\
comments 1\
grid_lines 1\
time_bars 1\
name_every_page 0\
expand_groups 0\
print_all 1\
print_row_height 100";
	DATA_OFFSET = 0.0;
	DATA_DURATION = 1000.0;
	SIMULATION_TIME = 1000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("InOverride")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("InValue")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("InValue[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "InValue";
}

SIGNAL("InValue[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "InValue";
}

SIGNAL("InValue[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "InValue";
}

SIGNAL("InValue[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "InValue";
}

SIGNAL("InValue[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "InValue";
}

SIGNAL("InValue[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "InValue";
}

SIGNAL("InValue[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "InValue";
}

SIGNAL("InValue[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "InValue";
}

SIGNAL("NoOverrideValue")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("NoOverrideValue[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "NoOverrideValue";
}

SIGNAL("NoOverrideValue[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "NoOverrideValue";
}

SIGNAL("NoOverrideValue[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "NoOverrideValue";
}

SIGNAL("NoOverrideValue[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "NoOverrideValue";
}

SIGNAL("NoOverrideValue[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "NoOverrideValue";
}

SIGNAL("NoOverrideValue[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "NoOverrideValue";
}

SIGNAL("NoOverrideValue[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "NoOverrideValue";
}

SIGNAL("NoOverrideValue[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "NoOverrideValue";
}

SIGNAL("AutoOverrideValue")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("AutoOverrideValue[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AutoOverrideValue";
}

SIGNAL("AutoOverrideValue[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AutoOverrideValue";
}

SIGNAL("AutoOverrideValue[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AutoOverrideValue";
}

SIGNAL("AutoOverrideValue[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AutoOverrideValue";
}

SIGNAL("AutoOverrideValue[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AutoOverrideValue";
}

SIGNAL("AutoOverrideValue[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AutoOverrideValue";
}

SIGNAL("AutoOverrideValue[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AutoOverrideValue";
}

SIGNAL("AutoOverrideValue[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "AutoOverrideValue";
}

SIGNAL("L1Value")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("L1Value[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "L1Value";
}

SIGNAL("L1Value[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "L1Value";
}

SIGNAL("L1Value[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "L1Value";
}

SIGNAL("L1Value[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "L1Value";
}

SIGNAL("L1Value[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "L1Value";
}

SIGNAL("L1Value[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "L1Value";
}

SIGNAL("L1Value[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "L1Value";
}

SIGNAL("L1Value[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "L1Value";
}

SIGNAL("L2Value")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("L2Value[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "L2Value";
}

SIGNAL("L2Value[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "L2Value";
}

SIGNAL("L2Value[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "L2Value";
}

SIGNAL("L2Value[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "L2Value";
}

SIGNAL("L2Value[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "L2Value";
}

SIGNAL("L2Value[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "L2Value";
}

SIGNAL("L2Value[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "L2Value";
}

SIGNAL("L2Value[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "L2Value";
}

SIGNAL("L3Value")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("L3Value[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "L3Value";
}

SIGNAL("L3Value[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "L3Value";
}

SIGNAL("L3Value[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "L3Value";
}

SIGNAL("L3Value[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "L3Value";
}

SIGNAL("L3Value[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "L3Value";
}

SIGNAL("L3Value[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "L3Value";
}

SIGNAL("L3Value[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "L3Value";
}

SIGNAL("L3Value[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "L3Value";
}

SIGNAL("GetValue")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("GetValue[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "GetValue";
}

SIGNAL("GetValue[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "GetValue";
}

SIGNAL("GetValue[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "GetValue";
}

SIGNAL("GetValue[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "GetValue";
}

SIGNAL("GetValue[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "GetValue";
}

SIGNAL("GetValue[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "GetValue";
}

SIGNAL("GetValue[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "GetValue";
}

SIGNAL("GetValue[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "GetValue";
}

SIGNAL("RawInputs_InOverride")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("RawInputs_InValue")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("RawInputs_InValue[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "RawInputs_InValue";
}

SIGNAL("RawInputs_InValue[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "RawInputs_InValue";
}

SIGNAL("RawInputs_InValue[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "RawInputs_InValue";
}

SIGNAL("RawInputs_InValue[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "RawInputs_InValue";
}

SIGNAL("RawInputs_InValue[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "RawInputs_InValue";
}

SIGNAL("RawInputs_InValue[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "RawInputs_InValue";
}

SIGNAL("RawInputs_InValue[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "RawInputs_InValue";
}

SIGNAL("RawInputs_InValue[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "RawInputs_InValue";
}

SIGNAL("OverrideInputs_InOverride")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("OverrideInputs_InValue")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 8;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("OverrideInputs_InValue[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OverrideInputs_InValue";
}

SIGNAL("OverrideInputs_InValue[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OverrideInputs_InValue";
}

SIGNAL("OverrideInputs_InValue[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OverrideInputs_InValue";
}

SIGNAL("OverrideInputs_InValue[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OverrideInputs_InValue";
}

SIGNAL("OverrideInputs_InValue[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OverrideInputs_InValue";
}

SIGNAL("OverrideInputs_InValue[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OverrideInputs_InValue";
}

SIGNAL("OverrideInputs_InValue[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OverrideInputs_InValue";
}

SIGNAL("OverrideInputs_InValue[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "OverrideInputs_InValue";
}

TRANSITION_LIST("InOverride")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 600.0;
	}
}

TRANSITION_LIST("InValue[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("InValue[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 600.0;
	}
}

TRANSITION_LIST("InValue[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 600.0;
	}
}

TRANSITION_LIST("InValue[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 600.0;
	}
}

TRANSITION_LIST("InValue[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("InValue[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("InValue[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("InValue[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("NoOverrideValue[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 109.558;
		LEVEL 0 FOR 0.693;
		LEVEL 1 FOR 99.307;
		LEVEL 0 FOR 1.128;
		LEVEL 1 FOR 98.872;
		LEVEL 0 FOR 0.988;
		LEVEL 1 FOR 99.012;
		LEVEL 0 FOR 0.693;
		LEVEL 1 FOR 589.749;
	}
}

TRANSITION_LIST("NoOverrideValue[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 113.561;
		LEVEL 1 FOR 0.386;
		LEVEL 0 FOR 99.614;
		LEVEL 1 FOR 0.75;
		LEVEL 0 FOR 0.778;
		LEVEL 1 FOR 98.472;
		LEVEL 0 FOR 0.61;
		LEVEL 1 FOR 99.39;
		LEVEL 0 FOR 0.386;
		LEVEL 1 FOR 1.142;
		LEVEL 0 FOR 584.911;
	}
}

TRANSITION_LIST("NoOverrideValue[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 110.078;
		LEVEL 1 FOR 0.473;
		LEVEL 0 FOR 99.527;
		LEVEL 1 FOR 0.681;
		LEVEL 0 FOR 0.265;
		LEVEL 1 FOR 99.054;
		LEVEL 0 FOR 0.541;
		LEVEL 1 FOR 99.459;
		LEVEL 0 FOR 0.473;
		LEVEL 1 FOR 0.473;
		LEVEL 0 FOR 588.976;
	}
}

TRANSITION_LIST("NoOverrideValue[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 109.857;
		LEVEL 1 FOR 0.385;
		LEVEL 0 FOR 99.615;
		LEVEL 1 FOR 0.525;
		LEVEL 0 FOR 0.74;
		LEVEL 1 FOR 98.735;
		LEVEL 0 FOR 0.385;
		LEVEL 1 FOR 99.615;
		LEVEL 0 FOR 0.525;
		LEVEL 1 FOR 0.74;
		LEVEL 0 FOR 588.878;
	}
}

TRANSITION_LIST("NoOverrideValue[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 110.069;
		LEVEL 1 FOR 0.387;
		LEVEL 0 FOR 99.613;
		LEVEL 1 FOR 0.457;
		LEVEL 0 FOR 99.543;
		LEVEL 1 FOR 0.387;
		LEVEL 0 FOR 99.613;
		LEVEL 1 FOR 0.457;
		LEVEL 0 FOR 589.474;
	}
}

TRANSITION_LIST("NoOverrideValue[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 110.067;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 0.385;
			LEVEL 0 FOR 99.615;
		}
		LEVEL 1 FOR 0.385;
		LEVEL 0 FOR 589.548;
	}
}

TRANSITION_LIST("NoOverrideValue[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 109.844;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 590.156;
	}
}

TRANSITION_LIST("NoOverrideValue[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("AutoOverrideValue[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("AutoOverrideValue[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 212.002;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 587.998;
	}
}

TRANSITION_LIST("AutoOverrideValue[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 210.513;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 589.487;
	}
}

TRANSITION_LIST("AutoOverrideValue[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 213.392;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 586.608;
	}
}

TRANSITION_LIST("AutoOverrideValue[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("AutoOverrideValue[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("AutoOverrideValue[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 109.983;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 590.017;
	}
}

TRANSITION_LIST("AutoOverrideValue[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 110.198;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 589.802;
	}
}

TRANSITION_LIST("L1Value[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 110.217;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 1.273;
		LEVEL 1 FOR 201.464;
		LEVEL 0 FOR 587.046;
	}
}

TRANSITION_LIST("L1Value[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 109.772;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 1.424;
		LEVEL 0 FOR 1.152;
		LEVEL 1 FOR 199.963;
		LEVEL 0 FOR 0.037;
		LEVEL 1 FOR 587.652;
	}
}

TRANSITION_LIST("L1Value[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 109.744;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 0.688;
		LEVEL 0 FOR 1.427;
		LEVEL 1 FOR 198.573;
		LEVEL 0 FOR 1.427;
		LEVEL 1 FOR 588.141;
	}
}

TRANSITION_LIST("L1Value[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 109.922;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 2.1;
		LEVEL 0 FOR 97.9;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 2.1;
		LEVEL 1 FOR 587.978;
	}
}

TRANSITION_LIST("L1Value[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 110.445;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 589.555;
	}
}

TRANSITION_LIST("L1Value[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 109.487;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 590.513;
	}
}

TRANSITION_LIST("L1Value[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("L1Value[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("L2Value[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 109.878;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 0.972;
		LEVEL 1 FOR 99.028;
		LEVEL 0 FOR 0.6;
		LEVEL 1 FOR 99.4;
		LEVEL 0 FOR 0.384;
		LEVEL 1 FOR 1.445;
		LEVEL 0 FOR 0.158;
		LEVEL 1 FOR 0.449;
		LEVEL 0 FOR 587.686;
	}
}

TRANSITION_LIST("L2Value[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 110.536;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 0.9;
		LEVEL 0 FOR 0.665;
		LEVEL 1 FOR 98.435;
		LEVEL 0 FOR 0.528;
		LEVEL 1 FOR 99.472;
		LEVEL 0 FOR 0.384;
		LEVEL 1 FOR 1.181;
		LEVEL 0 FOR 0.192;
		LEVEL 1 FOR 0.158;
		LEVEL 0 FOR 0.449;
		LEVEL 1 FOR 587.1;
	}
}

TRANSITION_LIST("L2Value[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 110.553;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 0.513;
		LEVEL 0 FOR 0.014;
		LEVEL 1 FOR 99.473;
		LEVEL 0 FOR 0.456;
		LEVEL 1 FOR 99.544;
		LEVEL 0 FOR 0.384;
		LEVEL 1 FOR 0.129;
		LEVEL 0 FOR 1.172;
		LEVEL 1 FOR 0.158;
		LEVEL 0 FOR 0.449;
		LEVEL 1 FOR 587.155;
	}
}

TRANSITION_LIST("L2Value[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 109.872;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 0.455;
		LEVEL 0 FOR 0.841;
		LEVEL 1 FOR 0.475;
		LEVEL 0 FOR 1.302;
		LEVEL 1 FOR 96.927;
		LEVEL 0 FOR 0.384;
		LEVEL 1 FOR 99.616;
		LEVEL 0 FOR 1.296;
		LEVEL 1 FOR 0.475;
		LEVEL 0 FOR 0.449;
		LEVEL 1 FOR 587.908;
	}
}

TRANSITION_LIST("L2Value[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 111.496;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 0.383;
		LEVEL 0 FOR 1.316;
		LEVEL 1 FOR 1.302;
		LEVEL 0 FOR 96.999;
		LEVEL 1 FOR 0.383;
		LEVEL 0 FOR 99.617;
		LEVEL 1 FOR 1.699;
		LEVEL 0 FOR 0.449;
		LEVEL 1 FOR 586.356;
	}
}

TRANSITION_LIST("L2Value[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 109.855;
		LEVEL 0 FOR 1.628;
		LEVEL 1 FOR 98.372;
		LEVEL 0 FOR 1.628;
		LEVEL 1 FOR 1.302;
		LEVEL 0 FOR 97.07;
		LEVEL 1 FOR 1.628;
		LEVEL 0 FOR 98.372;
		LEVEL 1 FOR 1.628;
		LEVEL 0 FOR 0.449;
		LEVEL 1 FOR 588.068;
	}
}

TRANSITION_LIST("L2Value[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 111.771;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 1.302;
		LEVEL 0 FOR 98.698;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 0.449;
		LEVEL 1 FOR 587.78;
	}
}

TRANSITION_LIST("L2Value[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("L3Value[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 109.675;
		LEVEL 0 FOR 0.693;
		LEVEL 1 FOR 99.307;
		LEVEL 0 FOR 0.764;
		LEVEL 1 FOR 99.236;
		LEVEL 0 FOR 0.987;
		LEVEL 1 FOR 99.013;
		LEVEL 0 FOR 0.693;
		LEVEL 1 FOR 589.632;
	}
}

TRANSITION_LIST("L3Value[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 109.961;
		LEVEL 1 FOR 0.386;
		LEVEL 0 FOR 99.614;
		LEVEL 1 FOR 0.386;
		LEVEL 0 FOR 1.005;
		LEVEL 1 FOR 98.609;
		LEVEL 0 FOR 0.609;
		LEVEL 1 FOR 99.391;
		LEVEL 0 FOR 0.54;
		LEVEL 1 FOR 0.851;
		LEVEL 0 FOR 588.648;
	}
}

TRANSITION_LIST("L3Value[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 110.543;
		LEVEL 1 FOR 0.471;
		LEVEL 0 FOR 99.367;
		LEVEL 1 FOR 0.162;
		LEVEL 0 FOR 0.756;
		LEVEL 1 FOR 99.244;
		LEVEL 0 FOR 0.54;
		LEVEL 1 FOR 99.298;
		LEVEL 0 FOR 0.162;
		LEVEL 1 FOR 0.471;
		LEVEL 0 FOR 588.986;
	}
}

TRANSITION_LIST("L3Value[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 110.249;
		LEVEL 1 FOR 0.386;
		LEVEL 0 FOR 99.614;
		LEVEL 1 FOR 0.602;
		LEVEL 0 FOR 0.289;
		LEVEL 1 FOR 99.109;
		LEVEL 0 FOR 0.386;
		LEVEL 1 FOR 99.614;
		LEVEL 0 FOR 0.602;
		LEVEL 1 FOR 0.289;
		LEVEL 0 FOR 588.86;
	}
}

TRANSITION_LIST("L3Value[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 110.429;
		LEVEL 1 FOR 0.46;
		LEVEL 0 FOR 99.54;
		LEVEL 1 FOR 0.533;
		LEVEL 0 FOR 99.467;
		LEVEL 1 FOR 0.46;
		LEVEL 0 FOR 99.54;
		LEVEL 1 FOR 0.533;
		LEVEL 0 FOR 589.038;
	}
}

TRANSITION_LIST("L3Value[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 110.372;
		LEVEL 1 FOR 100.073;
		LEVEL 0 FOR 99.927;
		LEVEL 1 FOR 100.073;
		LEVEL 0 FOR 589.555;
	}
}

TRANSITION_LIST("L3Value[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 110.192;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 0.39;
			LEVEL 0 FOR 99.61;
		}
		LEVEL 1 FOR 0.39;
		LEVEL 0 FOR 589.418;
	}
}

TRANSITION_LIST("L3Value[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 110.454;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 589.546;
	}
}

TRANSITION_LIST("GetValue[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 110.099;
		LEVEL 0 FOR 0.382;
		LEVEL 1 FOR 99.618;
		LEVEL 0 FOR 0.977;
		LEVEL 1 FOR 99.023;
		LEVEL 0 FOR 0.594;
		LEVEL 1 FOR 99.406;
		LEVEL 0 FOR 0.382;
		LEVEL 1 FOR 589.519;
	}
}

TRANSITION_LIST("GetValue[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 110.437;
		LEVEL 1 FOR 0.382;
		LEVEL 0 FOR 99.618;
		LEVEL 1 FOR 0.907;
		LEVEL 0 FOR 0.663;
		LEVEL 1 FOR 98.43;
		LEVEL 0 FOR 0.524;
		LEVEL 1 FOR 99.476;
		LEVEL 0 FOR 0.382;
		LEVEL 1 FOR 1.188;
		LEVEL 0 FOR 587.993;
	}
}

TRANSITION_LIST("GetValue[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 110.562;
		LEVEL 1 FOR 0.383;
		LEVEL 0 FOR 99.617;
		LEVEL 1 FOR 0.522;
		LEVEL 0 FOR 0.004;
		LEVEL 1 FOR 99.474;
		LEVEL 0 FOR 0.454;
		LEVEL 1 FOR 99.546;
		LEVEL 0 FOR 0.383;
		LEVEL 1 FOR 0.139;
		LEVEL 0 FOR 588.916;
	}
}

TRANSITION_LIST("GetValue[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 110.291;
		LEVEL 1 FOR 0.383;
		LEVEL 0 FOR 99.617;
		LEVEL 1 FOR 0.455;
		LEVEL 0 FOR 0.851;
		LEVEL 1 FOR 98.694;
		LEVEL 0 FOR 0.383;
		LEVEL 1 FOR 99.617;
		LEVEL 0 FOR 0.455;
		LEVEL 1 FOR 0.851;
		LEVEL 0 FOR 588.403;
	}
}

TRANSITION_LIST("GetValue[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 110.521;
		NODE
		{
			REPEAT = 3;
			LEVEL 1 FOR 0.384;
			LEVEL 0 FOR 99.616;
		}
		LEVEL 1 FOR 0.384;
		LEVEL 0 FOR 589.095;
	}
}

TRANSITION_LIST("GetValue[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 112.256;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 587.744;
	}
}

TRANSITION_LIST("GetValue[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("GetValue[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("RawInputs_InOverride")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 108.566;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 591.434;
	}
}

TRANSITION_LIST("RawInputs_InValue[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("RawInputs_InValue[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 208.879;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 591.121;
	}
}

TRANSITION_LIST("RawInputs_InValue[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 208.47;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 591.53;
	}
}

TRANSITION_LIST("RawInputs_InValue[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 208.522;
		LEVEL 0 FOR 200.0;
		LEVEL 1 FOR 591.478;
	}
}

TRANSITION_LIST("RawInputs_InValue[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("RawInputs_InValue[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("RawInputs_InValue[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("RawInputs_InValue[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("OverrideInputs_InOverride")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 108.566;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 591.434;
	}
}

TRANSITION_LIST("OverrideInputs_InValue[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
	}
}

TRANSITION_LIST("OverrideInputs_InValue[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 208.917;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 591.083;
	}
}

TRANSITION_LIST("OverrideInputs_InValue[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 208.47;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 591.53;
	}
}

TRANSITION_LIST("OverrideInputs_InValue[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 208.907;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 591.093;
	}
}

TRANSITION_LIST("OverrideInputs_InValue[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("OverrideInputs_InValue[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("OverrideInputs_InValue[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("OverrideInputs_InValue[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 1000.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "InOverride";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "InValue";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
	CHILDREN = 2, 3, 4, 5, 6, 7, 8, 9;
}

DISPLAY_LINE
{
	CHANNEL = "InValue[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 2;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "InValue[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 3;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "InValue[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "InValue[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "InValue[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "InValue[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "InValue[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "InValue[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 1;
}

DISPLAY_LINE
{
	CHANNEL = "OverrideInputs_InOverride";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 10;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "OverrideInputs_InValue";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 11;
	TREE_LEVEL = 0;
	CHILDREN = 12, 13, 14, 15, 16, 17, 18, 19;
}

DISPLAY_LINE
{
	CHANNEL = "OverrideInputs_InValue[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "OverrideInputs_InValue[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "OverrideInputs_InValue[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "OverrideInputs_InValue[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "OverrideInputs_InValue[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "OverrideInputs_InValue[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "OverrideInputs_InValue[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "OverrideInputs_InValue[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 11;
}

DISPLAY_LINE
{
	CHANNEL = "NoOverrideValue";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 20;
	TREE_LEVEL = 0;
	CHILDREN = 21, 22, 23, 24, 25, 26, 27, 28;
}

DISPLAY_LINE
{
	CHANNEL = "NoOverrideValue[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 20;
}

DISPLAY_LINE
{
	CHANNEL = "NoOverrideValue[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 20;
}

DISPLAY_LINE
{
	CHANNEL = "NoOverrideValue[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 20;
}

DISPLAY_LINE
{
	CHANNEL = "NoOverrideValue[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 24;
	TREE_LEVEL = 1;
	PARENT = 20;
}

DISPLAY_LINE
{
	CHANNEL = "NoOverrideValue[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 20;
}

DISPLAY_LINE
{
	CHANNEL = "NoOverrideValue[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 20;
}

DISPLAY_LINE
{
	CHANNEL = "NoOverrideValue[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 20;
}

DISPLAY_LINE
{
	CHANNEL = "NoOverrideValue[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 28;
	TREE_LEVEL = 1;
	PARENT = 20;
}

DISPLAY_LINE
{
	CHANNEL = "AutoOverrideValue";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 29;
	TREE_LEVEL = 0;
	CHILDREN = 30, 31, 32, 33, 34, 35, 36, 37;
}

DISPLAY_LINE
{
	CHANNEL = "AutoOverrideValue[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 30;
	TREE_LEVEL = 1;
	PARENT = 29;
}

DISPLAY_LINE
{
	CHANNEL = "AutoOverrideValue[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 31;
	TREE_LEVEL = 1;
	PARENT = 29;
}

DISPLAY_LINE
{
	CHANNEL = "AutoOverrideValue[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 32;
	TREE_LEVEL = 1;
	PARENT = 29;
}

DISPLAY_LINE
{
	CHANNEL = "AutoOverrideValue[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 33;
	TREE_LEVEL = 1;
	PARENT = 29;
}

DISPLAY_LINE
{
	CHANNEL = "AutoOverrideValue[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 34;
	TREE_LEVEL = 1;
	PARENT = 29;
}

DISPLAY_LINE
{
	CHANNEL = "AutoOverrideValue[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 35;
	TREE_LEVEL = 1;
	PARENT = 29;
}

DISPLAY_LINE
{
	CHANNEL = "AutoOverrideValue[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 36;
	TREE_LEVEL = 1;
	PARENT = 29;
}

DISPLAY_LINE
{
	CHANNEL = "AutoOverrideValue[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 37;
	TREE_LEVEL = 1;
	PARENT = 29;
}

DISPLAY_LINE
{
	CHANNEL = "L1Value";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 38;
	TREE_LEVEL = 0;
	CHILDREN = 39, 40, 41, 42, 43, 44, 45, 46;
}

DISPLAY_LINE
{
	CHANNEL = "L1Value[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 39;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "L1Value[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 40;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "L1Value[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 41;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "L1Value[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 42;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "L1Value[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 43;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "L1Value[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 44;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "L1Value[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 45;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "L1Value[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 46;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "L2Value";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 47;
	TREE_LEVEL = 0;
	CHILDREN = 48, 49, 50, 51, 52, 53, 54, 55;
}

DISPLAY_LINE
{
	CHANNEL = "L2Value[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 48;
	TREE_LEVEL = 1;
	PARENT = 47;
}

DISPLAY_LINE
{
	CHANNEL = "L2Value[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 49;
	TREE_LEVEL = 1;
	PARENT = 47;
}

DISPLAY_LINE
{
	CHANNEL = "L2Value[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 50;
	TREE_LEVEL = 1;
	PARENT = 47;
}

DISPLAY_LINE
{
	CHANNEL = "L2Value[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 51;
	TREE_LEVEL = 1;
	PARENT = 47;
}

DISPLAY_LINE
{
	CHANNEL = "L2Value[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 52;
	TREE_LEVEL = 1;
	PARENT = 47;
}

DISPLAY_LINE
{
	CHANNEL = "L2Value[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 53;
	TREE_LEVEL = 1;
	PARENT = 47;
}

DISPLAY_LINE
{
	CHANNEL = "L2Value[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 54;
	TREE_LEVEL = 1;
	PARENT = 47;
}

DISPLAY_LINE
{
	CHANNEL = "L2Value[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 55;
	TREE_LEVEL = 1;
	PARENT = 47;
}

DISPLAY_LINE
{
	CHANNEL = "L3Value";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 56;
	TREE_LEVEL = 0;
	CHILDREN = 57, 58, 59, 60, 61, 62, 63, 64;
}

DISPLAY_LINE
{
	CHANNEL = "L3Value[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 57;
	TREE_LEVEL = 1;
	PARENT = 56;
}

DISPLAY_LINE
{
	CHANNEL = "L3Value[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 58;
	TREE_LEVEL = 1;
	PARENT = 56;
}

DISPLAY_LINE
{
	CHANNEL = "L3Value[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 59;
	TREE_LEVEL = 1;
	PARENT = 56;
}

DISPLAY_LINE
{
	CHANNEL = "L3Value[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 60;
	TREE_LEVEL = 1;
	PARENT = 56;
}

DISPLAY_LINE
{
	CHANNEL = "L3Value[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 61;
	TREE_LEVEL = 1;
	PARENT = 56;
}

DISPLAY_LINE
{
	CHANNEL = "L3Value[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 62;
	TREE_LEVEL = 1;
	PARENT = 56;
}

DISPLAY_LINE
{
	CHANNEL = "L3Value[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 63;
	TREE_LEVEL = 1;
	PARENT = 56;
}

DISPLAY_LINE
{
	CHANNEL = "L3Value[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 64;
	TREE_LEVEL = 1;
	PARENT = 56;
}

DISPLAY_LINE
{
	CHANNEL = "GetValue";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 65;
	TREE_LEVEL = 0;
	CHILDREN = 66, 67, 68, 69, 70, 71, 72, 73;
}

DISPLAY_LINE
{
	CHANNEL = "GetValue[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 66;
	TREE_LEVEL = 1;
	PARENT = 65;
}

DISPLAY_LINE
{
	CHANNEL = "GetValue[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 67;
	TREE_LEVEL = 1;
	PARENT = 65;
}

DISPLAY_LINE
{
	CHANNEL = "GetValue[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 68;
	TREE_LEVEL = 1;
	PARENT = 65;
}

DISPLAY_LINE
{
	CHANNEL = "GetValue[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 69;
	TREE_LEVEL = 1;
	PARENT = 65;
}

DISPLAY_LINE
{
	CHANNEL = "GetValue[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 70;
	TREE_LEVEL = 1;
	PARENT = 65;
}

DISPLAY_LINE
{
	CHANNEL = "GetValue[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 71;
	TREE_LEVEL = 1;
	PARENT = 65;
}

DISPLAY_LINE
{
	CHANNEL = "GetValue[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 72;
	TREE_LEVEL = 1;
	PARENT = 65;
}

DISPLAY_LINE
{
	CHANNEL = "GetValue[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 73;
	TREE_LEVEL = 1;
	PARENT = 65;
}

DISPLAY_LINE
{
	CHANNEL = "RawInputs_InOverride";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 74;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "RawInputs_InValue";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 75;
	TREE_LEVEL = 0;
	CHILDREN = 76, 77, 78, 79, 80, 81, 82, 83;
}

DISPLAY_LINE
{
	CHANNEL = "RawInputs_InValue[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 76;
	TREE_LEVEL = 1;
	PARENT = 75;
}

DISPLAY_LINE
{
	CHANNEL = "RawInputs_InValue[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 77;
	TREE_LEVEL = 1;
	PARENT = 75;
}

DISPLAY_LINE
{
	CHANNEL = "RawInputs_InValue[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 78;
	TREE_LEVEL = 1;
	PARENT = 75;
}

DISPLAY_LINE
{
	CHANNEL = "RawInputs_InValue[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 79;
	TREE_LEVEL = 1;
	PARENT = 75;
}

DISPLAY_LINE
{
	CHANNEL = "RawInputs_InValue[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 80;
	TREE_LEVEL = 1;
	PARENT = 75;
}

DISPLAY_LINE
{
	CHANNEL = "RawInputs_InValue[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 81;
	TREE_LEVEL = 1;
	PARENT = 75;
}

DISPLAY_LINE
{
	CHANNEL = "RawInputs_InValue[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 82;
	TREE_LEVEL = 1;
	PARENT = 75;
}

DISPLAY_LINE
{
	CHANNEL = "RawInputs_InValue[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 83;
	TREE_LEVEL = 1;
	PARENT = 75;
}

TIME_BAR
{
	TIME = 14650;
	MASTER = TRUE;
}
;
