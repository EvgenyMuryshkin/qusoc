-- PLEASE READ THIS, IT MAY SAVE YOU SOME TIME AND MONEY, THANK YOU!
-- * This file was generated by Quokka FPGA Toolkit.
-- * Generated code is your property, do whatever you want with it
-- * Place custom code between [BEGIN USER ***] and [END USER ***].
-- * CAUTION: All code outside of [USER] scope is subject to regeneration.
-- * Bad things happen sometimes in developer's life,
--   it is recommended to use source control management software (e.g. git, bzr etc) to keep your custom code safe'n'sound.
-- * Internal structure of code is subject to change.
--   You can use some of signals in custom code, but most likely they will not exist in future (e.g. will get shorter or gone completely)
-- * Please send your feedback, comments, improvement ideas etc. to evmuryshkin@gmail.com
-- * Visit https://github.com/EvgenyMuryshkin/QuokkaEvaluation to access latest version of playground
--
-- DISCLAIMER:
--   Code comes AS-IS, it is your responsibility to make sure it is working as expected
--   no responsibility will be taken for any loss or damage caused by use of Quokka toolkit.
--
-- System configuration name is AXI4MemoryModuleB4_TopLevel, clock frequency is 1Hz, Top-level
library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;
use work.Quokka.all;
entity AXI4MemoryModuleB4_TopLevel is
	port
	(
		-- [BEGIN USER PORTS]
		-- [END USER PORTS]
		Clock : in std_logic;
		Reset : in std_logic;
		M2S_AR_ARID : in unsigned (7 downto 0);
		M2S_AR_ARADDR : in unsigned (31 downto 0);
		M2S_AR_ARLEN : in unsigned (7 downto 0);
		M2S_AR_ARSIZE : in unsigned (2 downto 0);
		M2S_AR_ARBURST : in unsigned (1 downto 0);
		M2S_AR_ARLOCK : in unsigned (1 downto 0);
		M2S_AR_ARCACHE : in unsigned (3 downto 0);
		M2S_AR_ARPROT : in unsigned (2 downto 0);
		M2S_AR_ARQOS : in unsigned (3 downto 0);
		M2S_AR_ARREGION : in unsigned (7 downto 0);
		M2S_AR_ARUSER : in unsigned (7 downto 0);
		M2S_AR_ARVALID : in std_logic;
		M2S_R_RREADY : in std_logic;
		M2S_AW_AWID : in unsigned (7 downto 0);
		M2S_AW_AWADDR : in unsigned (31 downto 0);
		M2S_AW_AWLEN : in unsigned (7 downto 0);
		M2S_AW_AWSIZE : in unsigned (2 downto 0);
		M2S_AW_AWBURST : in unsigned (1 downto 0);
		M2S_AW_AWLOCK : in unsigned (1 downto 0);
		M2S_AW_AWCACHE : in unsigned (3 downto 0);
		M2S_AW_AWPROT : in unsigned (2 downto 0);
		M2S_AW_AWQOS : in unsigned (3 downto 0);
		M2S_AW_AWREGION : in unsigned (7 downto 0);
		M2S_AW_AWUSER : in unsigned (7 downto 0);
		M2S_AW_AWVALID : in std_logic;
		M2S_W_WID : in unsigned (7 downto 0);
		M2S_W_WDATA0 : in unsigned (7 downto 0);
		M2S_W_WDATA1 : in unsigned (7 downto 0);
		M2S_W_WDATA2 : in unsigned (7 downto 0);
		M2S_W_WDATA3 : in unsigned (7 downto 0);
		M2S_W_WSTRB : in unsigned (3 downto 0);
		M2S_W_WLAST : in std_logic;
		M2S_W_WUSER : in unsigned (7 downto 0);
		M2S_W_WVALID : in std_logic;
		M2S_B_BREADY : in std_logic;
		S2M_AR_ARREADY : out std_logic;
		S2M_AW_AWREADY : out std_logic;
		S2M_B_BID : out unsigned (7 downto 0);
		S2M_B_BRESP : out unsigned (1 downto 0);
		S2M_B_BUSER : out unsigned (7 downto 0);
		S2M_B_BVALID : out std_logic;
		S2M_R_RID : out unsigned (7 downto 0);
		S2M_R_RDATA0 : out unsigned (7 downto 0);
		S2M_R_RDATA1 : out unsigned (7 downto 0);
		S2M_R_RDATA2 : out unsigned (7 downto 0);
		S2M_R_RDATA3 : out unsigned (7 downto 0);
		S2M_R_RRESP : out unsigned (1 downto 0);
		S2M_R_RLAST : out std_logic;
		S2M_R_RUSER : out unsigned (7 downto 0);
		S2M_R_RVALID : out std_logic;
		S2M_W_WREADY : out std_logic
	);
end entity;
-- FSM summary
-- Packages
architecture rtl of AXI4MemoryModuleB4_TopLevel is
	-- [BEGIN USER SIGNALS]
	-- [END USER SIGNALS]
	constant HiSignal : std_logic := '1';
	constant LoSignal : std_logic := '0';
	constant Zero : std_logic := '0';
	constant One : std_logic := '1';
	constant true : std_logic := '1';
	constant false : std_logic := '0';
	constant size : unsigned(1 downto 0) := "10";
	constant AXI4MemoryModule_L95F29T33_Expr : std_logic := '1';
	constant AXI4MemoryModule_L96F28T32_Expr : std_logic := '1';
	constant AXI4MemoryModule_L97F29T33_Expr : std_logic := '1';
	constant AXI4MemoryModule_L98F28T32_Expr : std_logic := '1';
	constant AXI4MemoryModule_L99F28T32_Expr : std_logic := '1';
	constant AXI4MemoryModule_L104F9L136T10_AXI4MemoryModule_L106F13L109T14_AXI4MemoryModule_L108F38T42_Expr : std_logic := '1';
	constant AXI4MemoryModule_L104F9L136T10_AXI4MemoryModule_L112F13L116T14_AXI4MemoryModule_L115F38T42_Expr : std_logic := '1';
	constant AXI4MemoryModule_L104F9L136T10_AXI4MemoryModule_L119F13L122T14_AXI4MemoryModule_L120F38T43_Expr : std_logic := '0';
	constant AXI4MemoryModule_L104F9L136T10_AXI4MemoryModule_L119F13L122T14_AXI4MemoryModule_L121F38T43_Expr : std_logic := '0';
	constant AXI4MemoryModule_L104F9L136T10_AXI4MemoryModule_L124F13L128T14_0_w : std_logic := '0';
	constant AXI4MemoryModule_L104F9L136T10_AXI4MemoryModule_L124F13L128T14_1_w : std_logic := '1';
	constant AXI4MemoryModule_L104F9L136T10_AXI4MemoryModule_L124F13L128T14_2_w : unsigned(1 downto 0) := "10";
	constant AXI4MemoryModule_L104F9L136T10_AXI4MemoryModule_L124F13L128T14_3_w : unsigned(1 downto 0) := "11";
	signal Inputs_M2S_AR_ARID : unsigned(7 downto 0) := (others => '0');
	signal Inputs_M2S_AR_ARADDR : unsigned(31 downto 0) := (others => '0');
	signal Inputs_M2S_AR_ARLEN : unsigned(7 downto 0) := (others => '0');
	signal Inputs_M2S_AR_ARSIZE : unsigned(2 downto 0) := (others => '0');
	signal Inputs_M2S_AR_ARBURST : unsigned(1 downto 0) := (others => '0');
	signal Inputs_M2S_AR_ARLOCK : unsigned(1 downto 0) := (others => '0');
	signal Inputs_M2S_AR_ARCACHE : unsigned(3 downto 0) := (others => '0');
	signal Inputs_M2S_AR_ARPROT : unsigned(2 downto 0) := (others => '0');
	signal Inputs_M2S_AR_ARQOS : unsigned(3 downto 0) := (others => '0');
	signal Inputs_M2S_AR_ARREGION : unsigned(7 downto 0) := (others => '0');
	signal Inputs_M2S_AR_ARUSER : unsigned(7 downto 0) := (others => '0');
	signal Inputs_M2S_AR_ARVALID : std_logic := '0';
	signal Inputs_M2S_R_RREADY : std_logic := '0';
	signal Inputs_M2S_AW_AWID : unsigned(7 downto 0) := (others => '0');
	signal Inputs_M2S_AW_AWADDR : unsigned(31 downto 0) := (others => '0');
	signal Inputs_M2S_AW_AWLEN : unsigned(7 downto 0) := (others => '0');
	signal Inputs_M2S_AW_AWSIZE : unsigned(2 downto 0) := (others => '0');
	signal Inputs_M2S_AW_AWBURST : unsigned(1 downto 0) := (others => '0');
	signal Inputs_M2S_AW_AWLOCK : unsigned(1 downto 0) := (others => '0');
	signal Inputs_M2S_AW_AWCACHE : unsigned(3 downto 0) := (others => '0');
	signal Inputs_M2S_AW_AWPROT : unsigned(2 downto 0) := (others => '0');
	signal Inputs_M2S_AW_AWQOS : unsigned(3 downto 0) := (others => '0');
	signal Inputs_M2S_AW_AWREGION : unsigned(7 downto 0) := (others => '0');
	signal Inputs_M2S_AW_AWUSER : unsigned(7 downto 0) := (others => '0');
	signal Inputs_M2S_AW_AWVALID : std_logic := '0';
	signal Inputs_M2S_W_WID : unsigned(7 downto 0) := (others => '0');
	signal Inputs_M2S_W_WSTRB : unsigned(3 downto 0) := (others => '0');
	signal Inputs_M2S_W_WLAST : std_logic := '0';
	signal Inputs_M2S_W_WUSER : unsigned(7 downto 0) := (others => '0');
	signal Inputs_M2S_W_WVALID : std_logic := '0';
	signal Inputs_M2S_B_BREADY : std_logic := '0';
	signal NextState_raddr : unsigned(31 downto 0) := (others => '0');
	signal NextState_waddrSet : std_logic := '0';
	signal NextState_wdataSet : std_logic := '0';
	signal NextState_waddr : unsigned(31 downto 0) := (others => '0');
	signal NextState_wstrb : unsigned(3 downto 0) := (others => '0');
	signal internalSameTxWrite : std_logic := '0';
	signal internalDelayedTxWrite : std_logic := '0';
	signal internalWE : std_logic := '0';
	signal internalWSTRB : unsigned(3 downto 0) := (others => '0');
	signal internalWADDR : unsigned(31 downto 0) := (others => '0');
	signal internalRADDR : unsigned(31 downto 0) := (others => '0');
	signal axiSlave_M2S_AR_ARID : unsigned(7 downto 0) := (others => '0');
	signal axiSlave_M2S_AR_ARADDR : unsigned(31 downto 0) := (others => '0');
	signal axiSlave_M2S_AR_ARLEN : unsigned(7 downto 0) := (others => '0');
	signal axiSlave_M2S_AR_ARSIZE : unsigned(2 downto 0) := (others => '0');
	signal axiSlave_M2S_AR_ARBURST : unsigned(1 downto 0) := (others => '0');
	signal axiSlave_M2S_AR_ARLOCK : unsigned(1 downto 0) := (others => '0');
	signal axiSlave_M2S_AR_ARCACHE : unsigned(3 downto 0) := (others => '0');
	signal axiSlave_M2S_AR_ARPROT : unsigned(2 downto 0) := (others => '0');
	signal axiSlave_M2S_AR_ARQOS : unsigned(3 downto 0) := (others => '0');
	signal axiSlave_M2S_AR_ARREGION : unsigned(7 downto 0) := (others => '0');
	signal axiSlave_M2S_AR_ARUSER : unsigned(7 downto 0) := (others => '0');
	signal axiSlave_M2S_AR_ARVALID : std_logic := '0';
	signal axiSlave_M2S_R_RREADY : std_logic := '0';
	signal axiSlave_M2S_AW_AWID : unsigned(7 downto 0) := (others => '0');
	signal axiSlave_M2S_AW_AWADDR : unsigned(31 downto 0) := (others => '0');
	signal axiSlave_M2S_AW_AWLEN : unsigned(7 downto 0) := (others => '0');
	signal axiSlave_M2S_AW_AWSIZE : unsigned(2 downto 0) := (others => '0');
	signal axiSlave_M2S_AW_AWBURST : unsigned(1 downto 0) := (others => '0');
	signal axiSlave_M2S_AW_AWLOCK : unsigned(1 downto 0) := (others => '0');
	signal axiSlave_M2S_AW_AWCACHE : unsigned(3 downto 0) := (others => '0');
	signal axiSlave_M2S_AW_AWPROT : unsigned(2 downto 0) := (others => '0');
	signal axiSlave_M2S_AW_AWQOS : unsigned(3 downto 0) := (others => '0');
	signal axiSlave_M2S_AW_AWREGION : unsigned(7 downto 0) := (others => '0');
	signal axiSlave_M2S_AW_AWUSER : unsigned(7 downto 0) := (others => '0');
	signal axiSlave_M2S_AW_AWVALID : std_logic := '0';
	signal axiSlave_M2S_W_WID : unsigned(7 downto 0) := (others => '0');
	signal axiSlave_M2S_W_WSTRB : unsigned(3 downto 0) := (others => '0');
	signal axiSlave_M2S_W_WLAST : std_logic := '0';
	signal axiSlave_M2S_W_WUSER : unsigned(7 downto 0) := (others => '0');
	signal axiSlave_M2S_W_WVALID : std_logic := '0';
	signal axiSlave_M2S_B_BREADY : std_logic := '0';
	signal axiSlave_inARREADY : std_logic := '0';
	signal axiSlave_inRVALID : std_logic := '0';
	signal axiSlave_inAWREADY : std_logic := '0';
	signal axiSlave_inWREADY : std_logic := '0';
	signal axiSlave_inBVALID : std_logic := '0';
	signal axiSlave_S2M_AR_ARREADY : std_logic := '0';
	signal axiSlave_S2M_AW_AWREADY : std_logic := '0';
	signal axiSlave_S2M_B_BID : unsigned(7 downto 0) := (others => '0');
	signal axiSlave_S2M_B_BRESP : unsigned(1 downto 0) := (others => '0');
	signal axiSlave_S2M_B_BUSER : unsigned(7 downto 0) := (others => '0');
	signal axiSlave_S2M_B_BVALID : std_logic := '0';
	signal axiSlave_S2M_R_RID : unsigned(7 downto 0) := (others => '0');
	signal axiSlave_S2M_R_RRESP : unsigned(1 downto 0) := (others => '0');
	signal axiSlave_S2M_R_RLAST : std_logic := '0';
	signal axiSlave_S2M_R_RUSER : unsigned(7 downto 0) := (others => '0');
	signal axiSlave_S2M_R_RVALID : std_logic := '0';
	signal axiSlave_S2M_W_WREADY : std_logic := '0';
	signal axiSlave_outReadTXCompleting : std_logic := '0';
	signal axiSlave_outWriteTXCompleting : std_logic := '0';
	signal axiSlave_outARREADYConfirming : std_logic := '0';
	signal axiSlave_outARVALID : std_logic := '0';
	signal axiSlave_outARADDR : unsigned(31 downto 0) := (others => '0');
	signal axiSlave_outAWREADYConfirming : std_logic := '0';
	signal axiSlave_outAWVALID : std_logic := '0';
	signal axiSlave_outAWADDR : unsigned(31 downto 0) := (others => '0');
	signal axiSlave_outWREADYConfirming : std_logic := '0';
	signal axiSlave_outWVALID : std_logic := '0';
	signal axiSlave_outWSTRB : unsigned(3 downto 0) := (others => '0');
	signal AXI4MemoryModule_L104F9L136T10_AXI4MemoryModule_L124F13L128T14_0_AXI4MemoryModule_L125F13L128T14_AXI4MemoryModule_L126F35T51_Index : std_logic := '0';
	signal AXI4MemoryModule_L104F9L136T10_AXI4MemoryModule_L124F13L128T14_1_AXI4MemoryModule_L125F13L128T14_AXI4MemoryModule_L126F35T51_Index : std_logic := '0';
	signal AXI4MemoryModule_L104F9L136T10_AXI4MemoryModule_L124F13L128T14_2_AXI4MemoryModule_L125F13L128T14_AXI4MemoryModule_L126F35T51_Index : std_logic := '0';
	signal AXI4MemoryModule_L104F9L136T10_AXI4MemoryModule_L124F13L128T14_3_AXI4MemoryModule_L125F13L128T14_AXI4MemoryModule_L126F35T51_Index : std_logic := '0';
	signal State_wdataDefault : unsigned(7 downto 0) := "00000000";
	signal axiSlaveM2S_AR_ARIDaxiSlave_M2S_AR_ARIDHardLink : unsigned(7 downto 0) := "00000000";
	signal axiSlaveM2S_AR_ARADDRaxiSlave_M2S_AR_ARADDRHardLink : unsigned(31 downto 0) := "00000000000000000000000000000000";
	signal axiSlaveM2S_AR_ARLENaxiSlave_M2S_AR_ARLENHardLink : unsigned(7 downto 0) := "00000000";
	signal axiSlaveM2S_AR_ARSIZEaxiSlave_M2S_AR_ARSIZEHardLink : unsigned(2 downto 0) := "000";
	signal axiSlaveM2S_AR_ARBURSTaxiSlave_M2S_AR_ARBURSTHardLink : unsigned(1 downto 0) := "00";
	signal axiSlaveM2S_AR_ARLOCKaxiSlave_M2S_AR_ARLOCKHardLink : unsigned(1 downto 0) := "00";
	signal axiSlaveM2S_AR_ARCACHEaxiSlave_M2S_AR_ARCACHEHardLink : unsigned(3 downto 0) := "0000";
	signal axiSlaveM2S_AR_ARPROTaxiSlave_M2S_AR_ARPROTHardLink : unsigned(2 downto 0) := "000";
	signal axiSlaveM2S_AR_ARQOSaxiSlave_M2S_AR_ARQOSHardLink : unsigned(3 downto 0) := "0000";
	signal axiSlaveM2S_AR_ARREGIONaxiSlave_M2S_AR_ARREGIONHardLink : unsigned(7 downto 0) := "00000000";
	signal axiSlaveM2S_AR_ARUSERaxiSlave_M2S_AR_ARUSERHardLink : unsigned(7 downto 0) := "00000000";
	signal axiSlaveM2S_AR_ARVALIDaxiSlave_M2S_AR_ARVALIDHardLink : std_logic := '0';
	signal axiSlaveM2S_R_RREADYaxiSlave_M2S_R_RREADYHardLink : std_logic := '0';
	signal axiSlaveM2S_AW_AWIDaxiSlave_M2S_AW_AWIDHardLink : unsigned(7 downto 0) := "00000000";
	signal axiSlaveM2S_AW_AWADDRaxiSlave_M2S_AW_AWADDRHardLink : unsigned(31 downto 0) := "00000000000000000000000000000000";
	signal axiSlaveM2S_AW_AWLENaxiSlave_M2S_AW_AWLENHardLink : unsigned(7 downto 0) := "00000000";
	signal axiSlaveM2S_AW_AWSIZEaxiSlave_M2S_AW_AWSIZEHardLink : unsigned(2 downto 0) := "000";
	signal axiSlaveM2S_AW_AWBURSTaxiSlave_M2S_AW_AWBURSTHardLink : unsigned(1 downto 0) := "00";
	signal axiSlaveM2S_AW_AWLOCKaxiSlave_M2S_AW_AWLOCKHardLink : unsigned(1 downto 0) := "00";
	signal axiSlaveM2S_AW_AWCACHEaxiSlave_M2S_AW_AWCACHEHardLink : unsigned(3 downto 0) := "0000";
	signal axiSlaveM2S_AW_AWPROTaxiSlave_M2S_AW_AWPROTHardLink : unsigned(2 downto 0) := "000";
	signal axiSlaveM2S_AW_AWQOSaxiSlave_M2S_AW_AWQOSHardLink : unsigned(3 downto 0) := "0000";
	signal axiSlaveM2S_AW_AWREGIONaxiSlave_M2S_AW_AWREGIONHardLink : unsigned(7 downto 0) := "00000000";
	signal axiSlaveM2S_AW_AWUSERaxiSlave_M2S_AW_AWUSERHardLink : unsigned(7 downto 0) := "00000000";
	signal axiSlaveM2S_AW_AWVALIDaxiSlave_M2S_AW_AWVALIDHardLink : std_logic := '0';
	signal axiSlaveM2S_W_WIDaxiSlave_M2S_W_WIDHardLink : unsigned(7 downto 0) := "00000000";
	signal axiSlaveM2S_W_WDATA0axiSlave_M2S_W_WDATAHardLink : unsigned(7 downto 0) := "00000000";
	signal axiSlaveM2S_W_WDATA1axiSlave_M2S_W_WDATAHardLink : unsigned(7 downto 0) := "00000000";
	signal axiSlaveM2S_W_WDATA2axiSlave_M2S_W_WDATAHardLink : unsigned(7 downto 0) := "00000000";
	signal axiSlaveM2S_W_WDATA3axiSlave_M2S_W_WDATAHardLink : unsigned(7 downto 0) := "00000000";
	signal axiSlaveM2S_W_WSTRBaxiSlave_M2S_W_WSTRBHardLink : unsigned(3 downto 0) := "0000";
	signal axiSlaveM2S_W_WLASTaxiSlave_M2S_W_WLASTHardLink : std_logic := '0';
	signal axiSlaveM2S_W_WUSERaxiSlave_M2S_W_WUSERHardLink : unsigned(7 downto 0) := "00000000";
	signal axiSlaveM2S_W_WVALIDaxiSlave_M2S_W_WVALIDHardLink : std_logic := '0';
	signal axiSlaveM2S_B_BREADYaxiSlave_M2S_B_BREADYHardLink : std_logic := '0';
	signal axiSlaveinRDATA0axiSlave_inRDATAHardLink : unsigned(7 downto 0) := "00000000";
	signal axiSlaveinRDATA1axiSlave_inRDATAHardLink : unsigned(7 downto 0) := "00000000";
	signal axiSlaveinRDATA2axiSlave_inRDATAHardLink : unsigned(7 downto 0) := "00000000";
	signal axiSlaveinRDATA3axiSlave_inRDATAHardLink : unsigned(7 downto 0) := "00000000";
	signal axiSlaveinARREADYaxiSlave_inARREADYHardLink : std_logic := '0';
	signal axiSlaveinRVALIDaxiSlave_inRVALIDHardLink : std_logic := '0';
	signal axiSlaveinAWREADYaxiSlave_inAWREADYHardLink : std_logic := '0';
	signal axiSlaveinWREADYaxiSlave_inWREADYHardLink : std_logic := '0';
	signal axiSlaveinBVALIDaxiSlave_inBVALIDHardLink : std_logic := '0';
	signal axiSlaveS2M_AR_ARREADYaxiSlave_S2M_AR_ARREADYHardLink : std_logic := '0';
	signal axiSlaveS2M_AW_AWREADYaxiSlave_S2M_AW_AWREADYHardLink : std_logic := '0';
	signal axiSlaveS2M_B_BIDaxiSlave_S2M_B_BIDHardLink : unsigned(7 downto 0) := "00000000";
	signal axiSlaveS2M_B_BRESPaxiSlave_S2M_B_BRESPHardLink : unsigned(1 downto 0) := "00";
	signal axiSlaveS2M_B_BUSERaxiSlave_S2M_B_BUSERHardLink : unsigned(7 downto 0) := "00000000";
	signal axiSlaveS2M_B_BVALIDaxiSlave_S2M_B_BVALIDHardLink : std_logic := '0';
	signal axiSlaveS2M_R_RIDaxiSlave_S2M_R_RIDHardLink : unsigned(7 downto 0) := "00000000";
	signal axiSlaveS2M_R_RDATA0axiSlave_S2M_R_RDATAHardLink : unsigned(7 downto 0) := "00000000";
	signal axiSlaveS2M_R_RDATA1axiSlave_S2M_R_RDATAHardLink : unsigned(7 downto 0) := "00000000";
	signal axiSlaveS2M_R_RDATA2axiSlave_S2M_R_RDATAHardLink : unsigned(7 downto 0) := "00000000";
	signal axiSlaveS2M_R_RDATA3axiSlave_S2M_R_RDATAHardLink : unsigned(7 downto 0) := "00000000";
	signal axiSlaveS2M_R_RRESPaxiSlave_S2M_R_RRESPHardLink : unsigned(1 downto 0) := "00";
	signal axiSlaveS2M_R_RLASTaxiSlave_S2M_R_RLASTHardLink : std_logic := '0';
	signal axiSlaveS2M_R_RUSERaxiSlave_S2M_R_RUSERHardLink : unsigned(7 downto 0) := "00000000";
	signal axiSlaveS2M_R_RVALIDaxiSlave_S2M_R_RVALIDHardLink : std_logic := '0';
	signal axiSlaveS2M_W_WREADYaxiSlave_S2M_W_WREADYHardLink : std_logic := '0';
	signal axiSlaveoutReadTXCompletingaxiSlave_outReadTXCompletingHardLink : std_logic := '0';
	signal axiSlaveoutWriteTXCompletingaxiSlave_outWriteTXCompletingHardLink : std_logic := '0';
	signal axiSlaveoutARREADYConfirmingaxiSlave_outARREADYConfirmingHardLink : std_logic := '0';
	signal axiSlaveoutARVALIDaxiSlave_outARVALIDHardLink : std_logic := '0';
	signal axiSlaveoutARADDRaxiSlave_outARADDRHardLink : unsigned(31 downto 0) := "00000000000000000000000000000000";
	signal axiSlaveoutAWREADYConfirmingaxiSlave_outAWREADYConfirmingHardLink : std_logic := '0';
	signal axiSlaveoutAWVALIDaxiSlave_outAWVALIDHardLink : std_logic := '0';
	signal axiSlaveoutAWADDRaxiSlave_outAWADDRHardLink : unsigned(31 downto 0) := "00000000000000000000000000000000";
	signal axiSlaveoutWREADYConfirmingaxiSlave_outWREADYConfirmingHardLink : std_logic := '0';
	signal axiSlaveoutWVALIDaxiSlave_outWVALIDHardLink : std_logic := '0';
	signal axiSlaveoutWDATA0axiSlave_outWDATAHardLink : unsigned(7 downto 0) := "00000000";
	signal axiSlaveoutWDATA1axiSlave_outWDATAHardLink : unsigned(7 downto 0) := "00000000";
	signal axiSlaveoutWDATA2axiSlave_outWDATAHardLink : unsigned(7 downto 0) := "00000000";
	signal axiSlaveoutWDATA3axiSlave_outWDATAHardLink : unsigned(7 downto 0) := "00000000";
	signal axiSlaveoutWSTRBaxiSlave_outWSTRBHardLink : unsigned(3 downto 0) := "0000";
	signal State_raddr : unsigned(31 downto 0) := "00000000000000000000000000000000";
	constant State_raddrDefault : unsigned(31 downto 0) := "00000000000000000000000000000000";
	signal State_waddrSet : std_logic := '0';
	constant State_waddrSetDefault : std_logic := '0';
	signal State_wdataSet : std_logic := '0';
	constant State_wdataSetDefault : std_logic := '0';
	signal State_waddr : unsigned(31 downto 0) := "00000000000000000000000000000000";
	constant State_waddrDefault : unsigned(31 downto 0) := "00000000000000000000000000000000";
	signal State_wstrb : unsigned(3 downto 0) := "0000";
	constant State_wstrbDefault : unsigned(3 downto 0) := "0000";
	signal AXI4MemoryModule_L64F37T81_Expr : std_logic := '0';
	signal AXI4MemoryModule_L64F37T81_Expr_1 : std_logic := '0';
	signal AXI4MemoryModule_L64F37T81_Expr_2 : std_logic := '0';
	signal AXI4MemoryModule_L65F40T72_Expr : std_logic := '0';
	signal AXI4MemoryModule_L65F40T72_Expr_1 : std_logic := '0';
	signal AXI4MemoryModule_L65F40T72_Expr_2 : std_logic := '0';
	signal AXI4MemoryModule_L66F28T73_Expr : std_logic := '0';
	signal AXI4MemoryModule_L66F28T73_Expr_1 : std_logic := '0';
	signal AXI4MemoryModule_L66F28T73_Expr_2 : std_logic := '0';
	signal AXI4MemoryModule_L104F9L136T10_AXI4MemoryModule_L124F13L128T14_0_AXI4MemoryModule_L125F13L128T14_AXI4MemoryModule_L126F21T51_Expr : std_logic := '0';
	signal AXI4MemoryModule_L104F9L136T10_AXI4MemoryModule_L124F13L128T14_0_AXI4MemoryModule_L125F13L128T14_AXI4MemoryModule_L126F21T51_Expr_1 : std_logic := '0';
	signal AXI4MemoryModule_L104F9L136T10_AXI4MemoryModule_L124F13L128T14_0_AXI4MemoryModule_L125F13L128T14_AXI4MemoryModule_L126F21T51_Expr_2 : std_logic := '0';
	signal AXI4MemoryModule_L104F9L136T10_AXI4MemoryModule_L124F13L128T14_1_AXI4MemoryModule_L125F13L128T14_AXI4MemoryModule_L126F21T51_Expr : std_logic := '0';
	signal AXI4MemoryModule_L104F9L136T10_AXI4MemoryModule_L124F13L128T14_1_AXI4MemoryModule_L125F13L128T14_AXI4MemoryModule_L126F21T51_Expr_1 : std_logic := '0';
	signal AXI4MemoryModule_L104F9L136T10_AXI4MemoryModule_L124F13L128T14_1_AXI4MemoryModule_L125F13L128T14_AXI4MemoryModule_L126F21T51_Expr_2 : std_logic := '0';
	signal AXI4MemoryModule_L104F9L136T10_AXI4MemoryModule_L124F13L128T14_2_AXI4MemoryModule_L125F13L128T14_AXI4MemoryModule_L126F21T51_Expr : std_logic := '0';
	signal AXI4MemoryModule_L104F9L136T10_AXI4MemoryModule_L124F13L128T14_2_AXI4MemoryModule_L125F13L128T14_AXI4MemoryModule_L126F21T51_Expr_1 : std_logic := '0';
	signal AXI4MemoryModule_L104F9L136T10_AXI4MemoryModule_L124F13L128T14_2_AXI4MemoryModule_L125F13L128T14_AXI4MemoryModule_L126F21T51_Expr_2 : std_logic := '0';
	signal AXI4MemoryModule_L104F9L136T10_AXI4MemoryModule_L124F13L128T14_3_AXI4MemoryModule_L125F13L128T14_AXI4MemoryModule_L126F21T51_Expr : std_logic := '0';
	signal AXI4MemoryModule_L104F9L136T10_AXI4MemoryModule_L124F13L128T14_3_AXI4MemoryModule_L125F13L128T14_AXI4MemoryModule_L126F21T51_Expr_1 : std_logic := '0';
	signal AXI4MemoryModule_L104F9L136T10_AXI4MemoryModule_L124F13L128T14_3_AXI4MemoryModule_L125F13L128T14_AXI4MemoryModule_L126F21T51_Expr_2 : std_logic := '0';
	signal AXI4MemoryModule_L69F13L71T26_Lookup : unsigned(3 downto 0) := "0000";
	signal AXI4MemoryModule_L74F13L76T26_Lookup : unsigned(31 downto 0) := "00000000000000000000000000000000";
	signal AXI4MemoryModule_L79F13L81T26_Lookup : unsigned(31 downto 0) := "00000000000000000000000000000000";
	signal AXI4MemoryModule_L84F13L86T26_Lookup : unsigned(31 downto 0) := "00000000000000000000000000000000";
	signal AXI4MemoryModule_L69F13L71T26_LookupMultiplexerAddress : std_logic := '0';
	signal AXI4MemoryModule_L69F13L71T26_Lookup1 : unsigned(3 downto 0) := "0000";
	signal AXI4MemoryModule_L69F13L71T26_Lookup2 : unsigned(3 downto 0) := "0000";
	signal AXI4MemoryModule_L74F13L76T26_LookupMultiplexerAddress : std_logic := '0';
	signal AXI4MemoryModule_L74F13L76T26_Lookup1 : unsigned(31 downto 0) := "00000000000000000000000000000000";
	signal AXI4MemoryModule_L74F13L76T26_Lookup2 : unsigned(31 downto 0) := "00000000000000000000000000000000";
	signal AXI4MemoryModule_L79F13L81T26_LookupMultiplexerAddress : std_logic := '0';
	signal AXI4MemoryModule_L79F13L81T26_Lookup1 : unsigned(31 downto 0) := "00000000000000000000000000000000";
	signal AXI4MemoryModule_L79F13L81T26_Lookup2 : unsigned(31 downto 0) := "00000000000000000000000000000000";
	signal AXI4MemoryModule_L84F13L86T26_LookupMultiplexerAddress : std_logic := '0';
	signal AXI4MemoryModule_L84F13L86T26_Lookup1 : unsigned(31 downto 0) := "00000000000000000000000000000000";
	signal AXI4MemoryModule_L84F13L86T26_Lookup2 : unsigned(31 downto 0) := "00000000000000000000000000000000";
	type Inputs_M2S_W_WDATAArray is array (0 to 3) of unsigned (7 downto 0);
	signal Inputs_M2S_W_WDATA : Inputs_M2S_W_WDATAArray := (others => (others => '0'));
	type State_rdataArray is array (0 to 3) of unsigned (7 downto 0);
	signal State_rdata : State_rdataArray := (others => (others => '0'));
	type State_wdataArray is array (0 to 3) of unsigned (7 downto 0);
	signal State_wdata : State_wdataArray := (others => (others => '0'));
	type NextState_wdataArray is array (0 to 3) of unsigned (7 downto 0);
	signal NextState_wdata : NextState_wdataArray := (others => (others => '0'));
	type internalWDATAArray is array (0 to 3) of unsigned (7 downto 0);
	signal internalWDATA : internalWDATAArray := (others => (others => '0'));
	type axiSlave_M2S_W_WDATAArray is array (0 to 3) of unsigned (7 downto 0);
	signal axiSlave_M2S_W_WDATA : axiSlave_M2S_W_WDATAArray := (others => (others => '0'));
	type axiSlave_inRDATAArray is array (0 to 3) of unsigned (7 downto 0);
	signal axiSlave_inRDATA : axiSlave_inRDATAArray := (others => (others => '0'));
	type axiSlave_S2M_R_RDATAArray is array (0 to 3) of unsigned (7 downto 0);
	signal axiSlave_S2M_R_RDATA : axiSlave_S2M_R_RDATAArray := (others => (others => '0'));
	type axiSlave_outWDATAArray is array (0 to 3) of unsigned (7 downto 0);
	signal axiSlave_outWDATA : axiSlave_outWDATAArray := (others => (others => '0'));
	type State_buff0Array is array (0 to 1023) of unsigned (7 downto 0);
	signal State_buff0 : State_buff0Array := (others => (others => '0'));
	type State_buff1Array is array (0 to 1023) of unsigned (7 downto 0);
	signal State_buff1 : State_buff1Array := (others => (others => '0'));
	type State_buff2Array is array (0 to 1023) of unsigned (7 downto 0);
	signal State_buff2 : State_buff2Array := (others => (others => '0'));
	type State_buff3Array is array (0 to 1023) of unsigned (7 downto 0);
	signal State_buff3 : State_buff3Array := (others => (others => '0'));
	signal BoardSignals : BoardSignalsType;
	signal InternalReset : std_logic := '0';
	signal internalRADDR_reg0 : unsigned(9 downto 0);
	signal internalRADDR_reg1 : unsigned(9 downto 0);
	signal internalRADDR_reg2 : unsigned(9 downto 0);
	signal internalRADDR_reg3 : unsigned(9 downto 0);
begin
	work.Quokka.BoardSignalsProc(BoardSignals, Clock, Reset, InternalReset);
	process (Clock, NextState_raddr, NextState_waddr, NextState_waddrSet, NextState_wdataSet, NextState_wstrb, Reset)
	begin
		if rising_edge(Clock) then
			if Reset = '1' then
				State_raddr <= State_raddrDefault;
				State_waddrSet <= State_waddrSetDefault;
				State_wdataSet <= State_wdataSetDefault;
				State_waddr <= State_waddrDefault;
				State_wstrb <= State_wstrbDefault;
			else
				State_raddr <= NextState_raddr;
				State_waddrSet <= NextState_waddrSet;
				State_wdataSet <= NextState_wdataSet;
				State_waddr <= NextState_waddr;
				State_wstrb <= NextState_wstrb;
			end if;
		end if;
	end process;
	process (Clock, NextState_wdata, Reset, State_wdataDefault)
	begin
		if rising_edge(Clock) then
			if Reset = '1' then
				for State_wdata_Iterator in 0 to 3 loop
					State_wdata(State_wdata_Iterator) <= State_wdataDefault;
				end loop;
			else
				for State_wdata_Iterator in 0 to 3 loop
					State_wdata(State_wdata_Iterator) <= NextState_wdata(State_wdata_Iterator);
				end loop;
			end if;
		end if;
	end process;
	process (AXI4MemoryModule_L64F37T81_Expr_1, AXI4MemoryModule_L64F37T81_Expr_2)
	begin
		AXI4MemoryModule_L64F37T81_Expr <= AXI4MemoryModule_L64F37T81_Expr_1 AND AXI4MemoryModule_L64F37T81_Expr_2;
	end process;
	process (AXI4MemoryModule_L65F40T72_Expr_1, AXI4MemoryModule_L65F40T72_Expr_2)
	begin
		AXI4MemoryModule_L65F40T72_Expr <= AXI4MemoryModule_L65F40T72_Expr_1 AND AXI4MemoryModule_L65F40T72_Expr_2;
	end process;
	process (AXI4MemoryModule_L66F28T73_Expr_1, AXI4MemoryModule_L66F28T73_Expr_2)
	begin
		AXI4MemoryModule_L66F28T73_Expr <= AXI4MemoryModule_L66F28T73_Expr_1 OR AXI4MemoryModule_L66F28T73_Expr_2;
	end process;
	process (AXI4MemoryModule_L104F9L136T10_AXI4MemoryModule_L124F13L128T14_0_AXI4MemoryModule_L125F13L128T14_AXI4MemoryModule_L126F21T51_Expr_1, AXI4MemoryModule_L104F9L136T10_AXI4MemoryModule_L124F13L128T14_0_AXI4MemoryModule_L125F13L128T14_AXI4MemoryModule_L126F21T51_Expr_2)
	begin
		AXI4MemoryModule_L104F9L136T10_AXI4MemoryModule_L124F13L128T14_0_AXI4MemoryModule_L125F13L128T14_AXI4MemoryModule_L126F21T51_Expr <= AXI4MemoryModule_L104F9L136T10_AXI4MemoryModule_L124F13L128T14_0_AXI4MemoryModule_L125F13L128T14_AXI4MemoryModule_L126F21T51_Expr_1 AND AXI4MemoryModule_L104F9L136T10_AXI4MemoryModule_L124F13L128T14_0_AXI4MemoryModule_L125F13L128T14_AXI4MemoryModule_L126F21T51_Expr_2;
	end process;
	process (AXI4MemoryModule_L104F9L136T10_AXI4MemoryModule_L124F13L128T14_1_AXI4MemoryModule_L125F13L128T14_AXI4MemoryModule_L126F21T51_Expr_1, AXI4MemoryModule_L104F9L136T10_AXI4MemoryModule_L124F13L128T14_1_AXI4MemoryModule_L125F13L128T14_AXI4MemoryModule_L126F21T51_Expr_2)
	begin
		AXI4MemoryModule_L104F9L136T10_AXI4MemoryModule_L124F13L128T14_1_AXI4MemoryModule_L125F13L128T14_AXI4MemoryModule_L126F21T51_Expr <= AXI4MemoryModule_L104F9L136T10_AXI4MemoryModule_L124F13L128T14_1_AXI4MemoryModule_L125F13L128T14_AXI4MemoryModule_L126F21T51_Expr_1 AND AXI4MemoryModule_L104F9L136T10_AXI4MemoryModule_L124F13L128T14_1_AXI4MemoryModule_L125F13L128T14_AXI4MemoryModule_L126F21T51_Expr_2;
	end process;
	process (AXI4MemoryModule_L104F9L136T10_AXI4MemoryModule_L124F13L128T14_2_AXI4MemoryModule_L125F13L128T14_AXI4MemoryModule_L126F21T51_Expr_1, AXI4MemoryModule_L104F9L136T10_AXI4MemoryModule_L124F13L128T14_2_AXI4MemoryModule_L125F13L128T14_AXI4MemoryModule_L126F21T51_Expr_2)
	begin
		AXI4MemoryModule_L104F9L136T10_AXI4MemoryModule_L124F13L128T14_2_AXI4MemoryModule_L125F13L128T14_AXI4MemoryModule_L126F21T51_Expr <= AXI4MemoryModule_L104F9L136T10_AXI4MemoryModule_L124F13L128T14_2_AXI4MemoryModule_L125F13L128T14_AXI4MemoryModule_L126F21T51_Expr_1 AND AXI4MemoryModule_L104F9L136T10_AXI4MemoryModule_L124F13L128T14_2_AXI4MemoryModule_L125F13L128T14_AXI4MemoryModule_L126F21T51_Expr_2;
	end process;
	process (AXI4MemoryModule_L104F9L136T10_AXI4MemoryModule_L124F13L128T14_3_AXI4MemoryModule_L125F13L128T14_AXI4MemoryModule_L126F21T51_Expr_1, AXI4MemoryModule_L104F9L136T10_AXI4MemoryModule_L124F13L128T14_3_AXI4MemoryModule_L125F13L128T14_AXI4MemoryModule_L126F21T51_Expr_2)
	begin
		AXI4MemoryModule_L104F9L136T10_AXI4MemoryModule_L124F13L128T14_3_AXI4MemoryModule_L125F13L128T14_AXI4MemoryModule_L126F21T51_Expr <= AXI4MemoryModule_L104F9L136T10_AXI4MemoryModule_L124F13L128T14_3_AXI4MemoryModule_L125F13L128T14_AXI4MemoryModule_L126F21T51_Expr_1 AND AXI4MemoryModule_L104F9L136T10_AXI4MemoryModule_L124F13L128T14_3_AXI4MemoryModule_L125F13L128T14_AXI4MemoryModule_L126F21T51_Expr_2;
	end process;
	AXI4MemoryModuleB4_TopLevel_axiSlave : entity work.AXI4MemoryModuleB4_TopLevel_axiSlave
	port map
	(
		-- [BEGIN USER MAP FOR axiSlave]
		-- [END USER MAP FOR axiSlave]
		BoardSignals => BoardSignals,
		M2S_AR_ARID => axiSlaveM2S_AR_ARIDaxiSlave_M2S_AR_ARIDHardLink,
		M2S_AR_ARADDR => axiSlaveM2S_AR_ARADDRaxiSlave_M2S_AR_ARADDRHardLink,
		M2S_AR_ARLEN => axiSlaveM2S_AR_ARLENaxiSlave_M2S_AR_ARLENHardLink,
		M2S_AR_ARSIZE => axiSlaveM2S_AR_ARSIZEaxiSlave_M2S_AR_ARSIZEHardLink,
		M2S_AR_ARBURST => axiSlaveM2S_AR_ARBURSTaxiSlave_M2S_AR_ARBURSTHardLink,
		M2S_AR_ARLOCK => axiSlaveM2S_AR_ARLOCKaxiSlave_M2S_AR_ARLOCKHardLink,
		M2S_AR_ARCACHE => axiSlaveM2S_AR_ARCACHEaxiSlave_M2S_AR_ARCACHEHardLink,
		M2S_AR_ARPROT => axiSlaveM2S_AR_ARPROTaxiSlave_M2S_AR_ARPROTHardLink,
		M2S_AR_ARQOS => axiSlaveM2S_AR_ARQOSaxiSlave_M2S_AR_ARQOSHardLink,
		M2S_AR_ARREGION => axiSlaveM2S_AR_ARREGIONaxiSlave_M2S_AR_ARREGIONHardLink,
		M2S_AR_ARUSER => axiSlaveM2S_AR_ARUSERaxiSlave_M2S_AR_ARUSERHardLink,
		M2S_AR_ARVALID => axiSlaveM2S_AR_ARVALIDaxiSlave_M2S_AR_ARVALIDHardLink,
		M2S_R_RREADY => axiSlaveM2S_R_RREADYaxiSlave_M2S_R_RREADYHardLink,
		M2S_AW_AWID => axiSlaveM2S_AW_AWIDaxiSlave_M2S_AW_AWIDHardLink,
		M2S_AW_AWADDR => axiSlaveM2S_AW_AWADDRaxiSlave_M2S_AW_AWADDRHardLink,
		M2S_AW_AWLEN => axiSlaveM2S_AW_AWLENaxiSlave_M2S_AW_AWLENHardLink,
		M2S_AW_AWSIZE => axiSlaveM2S_AW_AWSIZEaxiSlave_M2S_AW_AWSIZEHardLink,
		M2S_AW_AWBURST => axiSlaveM2S_AW_AWBURSTaxiSlave_M2S_AW_AWBURSTHardLink,
		M2S_AW_AWLOCK => axiSlaveM2S_AW_AWLOCKaxiSlave_M2S_AW_AWLOCKHardLink,
		M2S_AW_AWCACHE => axiSlaveM2S_AW_AWCACHEaxiSlave_M2S_AW_AWCACHEHardLink,
		M2S_AW_AWPROT => axiSlaveM2S_AW_AWPROTaxiSlave_M2S_AW_AWPROTHardLink,
		M2S_AW_AWQOS => axiSlaveM2S_AW_AWQOSaxiSlave_M2S_AW_AWQOSHardLink,
		M2S_AW_AWREGION => axiSlaveM2S_AW_AWREGIONaxiSlave_M2S_AW_AWREGIONHardLink,
		M2S_AW_AWUSER => axiSlaveM2S_AW_AWUSERaxiSlave_M2S_AW_AWUSERHardLink,
		M2S_AW_AWVALID => axiSlaveM2S_AW_AWVALIDaxiSlave_M2S_AW_AWVALIDHardLink,
		M2S_W_WID => axiSlaveM2S_W_WIDaxiSlave_M2S_W_WIDHardLink,
		M2S_W_WDATA0 => axiSlaveM2S_W_WDATA0axiSlave_M2S_W_WDATAHardLink,
		M2S_W_WDATA1 => axiSlaveM2S_W_WDATA1axiSlave_M2S_W_WDATAHardLink,
		M2S_W_WDATA2 => axiSlaveM2S_W_WDATA2axiSlave_M2S_W_WDATAHardLink,
		M2S_W_WDATA3 => axiSlaveM2S_W_WDATA3axiSlave_M2S_W_WDATAHardLink,
		M2S_W_WSTRB => axiSlaveM2S_W_WSTRBaxiSlave_M2S_W_WSTRBHardLink,
		M2S_W_WLAST => axiSlaveM2S_W_WLASTaxiSlave_M2S_W_WLASTHardLink,
		M2S_W_WUSER => axiSlaveM2S_W_WUSERaxiSlave_M2S_W_WUSERHardLink,
		M2S_W_WVALID => axiSlaveM2S_W_WVALIDaxiSlave_M2S_W_WVALIDHardLink,
		M2S_B_BREADY => axiSlaveM2S_B_BREADYaxiSlave_M2S_B_BREADYHardLink,
		inRDATA0 => axiSlaveinRDATA0axiSlave_inRDATAHardLink,
		inRDATA1 => axiSlaveinRDATA1axiSlave_inRDATAHardLink,
		inRDATA2 => axiSlaveinRDATA2axiSlave_inRDATAHardLink,
		inRDATA3 => axiSlaveinRDATA3axiSlave_inRDATAHardLink,
		inARREADY => axiSlaveinARREADYaxiSlave_inARREADYHardLink,
		inRVALID => axiSlaveinRVALIDaxiSlave_inRVALIDHardLink,
		inAWREADY => axiSlaveinAWREADYaxiSlave_inAWREADYHardLink,
		inWREADY => axiSlaveinWREADYaxiSlave_inWREADYHardLink,
		inBVALID => axiSlaveinBVALIDaxiSlave_inBVALIDHardLink,
		S2M_AR_ARREADY => axiSlaveS2M_AR_ARREADYaxiSlave_S2M_AR_ARREADYHardLink,
		S2M_AW_AWREADY => axiSlaveS2M_AW_AWREADYaxiSlave_S2M_AW_AWREADYHardLink,
		S2M_B_BID => axiSlaveS2M_B_BIDaxiSlave_S2M_B_BIDHardLink,
		S2M_B_BRESP => axiSlaveS2M_B_BRESPaxiSlave_S2M_B_BRESPHardLink,
		S2M_B_BUSER => axiSlaveS2M_B_BUSERaxiSlave_S2M_B_BUSERHardLink,
		S2M_B_BVALID => axiSlaveS2M_B_BVALIDaxiSlave_S2M_B_BVALIDHardLink,
		S2M_R_RID => axiSlaveS2M_R_RIDaxiSlave_S2M_R_RIDHardLink,
		S2M_R_RDATA0 => axiSlaveS2M_R_RDATA0axiSlave_S2M_R_RDATAHardLink,
		S2M_R_RDATA1 => axiSlaveS2M_R_RDATA1axiSlave_S2M_R_RDATAHardLink,
		S2M_R_RDATA2 => axiSlaveS2M_R_RDATA2axiSlave_S2M_R_RDATAHardLink,
		S2M_R_RDATA3 => axiSlaveS2M_R_RDATA3axiSlave_S2M_R_RDATAHardLink,
		S2M_R_RRESP => axiSlaveS2M_R_RRESPaxiSlave_S2M_R_RRESPHardLink,
		S2M_R_RLAST => axiSlaveS2M_R_RLASTaxiSlave_S2M_R_RLASTHardLink,
		S2M_R_RUSER => axiSlaveS2M_R_RUSERaxiSlave_S2M_R_RUSERHardLink,
		S2M_R_RVALID => axiSlaveS2M_R_RVALIDaxiSlave_S2M_R_RVALIDHardLink,
		S2M_W_WREADY => axiSlaveS2M_W_WREADYaxiSlave_S2M_W_WREADYHardLink,
		outReadTXCompleting => axiSlaveoutReadTXCompletingaxiSlave_outReadTXCompletingHardLink,
		outWriteTXCompleting => axiSlaveoutWriteTXCompletingaxiSlave_outWriteTXCompletingHardLink,
		outARREADYConfirming => axiSlaveoutARREADYConfirmingaxiSlave_outARREADYConfirmingHardLink,
		outARVALID => axiSlaveoutARVALIDaxiSlave_outARVALIDHardLink,
		outARADDR => axiSlaveoutARADDRaxiSlave_outARADDRHardLink,
		outAWREADYConfirming => axiSlaveoutAWREADYConfirmingaxiSlave_outAWREADYConfirmingHardLink,
		outAWVALID => axiSlaveoutAWVALIDaxiSlave_outAWVALIDHardLink,
		outAWADDR => axiSlaveoutAWADDRaxiSlave_outAWADDRHardLink,
		outWREADYConfirming => axiSlaveoutWREADYConfirmingaxiSlave_outWREADYConfirmingHardLink,
		outWVALID => axiSlaveoutWVALIDaxiSlave_outWVALIDHardLink,
		outWDATA0 => axiSlaveoutWDATA0axiSlave_outWDATAHardLink,
		outWDATA1 => axiSlaveoutWDATA1axiSlave_outWDATAHardLink,
		outWDATA2 => axiSlaveoutWDATA2axiSlave_outWDATAHardLink,
		outWDATA3 => axiSlaveoutWDATA3axiSlave_outWDATAHardLink,
		outWSTRB => axiSlaveoutWSTRBaxiSlave_outWSTRBHardLink
	)
	;
	process (AXI4MemoryModule_L69F13L71T26_Lookup1, AXI4MemoryModule_L69F13L71T26_Lookup2, AXI4MemoryModule_L69F13L71T26_LookupMultiplexerAddress)
	begin
		case AXI4MemoryModule_L69F13L71T26_LookupMultiplexerAddress is
			when '0' =>
				AXI4MemoryModule_L69F13L71T26_Lookup <= AXI4MemoryModule_L69F13L71T26_Lookup1;
			when '1' =>
				AXI4MemoryModule_L69F13L71T26_Lookup <= AXI4MemoryModule_L69F13L71T26_Lookup2;
			when others =>
				AXI4MemoryModule_L69F13L71T26_Lookup <= "0000";
		end case;
	end process;
	process (AXI4MemoryModule_L74F13L76T26_Lookup1, AXI4MemoryModule_L74F13L76T26_Lookup2, AXI4MemoryModule_L74F13L76T26_LookupMultiplexerAddress)
	begin
		case AXI4MemoryModule_L74F13L76T26_LookupMultiplexerAddress is
			when '0' =>
				AXI4MemoryModule_L74F13L76T26_Lookup <= AXI4MemoryModule_L74F13L76T26_Lookup1;
			when '1' =>
				AXI4MemoryModule_L74F13L76T26_Lookup <= AXI4MemoryModule_L74F13L76T26_Lookup2;
			when others =>
				AXI4MemoryModule_L74F13L76T26_Lookup <= "00000000000000000000000000000000";
		end case;
	end process;
	process (AXI4MemoryModule_L79F13L81T26_Lookup1, AXI4MemoryModule_L79F13L81T26_Lookup2, AXI4MemoryModule_L79F13L81T26_LookupMultiplexerAddress)
	begin
		case AXI4MemoryModule_L79F13L81T26_LookupMultiplexerAddress is
			when '0' =>
				AXI4MemoryModule_L79F13L81T26_Lookup <= AXI4MemoryModule_L79F13L81T26_Lookup1;
			when '1' =>
				AXI4MemoryModule_L79F13L81T26_Lookup <= AXI4MemoryModule_L79F13L81T26_Lookup2;
			when others =>
				AXI4MemoryModule_L79F13L81T26_Lookup <= "00000000000000000000000000000000";
		end case;
	end process;
	process (AXI4MemoryModule_L84F13L86T26_Lookup1, AXI4MemoryModule_L84F13L86T26_Lookup2, AXI4MemoryModule_L84F13L86T26_LookupMultiplexerAddress)
	begin
		case AXI4MemoryModule_L84F13L86T26_LookupMultiplexerAddress is
			when '0' =>
				AXI4MemoryModule_L84F13L86T26_Lookup <= AXI4MemoryModule_L84F13L86T26_Lookup1;
			when '1' =>
				AXI4MemoryModule_L84F13L86T26_Lookup <= AXI4MemoryModule_L84F13L86T26_Lookup2;
			when others =>
				AXI4MemoryModule_L84F13L86T26_Lookup <= "00000000000000000000000000000000";
		end case;
	end process;
	process (axiSlave_outARADDR, axiSlave_outARREADYConfirming, axiSlave_outAWADDR, axiSlave_outAWREADYConfirming, axiSlave_outWDATA, axiSlave_outWREADYConfirming, axiSlave_outWriteTXCompleting, axiSlave_outWSTRB, State_raddr, State_waddr, State_waddrSet, State_wdata, State_wdataSet, State_wstrb)
	begin
		for NextState_wdata_Iterator in 0 to 3 loop
			NextState_wdata(NextState_wdata_Iterator) <= State_wdata(NextState_wdata_Iterator);
		end loop;
		NextState_raddr <= State_raddr;
		NextState_waddrSet <= State_waddrSet;
		NextState_wdataSet <= State_wdataSet;
		NextState_waddr <= State_waddr;
		NextState_wstrb <= State_wstrb;
		if axiSlave_outAWREADYConfirming = '1' then
			NextState_waddr <= axiSlave_outAWADDR;
			NextState_waddrSet <= AXI4MemoryModule_L104F9L136T10_AXI4MemoryModule_L106F13L109T14_AXI4MemoryModule_L108F38T42_Expr;
		end if;
		if axiSlave_outWREADYConfirming = '1' then
			NextState_wdata(0) <= axiSlave_outWDATA(0);
			NextState_wdata(1) <= axiSlave_outWDATA(1);
			NextState_wdata(2) <= axiSlave_outWDATA(2);
			NextState_wdata(3) <= axiSlave_outWDATA(3);
			NextState_wstrb <= axiSlave_outWSTRB;
			NextState_wdataSet <= AXI4MemoryModule_L104F9L136T10_AXI4MemoryModule_L112F13L116T14_AXI4MemoryModule_L115F38T42_Expr;
		end if;
		if axiSlave_outWriteTXCompleting = '1' then
			NextState_waddrSet <= AXI4MemoryModule_L104F9L136T10_AXI4MemoryModule_L119F13L122T14_AXI4MemoryModule_L120F38T43_Expr;
			NextState_wdataSet <= AXI4MemoryModule_L104F9L136T10_AXI4MemoryModule_L119F13L122T14_AXI4MemoryModule_L121F38T43_Expr;
		end if;
		if axiSlave_outARREADYConfirming = '1' then
			NextState_raddr <= axiSlave_outARADDR;
		end if;
	end process;
	process (AXI4MemoryModule_L104F9L136T10_AXI4MemoryModule_L124F13L128T14_0_AXI4MemoryModule_L125F13L128T14_AXI4MemoryModule_L126F35T51_Index, AXI4MemoryModule_L104F9L136T10_AXI4MemoryModule_L124F13L128T14_1_AXI4MemoryModule_L125F13L128T14_AXI4MemoryModule_L126F35T51_Index, AXI4MemoryModule_L104F9L136T10_AXI4MemoryModule_L124F13L128T14_2_AXI4MemoryModule_L125F13L128T14_AXI4MemoryModule_L126F35T51_Index, AXI4MemoryModule_L104F9L136T10_AXI4MemoryModule_L124F13L128T14_3_AXI4MemoryModule_L125F13L128T14_AXI4MemoryModule_L126F35T51_Index, AXI4MemoryModule_L64F37T81_Expr, AXI4MemoryModule_L65F40T72_Expr, AXI4MemoryModule_L66F28T73_Expr, AXI4MemoryModule_L69F13L71T26_Lookup, AXI4MemoryModule_L74F13L76T26_Lookup, AXI4MemoryModule_L79F13L81T26_Lookup, AXI4MemoryModule_L84F13L86T26_Lookup, axiSlave_inARREADY, axiSlave_inAWREADY, axiSlave_inBVALID, axiSlave_inRDATA, axiSlave_inRVALID, axiSlave_inWREADY, axiSlave_M2S_AR_ARADDR, axiSlave_M2S_AR_ARBURST, axiSlave_M2S_AR_ARCACHE, axiSlave_M2S_AR_ARID, axiSlave_M2S_AR_ARLEN, axiSlave_M2S_AR_ARLOCK, axiSlave_M2S_AR_ARPROT, axiSlave_M2S_AR_ARQOS, axiSlave_M2S_AR_ARREGION, axiSlave_M2S_AR_ARSIZE, axiSlave_M2S_AR_ARUSER, axiSlave_M2S_AR_ARVALID, axiSlave_M2S_AW_AWADDR, axiSlave_M2S_AW_AWBURST, axiSlave_M2S_AW_AWCACHE, axiSlave_M2S_AW_AWID, axiSlave_M2S_AW_AWLEN, axiSlave_M2S_AW_AWLOCK, axiSlave_M2S_AW_AWPROT, axiSlave_M2S_AW_AWQOS, axiSlave_M2S_AW_AWREGION, axiSlave_M2S_AW_AWSIZE, axiSlave_M2S_AW_AWUSER, axiSlave_M2S_AW_AWVALID, axiSlave_M2S_B_BREADY, axiSlave_M2S_R_RREADY, axiSlave_M2S_W_WDATA, axiSlave_M2S_W_WID, axiSlave_M2S_W_WLAST, axiSlave_M2S_W_WSTRB, axiSlave_M2S_W_WUSER, axiSlave_M2S_W_WVALID, axiSlave_outARADDR, axiSlave_outARREADYConfirming, axiSlave_outAWADDR, axiSlave_outWDATA, axiSlave_outWSTRB, axiSlave_S2M_AR_ARREADY, axiSlave_S2M_AW_AWREADY, axiSlave_S2M_B_BID, axiSlave_S2M_B_BRESP, axiSlave_S2M_B_BUSER, axiSlave_S2M_B_BVALID, axiSlave_S2M_R_RDATA, axiSlave_S2M_R_RID, axiSlave_S2M_R_RLAST, axiSlave_S2M_R_RRESP, axiSlave_S2M_R_RUSER, axiSlave_S2M_R_RVALID, axiSlave_S2M_W_WREADY, axiSlaveoutARADDRaxiSlave_outARADDRHardLink, axiSlaveoutARREADYConfirmingaxiSlave_outARREADYConfirmingHardLink, axiSlaveoutARVALIDaxiSlave_outARVALIDHardLink, axiSlaveoutAWADDRaxiSlave_outAWADDRHardLink, axiSlaveoutAWREADYConfirmingaxiSlave_outAWREADYConfirmingHardLink, axiSlaveoutAWVALIDaxiSlave_outAWVALIDHardLink, axiSlaveoutReadTXCompletingaxiSlave_outReadTXCompletingHardLink, axiSlaveoutWDATA0axiSlave_outWDATAHardLink, axiSlaveoutWDATA1axiSlave_outWDATAHardLink, axiSlaveoutWDATA2axiSlave_outWDATAHardLink, axiSlaveoutWDATA3axiSlave_outWDATAHardLink, axiSlaveoutWREADYConfirmingaxiSlave_outWREADYConfirmingHardLink, axiSlaveoutWriteTXCompletingaxiSlave_outWriteTXCompletingHardLink, axiSlaveoutWSTRBaxiSlave_outWSTRBHardLink, axiSlaveoutWVALIDaxiSlave_outWVALIDHardLink, axiSlaveS2M_AR_ARREADYaxiSlave_S2M_AR_ARREADYHardLink, axiSlaveS2M_AW_AWREADYaxiSlave_S2M_AW_AWREADYHardLink, axiSlaveS2M_B_BIDaxiSlave_S2M_B_BIDHardLink, axiSlaveS2M_B_BRESPaxiSlave_S2M_B_BRESPHardLink, axiSlaveS2M_B_BUSERaxiSlave_S2M_B_BUSERHardLink, axiSlaveS2M_B_BVALIDaxiSlave_S2M_B_BVALIDHardLink, axiSlaveS2M_R_RDATA0axiSlave_S2M_R_RDATAHardLink, axiSlaveS2M_R_RDATA1axiSlave_S2M_R_RDATAHardLink, axiSlaveS2M_R_RDATA2axiSlave_S2M_R_RDATAHardLink, axiSlaveS2M_R_RDATA3axiSlave_S2M_R_RDATAHardLink, axiSlaveS2M_R_RIDaxiSlave_S2M_R_RIDHardLink, axiSlaveS2M_R_RLASTaxiSlave_S2M_R_RLASTHardLink, axiSlaveS2M_R_RRESPaxiSlave_S2M_R_RRESPHardLink, axiSlaveS2M_R_RUSERaxiSlave_S2M_R_RUSERHardLink, axiSlaveS2M_R_RVALIDaxiSlave_S2M_R_RVALIDHardLink, axiSlaveS2M_W_WREADYaxiSlave_S2M_W_WREADYHardLink, Inputs_M2S_AR_ARADDR, Inputs_M2S_AR_ARBURST, Inputs_M2S_AR_ARCACHE, Inputs_M2S_AR_ARID, Inputs_M2S_AR_ARLEN, Inputs_M2S_AR_ARLOCK, Inputs_M2S_AR_ARPROT, Inputs_M2S_AR_ARQOS, Inputs_M2S_AR_ARREGION, Inputs_M2S_AR_ARSIZE, Inputs_M2S_AR_ARUSER, Inputs_M2S_AR_ARVALID, Inputs_M2S_AW_AWADDR, Inputs_M2S_AW_AWBURST, Inputs_M2S_AW_AWCACHE, Inputs_M2S_AW_AWID, Inputs_M2S_AW_AWLEN, Inputs_M2S_AW_AWLOCK, Inputs_M2S_AW_AWPROT, Inputs_M2S_AW_AWQOS, Inputs_M2S_AW_AWREGION, Inputs_M2S_AW_AWSIZE, Inputs_M2S_AW_AWUSER, Inputs_M2S_AW_AWVALID, Inputs_M2S_B_BREADY, Inputs_M2S_R_RREADY, Inputs_M2S_W_WDATA, Inputs_M2S_W_WID, Inputs_M2S_W_WLAST, Inputs_M2S_W_WSTRB, Inputs_M2S_W_WUSER, Inputs_M2S_W_WVALID, internalDelayedTxWrite, internalSameTxWrite, internalWE, internalWSTRB, M2S_AR_ARADDR, M2S_AR_ARBURST, M2S_AR_ARCACHE, M2S_AR_ARID, M2S_AR_ARLEN, M2S_AR_ARLOCK, M2S_AR_ARPROT, M2S_AR_ARQOS, M2S_AR_ARREGION, M2S_AR_ARSIZE, M2S_AR_ARUSER, M2S_AR_ARVALID, M2S_AW_AWADDR, M2S_AW_AWBURST, M2S_AW_AWCACHE, M2S_AW_AWID, M2S_AW_AWLEN, M2S_AW_AWLOCK, M2S_AW_AWPROT, M2S_AW_AWQOS, M2S_AW_AWREGION, M2S_AW_AWSIZE, M2S_AW_AWUSER, M2S_AW_AWVALID, M2S_B_BREADY, M2S_R_RREADY, M2S_W_WDATA0, M2S_W_WDATA1, M2S_W_WDATA2, M2S_W_WDATA3, M2S_W_WID, M2S_W_WLAST, M2S_W_WSTRB, M2S_W_WUSER, M2S_W_WVALID, State_raddr, State_rdata, State_waddr, State_waddrSet, State_wdata, State_wdataSet, State_wstrb)
	begin
		AXI4MemoryModule_L64F37T81_Expr_1 <= Inputs_M2S_AW_AWVALID;
		AXI4MemoryModule_L64F37T81_Expr_2 <= Inputs_M2S_W_WVALID;
		AXI4MemoryModule_L65F40T72_Expr_1 <= State_waddrSet;
		AXI4MemoryModule_L65F40T72_Expr_2 <= State_wdataSet;
		AXI4MemoryModule_L66F28T73_Expr_1 <= internalSameTxWrite;
		AXI4MemoryModule_L66F28T73_Expr_2 <= internalDelayedTxWrite;
		AXI4MemoryModule_L104F9L136T10_AXI4MemoryModule_L124F13L128T14_0_AXI4MemoryModule_L125F13L128T14_AXI4MemoryModule_L126F21T51_Expr_1 <= internalWE;
		AXI4MemoryModule_L104F9L136T10_AXI4MemoryModule_L124F13L128T14_0_AXI4MemoryModule_L125F13L128T14_AXI4MemoryModule_L126F21T51_Expr_2 <= AXI4MemoryModule_L104F9L136T10_AXI4MemoryModule_L124F13L128T14_0_AXI4MemoryModule_L125F13L128T14_AXI4MemoryModule_L126F35T51_Index;
		AXI4MemoryModule_L104F9L136T10_AXI4MemoryModule_L124F13L128T14_1_AXI4MemoryModule_L125F13L128T14_AXI4MemoryModule_L126F21T51_Expr_1 <= internalWE;
		AXI4MemoryModule_L104F9L136T10_AXI4MemoryModule_L124F13L128T14_1_AXI4MemoryModule_L125F13L128T14_AXI4MemoryModule_L126F21T51_Expr_2 <= AXI4MemoryModule_L104F9L136T10_AXI4MemoryModule_L124F13L128T14_1_AXI4MemoryModule_L125F13L128T14_AXI4MemoryModule_L126F35T51_Index;
		AXI4MemoryModule_L104F9L136T10_AXI4MemoryModule_L124F13L128T14_2_AXI4MemoryModule_L125F13L128T14_AXI4MemoryModule_L126F21T51_Expr_1 <= internalWE;
		AXI4MemoryModule_L104F9L136T10_AXI4MemoryModule_L124F13L128T14_2_AXI4MemoryModule_L125F13L128T14_AXI4MemoryModule_L126F21T51_Expr_2 <= AXI4MemoryModule_L104F9L136T10_AXI4MemoryModule_L124F13L128T14_2_AXI4MemoryModule_L125F13L128T14_AXI4MemoryModule_L126F35T51_Index;
		AXI4MemoryModule_L104F9L136T10_AXI4MemoryModule_L124F13L128T14_3_AXI4MemoryModule_L125F13L128T14_AXI4MemoryModule_L126F21T51_Expr_1 <= internalWE;
		AXI4MemoryModule_L104F9L136T10_AXI4MemoryModule_L124F13L128T14_3_AXI4MemoryModule_L125F13L128T14_AXI4MemoryModule_L126F21T51_Expr_2 <= AXI4MemoryModule_L104F9L136T10_AXI4MemoryModule_L124F13L128T14_3_AXI4MemoryModule_L125F13L128T14_AXI4MemoryModule_L126F35T51_Index;
		Inputs_M2S_AR_ARID <= M2S_AR_ARID;
		Inputs_M2S_AR_ARADDR <= M2S_AR_ARADDR;
		Inputs_M2S_AR_ARLEN <= M2S_AR_ARLEN;
		Inputs_M2S_AR_ARSIZE <= M2S_AR_ARSIZE;
		Inputs_M2S_AR_ARBURST <= M2S_AR_ARBURST;
		Inputs_M2S_AR_ARLOCK <= M2S_AR_ARLOCK;
		Inputs_M2S_AR_ARCACHE <= M2S_AR_ARCACHE;
		Inputs_M2S_AR_ARPROT <= M2S_AR_ARPROT;
		Inputs_M2S_AR_ARQOS <= M2S_AR_ARQOS;
		Inputs_M2S_AR_ARREGION <= M2S_AR_ARREGION;
		Inputs_M2S_AR_ARUSER <= M2S_AR_ARUSER;
		Inputs_M2S_AR_ARVALID <= M2S_AR_ARVALID;
		Inputs_M2S_R_RREADY <= M2S_R_RREADY;
		Inputs_M2S_AW_AWID <= M2S_AW_AWID;
		Inputs_M2S_AW_AWADDR <= M2S_AW_AWADDR;
		Inputs_M2S_AW_AWLEN <= M2S_AW_AWLEN;
		Inputs_M2S_AW_AWSIZE <= M2S_AW_AWSIZE;
		Inputs_M2S_AW_AWBURST <= M2S_AW_AWBURST;
		Inputs_M2S_AW_AWLOCK <= M2S_AW_AWLOCK;
		Inputs_M2S_AW_AWCACHE <= M2S_AW_AWCACHE;
		Inputs_M2S_AW_AWPROT <= M2S_AW_AWPROT;
		Inputs_M2S_AW_AWQOS <= M2S_AW_AWQOS;
		Inputs_M2S_AW_AWREGION <= M2S_AW_AWREGION;
		Inputs_M2S_AW_AWUSER <= M2S_AW_AWUSER;
		Inputs_M2S_AW_AWVALID <= M2S_AW_AWVALID;
		Inputs_M2S_W_WID <= M2S_W_WID;
		Inputs_M2S_W_WDATA(0) <= M2S_W_WDATA0;
		Inputs_M2S_W_WDATA(1) <= M2S_W_WDATA1;
		Inputs_M2S_W_WDATA(2) <= M2S_W_WDATA2;
		Inputs_M2S_W_WDATA(3) <= M2S_W_WDATA3;
		Inputs_M2S_W_WSTRB <= M2S_W_WSTRB;
		Inputs_M2S_W_WLAST <= M2S_W_WLAST;
		Inputs_M2S_W_WUSER <= M2S_W_WUSER;
		Inputs_M2S_W_WVALID <= M2S_W_WVALID;
		Inputs_M2S_B_BREADY <= M2S_B_BREADY;
		internalSameTxWrite <= AXI4MemoryModule_L64F37T81_Expr;
		internalDelayedTxWrite <= AXI4MemoryModule_L65F40T72_Expr;
		internalWE <= AXI4MemoryModule_L66F28T73_Expr;
		internalWSTRB <= AXI4MemoryModule_L69F13L71T26_Lookup;
		internalWADDR <= AXI4MemoryModule_L74F13L76T26_Lookup;
		internalWDATA(0) <= AXI4MemoryModule_L79F13L81T26_Lookup(7 downto 0);
		internalWDATA(1) <= AXI4MemoryModule_L79F13L81T26_Lookup(15 downto 8);
		internalWDATA(2) <= AXI4MemoryModule_L79F13L81T26_Lookup(23 downto 16);
		internalWDATA(3) <= AXI4MemoryModule_L79F13L81T26_Lookup(31 downto 24);
		internalRADDR <= AXI4MemoryModule_L84F13L86T26_Lookup;
		axiSlave_M2S_AR_ARID <= Inputs_M2S_AR_ARID;
		axiSlave_M2S_AR_ARADDR <= Inputs_M2S_AR_ARADDR;
		axiSlave_M2S_AR_ARLEN <= Inputs_M2S_AR_ARLEN;
		axiSlave_M2S_AR_ARSIZE <= Inputs_M2S_AR_ARSIZE;
		axiSlave_M2S_AR_ARBURST <= Inputs_M2S_AR_ARBURST;
		axiSlave_M2S_AR_ARLOCK <= Inputs_M2S_AR_ARLOCK;
		axiSlave_M2S_AR_ARCACHE <= Inputs_M2S_AR_ARCACHE;
		axiSlave_M2S_AR_ARPROT <= Inputs_M2S_AR_ARPROT;
		axiSlave_M2S_AR_ARQOS <= Inputs_M2S_AR_ARQOS;
		axiSlave_M2S_AR_ARREGION <= Inputs_M2S_AR_ARREGION;
		axiSlave_M2S_AR_ARUSER <= Inputs_M2S_AR_ARUSER;
		axiSlave_M2S_AR_ARVALID <= Inputs_M2S_AR_ARVALID;
		axiSlave_M2S_R_RREADY <= Inputs_M2S_R_RREADY;
		axiSlave_M2S_AW_AWID <= Inputs_M2S_AW_AWID;
		axiSlave_M2S_AW_AWADDR <= Inputs_M2S_AW_AWADDR;
		axiSlave_M2S_AW_AWLEN <= Inputs_M2S_AW_AWLEN;
		axiSlave_M2S_AW_AWSIZE <= Inputs_M2S_AW_AWSIZE;
		axiSlave_M2S_AW_AWBURST <= Inputs_M2S_AW_AWBURST;
		axiSlave_M2S_AW_AWLOCK <= Inputs_M2S_AW_AWLOCK;
		axiSlave_M2S_AW_AWCACHE <= Inputs_M2S_AW_AWCACHE;
		axiSlave_M2S_AW_AWPROT <= Inputs_M2S_AW_AWPROT;
		axiSlave_M2S_AW_AWQOS <= Inputs_M2S_AW_AWQOS;
		axiSlave_M2S_AW_AWREGION <= Inputs_M2S_AW_AWREGION;
		axiSlave_M2S_AW_AWUSER <= Inputs_M2S_AW_AWUSER;
		axiSlave_M2S_AW_AWVALID <= Inputs_M2S_AW_AWVALID;
		axiSlave_M2S_W_WID <= Inputs_M2S_W_WID;
		axiSlave_M2S_W_WDATA(0) <= Inputs_M2S_W_WDATA(0);
		axiSlave_M2S_W_WDATA(1) <= Inputs_M2S_W_WDATA(1);
		axiSlave_M2S_W_WDATA(2) <= Inputs_M2S_W_WDATA(2);
		axiSlave_M2S_W_WDATA(3) <= Inputs_M2S_W_WDATA(3);
		axiSlave_M2S_W_WSTRB <= Inputs_M2S_W_WSTRB;
		axiSlave_M2S_W_WLAST <= Inputs_M2S_W_WLAST;
		axiSlave_M2S_W_WUSER <= Inputs_M2S_W_WUSER;
		axiSlave_M2S_W_WVALID <= Inputs_M2S_W_WVALID;
		axiSlave_M2S_B_BREADY <= Inputs_M2S_B_BREADY;
		axiSlave_inRDATA(0) <= State_rdata(0);
		axiSlave_inRDATA(1) <= State_rdata(1);
		axiSlave_inRDATA(2) <= State_rdata(2);
		axiSlave_inRDATA(3) <= State_rdata(3);
		axiSlave_inARREADY <= AXI4MemoryModule_L95F29T33_Expr;
		axiSlave_inRVALID <= AXI4MemoryModule_L96F28T32_Expr;
		axiSlave_inAWREADY <= AXI4MemoryModule_L97F29T33_Expr;
		axiSlave_inWREADY <= AXI4MemoryModule_L98F28T32_Expr;
		axiSlave_inBVALID <= AXI4MemoryModule_L99F28T32_Expr;
		AXI4MemoryModule_L104F9L136T10_AXI4MemoryModule_L124F13L128T14_0_AXI4MemoryModule_L125F13L128T14_AXI4MemoryModule_L126F35T51_Index <= internalWSTRB(bit_to_integer(AXI4MemoryModule_L104F9L136T10_AXI4MemoryModule_L124F13L128T14_0_w));
		AXI4MemoryModule_L104F9L136T10_AXI4MemoryModule_L124F13L128T14_1_AXI4MemoryModule_L125F13L128T14_AXI4MemoryModule_L126F35T51_Index <= internalWSTRB(bit_to_integer(AXI4MemoryModule_L104F9L136T10_AXI4MemoryModule_L124F13L128T14_1_w));
		AXI4MemoryModule_L104F9L136T10_AXI4MemoryModule_L124F13L128T14_2_AXI4MemoryModule_L125F13L128T14_AXI4MemoryModule_L126F35T51_Index <= internalWSTRB(TO_INTEGER(AXI4MemoryModule_L104F9L136T10_AXI4MemoryModule_L124F13L128T14_2_w));
		AXI4MemoryModule_L104F9L136T10_AXI4MemoryModule_L124F13L128T14_3_AXI4MemoryModule_L125F13L128T14_AXI4MemoryModule_L126F35T51_Index <= internalWSTRB(TO_INTEGER(AXI4MemoryModule_L104F9L136T10_AXI4MemoryModule_L124F13L128T14_3_w));
		S2M_AR_ARREADY <= axiSlave_S2M_AR_ARREADY;
		S2M_AW_AWREADY <= axiSlave_S2M_AW_AWREADY;
		S2M_B_BID <= axiSlave_S2M_B_BID;
		S2M_B_BRESP <= axiSlave_S2M_B_BRESP;
		S2M_B_BUSER <= axiSlave_S2M_B_BUSER;
		S2M_B_BVALID <= axiSlave_S2M_B_BVALID;
		S2M_R_RID <= axiSlave_S2M_R_RID;
		S2M_R_RDATA0 <= axiSlave_S2M_R_RDATA(0);
		S2M_R_RDATA1 <= axiSlave_S2M_R_RDATA(1);
		S2M_R_RDATA2 <= axiSlave_S2M_R_RDATA(2);
		S2M_R_RDATA3 <= axiSlave_S2M_R_RDATA(3);
		S2M_R_RRESP <= axiSlave_S2M_R_RRESP;
		S2M_R_RLAST <= axiSlave_S2M_R_RLAST;
		S2M_R_RUSER <= axiSlave_S2M_R_RUSER;
		S2M_R_RVALID <= axiSlave_S2M_R_RVALID;
		S2M_W_WREADY <= axiSlave_S2M_W_WREADY;
		axiSlaveM2S_AR_ARIDaxiSlave_M2S_AR_ARIDHardLink <= axiSlave_M2S_AR_ARID;
		axiSlaveM2S_AR_ARADDRaxiSlave_M2S_AR_ARADDRHardLink <= axiSlave_M2S_AR_ARADDR;
		axiSlaveM2S_AR_ARLENaxiSlave_M2S_AR_ARLENHardLink <= axiSlave_M2S_AR_ARLEN;
		axiSlaveM2S_AR_ARSIZEaxiSlave_M2S_AR_ARSIZEHardLink <= axiSlave_M2S_AR_ARSIZE;
		axiSlaveM2S_AR_ARBURSTaxiSlave_M2S_AR_ARBURSTHardLink <= axiSlave_M2S_AR_ARBURST;
		axiSlaveM2S_AR_ARLOCKaxiSlave_M2S_AR_ARLOCKHardLink <= axiSlave_M2S_AR_ARLOCK;
		axiSlaveM2S_AR_ARCACHEaxiSlave_M2S_AR_ARCACHEHardLink <= axiSlave_M2S_AR_ARCACHE;
		axiSlaveM2S_AR_ARPROTaxiSlave_M2S_AR_ARPROTHardLink <= axiSlave_M2S_AR_ARPROT;
		axiSlaveM2S_AR_ARQOSaxiSlave_M2S_AR_ARQOSHardLink <= axiSlave_M2S_AR_ARQOS;
		axiSlaveM2S_AR_ARREGIONaxiSlave_M2S_AR_ARREGIONHardLink <= axiSlave_M2S_AR_ARREGION;
		axiSlaveM2S_AR_ARUSERaxiSlave_M2S_AR_ARUSERHardLink <= axiSlave_M2S_AR_ARUSER;
		axiSlaveM2S_AR_ARVALIDaxiSlave_M2S_AR_ARVALIDHardLink <= axiSlave_M2S_AR_ARVALID;
		axiSlaveM2S_R_RREADYaxiSlave_M2S_R_RREADYHardLink <= axiSlave_M2S_R_RREADY;
		axiSlaveM2S_AW_AWIDaxiSlave_M2S_AW_AWIDHardLink <= axiSlave_M2S_AW_AWID;
		axiSlaveM2S_AW_AWADDRaxiSlave_M2S_AW_AWADDRHardLink <= axiSlave_M2S_AW_AWADDR;
		axiSlaveM2S_AW_AWLENaxiSlave_M2S_AW_AWLENHardLink <= axiSlave_M2S_AW_AWLEN;
		axiSlaveM2S_AW_AWSIZEaxiSlave_M2S_AW_AWSIZEHardLink <= axiSlave_M2S_AW_AWSIZE;
		axiSlaveM2S_AW_AWBURSTaxiSlave_M2S_AW_AWBURSTHardLink <= axiSlave_M2S_AW_AWBURST;
		axiSlaveM2S_AW_AWLOCKaxiSlave_M2S_AW_AWLOCKHardLink <= axiSlave_M2S_AW_AWLOCK;
		axiSlaveM2S_AW_AWCACHEaxiSlave_M2S_AW_AWCACHEHardLink <= axiSlave_M2S_AW_AWCACHE;
		axiSlaveM2S_AW_AWPROTaxiSlave_M2S_AW_AWPROTHardLink <= axiSlave_M2S_AW_AWPROT;
		axiSlaveM2S_AW_AWQOSaxiSlave_M2S_AW_AWQOSHardLink <= axiSlave_M2S_AW_AWQOS;
		axiSlaveM2S_AW_AWREGIONaxiSlave_M2S_AW_AWREGIONHardLink <= axiSlave_M2S_AW_AWREGION;
		axiSlaveM2S_AW_AWUSERaxiSlave_M2S_AW_AWUSERHardLink <= axiSlave_M2S_AW_AWUSER;
		axiSlaveM2S_AW_AWVALIDaxiSlave_M2S_AW_AWVALIDHardLink <= axiSlave_M2S_AW_AWVALID;
		axiSlaveM2S_W_WIDaxiSlave_M2S_W_WIDHardLink <= axiSlave_M2S_W_WID;
		axiSlaveM2S_W_WDATA0axiSlave_M2S_W_WDATAHardLink <= axiSlave_M2S_W_WDATA(0);
		axiSlaveM2S_W_WDATA1axiSlave_M2S_W_WDATAHardLink <= axiSlave_M2S_W_WDATA(1);
		axiSlaveM2S_W_WDATA2axiSlave_M2S_W_WDATAHardLink <= axiSlave_M2S_W_WDATA(2);
		axiSlaveM2S_W_WDATA3axiSlave_M2S_W_WDATAHardLink <= axiSlave_M2S_W_WDATA(3);
		axiSlaveM2S_W_WSTRBaxiSlave_M2S_W_WSTRBHardLink <= axiSlave_M2S_W_WSTRB;
		axiSlaveM2S_W_WLASTaxiSlave_M2S_W_WLASTHardLink <= axiSlave_M2S_W_WLAST;
		axiSlaveM2S_W_WUSERaxiSlave_M2S_W_WUSERHardLink <= axiSlave_M2S_W_WUSER;
		axiSlaveM2S_W_WVALIDaxiSlave_M2S_W_WVALIDHardLink <= axiSlave_M2S_W_WVALID;
		axiSlaveM2S_B_BREADYaxiSlave_M2S_B_BREADYHardLink <= axiSlave_M2S_B_BREADY;
		axiSlaveinRDATA0axiSlave_inRDATAHardLink <= axiSlave_inRDATA(0);
		axiSlaveinRDATA1axiSlave_inRDATAHardLink <= axiSlave_inRDATA(1);
		axiSlaveinRDATA2axiSlave_inRDATAHardLink <= axiSlave_inRDATA(2);
		axiSlaveinRDATA3axiSlave_inRDATAHardLink <= axiSlave_inRDATA(3);
		axiSlaveinARREADYaxiSlave_inARREADYHardLink <= axiSlave_inARREADY;
		axiSlaveinRVALIDaxiSlave_inRVALIDHardLink <= axiSlave_inRVALID;
		axiSlaveinAWREADYaxiSlave_inAWREADYHardLink <= axiSlave_inAWREADY;
		axiSlaveinWREADYaxiSlave_inWREADYHardLink <= axiSlave_inWREADY;
		axiSlaveinBVALIDaxiSlave_inBVALIDHardLink <= axiSlave_inBVALID;
		axiSlave_S2M_AR_ARREADY <= axiSlaveS2M_AR_ARREADYaxiSlave_S2M_AR_ARREADYHardLink;
		axiSlave_S2M_AW_AWREADY <= axiSlaveS2M_AW_AWREADYaxiSlave_S2M_AW_AWREADYHardLink;
		axiSlave_S2M_B_BID <= axiSlaveS2M_B_BIDaxiSlave_S2M_B_BIDHardLink;
		axiSlave_S2M_B_BRESP <= axiSlaveS2M_B_BRESPaxiSlave_S2M_B_BRESPHardLink;
		axiSlave_S2M_B_BUSER <= axiSlaveS2M_B_BUSERaxiSlave_S2M_B_BUSERHardLink;
		axiSlave_S2M_B_BVALID <= axiSlaveS2M_B_BVALIDaxiSlave_S2M_B_BVALIDHardLink;
		axiSlave_S2M_R_RID <= axiSlaveS2M_R_RIDaxiSlave_S2M_R_RIDHardLink;
		axiSlave_S2M_R_RDATA(0) <= axiSlaveS2M_R_RDATA0axiSlave_S2M_R_RDATAHardLink;
		axiSlave_S2M_R_RDATA(1) <= axiSlaveS2M_R_RDATA1axiSlave_S2M_R_RDATAHardLink;
		axiSlave_S2M_R_RDATA(2) <= axiSlaveS2M_R_RDATA2axiSlave_S2M_R_RDATAHardLink;
		axiSlave_S2M_R_RDATA(3) <= axiSlaveS2M_R_RDATA3axiSlave_S2M_R_RDATAHardLink;
		axiSlave_S2M_R_RRESP <= axiSlaveS2M_R_RRESPaxiSlave_S2M_R_RRESPHardLink;
		axiSlave_S2M_R_RLAST <= axiSlaveS2M_R_RLASTaxiSlave_S2M_R_RLASTHardLink;
		axiSlave_S2M_R_RUSER <= axiSlaveS2M_R_RUSERaxiSlave_S2M_R_RUSERHardLink;
		axiSlave_S2M_R_RVALID <= axiSlaveS2M_R_RVALIDaxiSlave_S2M_R_RVALIDHardLink;
		axiSlave_S2M_W_WREADY <= axiSlaveS2M_W_WREADYaxiSlave_S2M_W_WREADYHardLink;
		axiSlave_outReadTXCompleting <= axiSlaveoutReadTXCompletingaxiSlave_outReadTXCompletingHardLink;
		axiSlave_outWriteTXCompleting <= axiSlaveoutWriteTXCompletingaxiSlave_outWriteTXCompletingHardLink;
		axiSlave_outARREADYConfirming <= axiSlaveoutARREADYConfirmingaxiSlave_outARREADYConfirmingHardLink;
		axiSlave_outARVALID <= axiSlaveoutARVALIDaxiSlave_outARVALIDHardLink;
		axiSlave_outARADDR <= axiSlaveoutARADDRaxiSlave_outARADDRHardLink;
		axiSlave_outAWREADYConfirming <= axiSlaveoutAWREADYConfirmingaxiSlave_outAWREADYConfirmingHardLink;
		axiSlave_outAWVALID <= axiSlaveoutAWVALIDaxiSlave_outAWVALIDHardLink;
		axiSlave_outAWADDR <= axiSlaveoutAWADDRaxiSlave_outAWADDRHardLink;
		axiSlave_outWREADYConfirming <= axiSlaveoutWREADYConfirmingaxiSlave_outWREADYConfirmingHardLink;
		axiSlave_outWVALID <= axiSlaveoutWVALIDaxiSlave_outWVALIDHardLink;
		axiSlave_outWDATA(0) <= axiSlaveoutWDATA0axiSlave_outWDATAHardLink;
		axiSlave_outWDATA(1) <= axiSlaveoutWDATA1axiSlave_outWDATAHardLink;
		axiSlave_outWDATA(2) <= axiSlaveoutWDATA2axiSlave_outWDATAHardLink;
		axiSlave_outWDATA(3) <= axiSlaveoutWDATA3axiSlave_outWDATAHardLink;
		axiSlave_outWSTRB <= axiSlaveoutWSTRBaxiSlave_outWSTRBHardLink;
		AXI4MemoryModule_L69F13L71T26_Lookup1 <= State_wstrb;
		AXI4MemoryModule_L69F13L71T26_Lookup2 <= axiSlave_outWSTRB;
		AXI4MemoryModule_L69F13L71T26_LookupMultiplexerAddress <= internalSameTxWrite;
		AXI4MemoryModule_L74F13L76T26_Lookup1 <= State_waddr;
		AXI4MemoryModule_L74F13L76T26_Lookup2 <= axiSlave_outAWADDR;
		AXI4MemoryModule_L74F13L76T26_LookupMultiplexerAddress <= internalSameTxWrite;
		AXI4MemoryModule_L79F13L81T26_Lookup1(31 downto 24) <= State_wdata(3);
		AXI4MemoryModule_L79F13L81T26_Lookup1(23 downto 16) <= State_wdata(2);
		AXI4MemoryModule_L79F13L81T26_Lookup1(15 downto 8) <= State_wdata(1);
		AXI4MemoryModule_L79F13L81T26_Lookup1(7 downto 0) <= State_wdata(0);
		AXI4MemoryModule_L79F13L81T26_Lookup2(31 downto 24) <= axiSlave_outWDATA(3);
		AXI4MemoryModule_L79F13L81T26_Lookup2(23 downto 16) <= axiSlave_outWDATA(2);
		AXI4MemoryModule_L79F13L81T26_Lookup2(15 downto 8) <= axiSlave_outWDATA(1);
		AXI4MemoryModule_L79F13L81T26_Lookup2(7 downto 0) <= axiSlave_outWDATA(0);
		AXI4MemoryModule_L79F13L81T26_LookupMultiplexerAddress <= internalSameTxWrite;
		AXI4MemoryModule_L84F13L86T26_Lookup1 <= State_raddr;
		AXI4MemoryModule_L84F13L86T26_Lookup2 <= axiSlave_outARADDR;
		AXI4MemoryModule_L84F13L86T26_LookupMultiplexerAddress <= axiSlave_outARREADYConfirming;
	end process;
	-- inferred simple dual port RAM with write-first behaviour
	process (Clock, AXI4MemoryModule_L104F9L136T10_AXI4MemoryModule_L124F13L128T14_0_AXI4MemoryModule_L125F13L128T14_AXI4MemoryModule_L126F21T51_Expr, internalWADDR, internalWDATA, internalRADDR_reg0, State_buff0, internalRADDR)
	begin
		if rising_edge(Clock) then
			if AXI4MemoryModule_L104F9L136T10_AXI4MemoryModule_L124F13L128T14_0_AXI4MemoryModule_L125F13L128T14_AXI4MemoryModule_L126F21T51_Expr = '1' then
				State_buff0(TO_INTEGER(internalWADDR)) <= internalWDATA(0);
			end if;
			internalRADDR_reg0 <= internalRADDR(9 downto 0);
		end if;
		State_rdata(0) <= State_buff0(TO_INTEGER(internalRADDR_reg0));
	end process;
	-- inferred simple dual port RAM with write-first behaviour
	process (Clock, AXI4MemoryModule_L104F9L136T10_AXI4MemoryModule_L124F13L128T14_1_AXI4MemoryModule_L125F13L128T14_AXI4MemoryModule_L126F21T51_Expr, internalWADDR, internalWDATA, internalRADDR_reg1, State_buff1, internalRADDR)
	begin
		if rising_edge(Clock) then
			if AXI4MemoryModule_L104F9L136T10_AXI4MemoryModule_L124F13L128T14_1_AXI4MemoryModule_L125F13L128T14_AXI4MemoryModule_L126F21T51_Expr = '1' then
				State_buff1(TO_INTEGER(internalWADDR)) <= internalWDATA(1);
			end if;
			internalRADDR_reg1 <= internalRADDR(9 downto 0);
		end if;
		State_rdata(1) <= State_buff1(TO_INTEGER(internalRADDR_reg1));
	end process;
	-- inferred simple dual port RAM with write-first behaviour
	process (Clock, AXI4MemoryModule_L104F9L136T10_AXI4MemoryModule_L124F13L128T14_2_AXI4MemoryModule_L125F13L128T14_AXI4MemoryModule_L126F21T51_Expr, internalWADDR, internalWDATA, internalRADDR_reg2, State_buff2, internalRADDR)
	begin
		if rising_edge(Clock) then
			if AXI4MemoryModule_L104F9L136T10_AXI4MemoryModule_L124F13L128T14_2_AXI4MemoryModule_L125F13L128T14_AXI4MemoryModule_L126F21T51_Expr = '1' then
				State_buff2(TO_INTEGER(internalWADDR)) <= internalWDATA(2);
			end if;
			internalRADDR_reg2 <= internalRADDR(9 downto 0);
		end if;
		State_rdata(2) <= State_buff2(TO_INTEGER(internalRADDR_reg2));
	end process;
	-- inferred simple dual port RAM with write-first behaviour
	process (Clock, AXI4MemoryModule_L104F9L136T10_AXI4MemoryModule_L124F13L128T14_3_AXI4MemoryModule_L125F13L128T14_AXI4MemoryModule_L126F21T51_Expr, internalWADDR, internalWDATA, internalRADDR_reg3, State_buff3, internalRADDR)
	begin
		if rising_edge(Clock) then
			if AXI4MemoryModule_L104F9L136T10_AXI4MemoryModule_L124F13L128T14_3_AXI4MemoryModule_L125F13L128T14_AXI4MemoryModule_L126F21T51_Expr = '1' then
				State_buff3(TO_INTEGER(internalWADDR)) <= internalWDATA(3);
			end if;
			internalRADDR_reg3 <= internalRADDR(9 downto 0);
		end if;
		State_rdata(3) <= State_buff3(TO_INTEGER(internalRADDR_reg3));
	end process;
	-- [BEGIN USER ARCHITECTURE]
	-- [END USER ARCHITECTURE]
end architecture;
