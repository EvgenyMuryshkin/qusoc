-- PLEASE READ THIS, IT MAY SAVE YOU SOME TIME AND MONEY, THANK YOU!
-- * This file was generated by Quokka FPGA Toolkit.
-- * Generated code is your property, do whatever you want with it
-- * Place custom code between [BEGIN USER ***] and [END USER ***].
-- * CAUTION: All code outside of [USER] scope is subject to regeneration.
-- * Bad things happen sometimes in developer's life,
--   it is recommended to use source control management software (e.g. git, bzr etc) to keep your custom code safe'n'sound.
-- * Internal structure of code is subject to change.
--   You can use some of signals in custom code, but most likely they will not exist in future (e.g. will get shorter or gone completely)
-- * Please send your feedback, comments, improvement ideas etc. to evmuryshkin@gmail.com
-- * Visit https://github.com/EvgenyMuryshkin/QuokkaEvaluation to access latest version of playground
--
-- DISCLAIMER:
--   Code comes AS-IS, it is your responsibility to make sure it is working as expected
--   no responsibility will be taken for any loss or damage caused by use of Quokka toolkit.
--
-- System configuration name is NestedLogicRAMIndexingModule_TopLevel, clock frequency is 1Hz, Top-level
library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;
use work.Quokka.all;
entity NestedLogicRAMIndexingModule_TopLevel is
	port
	(
		-- [BEGIN USER PORTS]
		-- [END USER PORTS]
		Clock : in std_logic;
		Reset : in std_logic;
		ReadAddr : in unsigned (1 downto 0);
		WE : in std_logic;
		WriteAddr : in unsigned (1 downto 0);
		WriteData : in unsigned (7 downto 0);
		oValue : out unsigned (7 downto 0)
	);
end entity;
-- FSM summary
-- Packages
architecture rtl of NestedLogicRAMIndexingModule_TopLevel is
	-- [BEGIN USER SIGNALS]
	-- [END USER SIGNALS]
	constant HiSignal : std_logic := '1';
	constant LoSignal : std_logic := '0';
	constant Zero : std_logic := '0';
	constant One : std_logic := '1';
	-- true is a reserved name, declaration skipped
	-- false is a reserved name, declaration skipped
	constant State_Nested_BuffDefault : unsigned(7 downto 0) := "00000000";
	constant NestedLogicRAMIndexingModule_L30F9L36T10_NestedLogicRAMIndexingModule_L32F13L35T14_NestedLogicRAMIndexingModule_L33F60T61_Expr : std_logic := '1';
	signal Inputs_ReadAddr : unsigned(1 downto 0) := (others => '0');
	signal Inputs_WE : std_logic := '0';
	signal Inputs_WriteAddr : unsigned(1 downto 0) := (others => '0');
	signal Inputs_WriteData : unsigned(7 downto 0) := (others => '0');
	signal NextState_Counter : unsigned(7 downto 0) := (others => '0');
	signal NestedLogicRAMIndexingModule_L30F9L36T10_NestedLogicRAMIndexingModule_L32F13L35T14_NestedLogicRAMIndexingModule_L33F37T62_Cast : unsigned(7 downto 0) := (others => '0');
	signal State_Counter : unsigned(7 downto 0) := "00000000";
	constant State_CounterDefault : unsigned(7 downto 0) := "00000000";
	signal NestedLogicRAMIndexingModule_L30F9L36T10_NestedLogicRAMIndexingModule_L32F13L35T14_NestedLogicRAMIndexingModule_L33F44T61_Expr : unsigned(9 downto 0) := "0000000000";
	signal NestedLogicRAMIndexingModule_L30F9L36T10_NestedLogicRAMIndexingModule_L32F13L35T14_NestedLogicRAMIndexingModule_L33F44T61_Expr_1 : signed(9 downto 0) := "0000000000";
	signal NestedLogicRAMIndexingModule_L30F9L36T10_NestedLogicRAMIndexingModule_L32F13L35T14_NestedLogicRAMIndexingModule_L33F44T61_Expr_2 : signed(9 downto 0) := "0000000000";
	type State_Nested_BuffArray is array (0 to 3) of unsigned (7 downto 0);
	signal State_Nested_Buff : State_Nested_BuffArray := (others => (others => '0'));
	type NextState_Nested_BuffArray is array (0 to 3) of unsigned (7 downto 0);
	signal NextState_Nested_Buff : NextState_Nested_BuffArray := (others => (others => '0'));
begin
	process (Clock, NextState_Counter, Reset)
	begin
		if rising_edge(Clock) then
			if Reset = '1' then
				State_Counter <= State_CounterDefault;
			else
				State_Counter <= NextState_Counter;
			end if;
		end if;
	end process;
	process (Clock, NextState_Nested_Buff, Reset)
	begin
		if rising_edge(Clock) then
			if Reset = '1' then
				for State_Nested_Buff_Iterator in 0 to 3 loop
					State_Nested_Buff(State_Nested_Buff_Iterator) <= State_Nested_BuffDefault;
				end loop;
			else
				for State_Nested_Buff_Iterator in 0 to 3 loop
					State_Nested_Buff(State_Nested_Buff_Iterator) <= NextState_Nested_Buff(State_Nested_Buff_Iterator);
				end loop;
			end if;
		end if;
	end process;
	process (NestedLogicRAMIndexingModule_L30F9L36T10_NestedLogicRAMIndexingModule_L32F13L35T14_NestedLogicRAMIndexingModule_L33F44T61_Expr_1, NestedLogicRAMIndexingModule_L30F9L36T10_NestedLogicRAMIndexingModule_L32F13L35T14_NestedLogicRAMIndexingModule_L33F44T61_Expr_2)
	begin
		NestedLogicRAMIndexingModule_L30F9L36T10_NestedLogicRAMIndexingModule_L32F13L35T14_NestedLogicRAMIndexingModule_L33F44T61_Expr <= resize(unsigned(signed(resize(NestedLogicRAMIndexingModule_L30F9L36T10_NestedLogicRAMIndexingModule_L32F13L35T14_NestedLogicRAMIndexingModule_L33F44T61_Expr_1, NestedLogicRAMIndexingModule_L30F9L36T10_NestedLogicRAMIndexingModule_L32F13L35T14_NestedLogicRAMIndexingModule_L33F44T61_Expr_1'length + 1)) + signed(resize(NestedLogicRAMIndexingModule_L30F9L36T10_NestedLogicRAMIndexingModule_L32F13L35T14_NestedLogicRAMIndexingModule_L33F44T61_Expr_2, NestedLogicRAMIndexingModule_L30F9L36T10_NestedLogicRAMIndexingModule_L32F13L35T14_NestedLogicRAMIndexingModule_L33F44T61_Expr_2'length + 1))), NestedLogicRAMIndexingModule_L30F9L36T10_NestedLogicRAMIndexingModule_L32F13L35T14_NestedLogicRAMIndexingModule_L33F44T61_Expr'length);
	end process;
	process (Inputs_WE, Inputs_WriteData, NestedLogicRAMIndexingModule_L30F9L36T10_NestedLogicRAMIndexingModule_L32F13L35T14_NestedLogicRAMIndexingModule_L33F37T62_Cast, State_Counter, State_Nested_Buff)
	begin
		for NextState_Nested_Buff_Iterator in 0 to 3 loop
			NextState_Nested_Buff(NextState_Nested_Buff_Iterator) <= State_Nested_Buff(NextState_Nested_Buff_Iterator);
		end loop;
		NextState_Counter <= State_Counter;
		if Inputs_WE = '1' then
			NextState_Counter <= NestedLogicRAMIndexingModule_L30F9L36T10_NestedLogicRAMIndexingModule_L32F13L35T14_NestedLogicRAMIndexingModule_L33F37T62_Cast;
			NextState_Nested_Buff(TO_INTEGER(Inputs_WriteAddr)) <= Inputs_WriteData;
		end if;
	end process;
	process (NestedLogicRAMIndexingModule_L30F9L36T10_NestedLogicRAMIndexingModule_L32F13L35T14_NestedLogicRAMIndexingModule_L33F44T61_Expr, ReadAddr, State_Counter, State_Nested_Buff, WE, WriteAddr, WriteData)
	begin
		NestedLogicRAMIndexingModule_L30F9L36T10_NestedLogicRAMIndexingModule_L32F13L35T14_NestedLogicRAMIndexingModule_L33F44T61_Expr_1(9 downto 8) <= (others => '0');
		NestedLogicRAMIndexingModule_L30F9L36T10_NestedLogicRAMIndexingModule_L32F13L35T14_NestedLogicRAMIndexingModule_L33F44T61_Expr_1(7 downto 0) <= signed(State_Counter);
		NestedLogicRAMIndexingModule_L30F9L36T10_NestedLogicRAMIndexingModule_L32F13L35T14_NestedLogicRAMIndexingModule_L33F44T61_Expr_2(9 downto 1) <= (others => '0');
		NestedLogicRAMIndexingModule_L30F9L36T10_NestedLogicRAMIndexingModule_L32F13L35T14_NestedLogicRAMIndexingModule_L33F44T61_Expr_2(0) <= NestedLogicRAMIndexingModule_L30F9L36T10_NestedLogicRAMIndexingModule_L32F13L35T14_NestedLogicRAMIndexingModule_L33F60T61_Expr;
		Inputs_ReadAddr <= ReadAddr;
		Inputs_WE <= WE;
		Inputs_WriteAddr <= WriteAddr;
		Inputs_WriteData <= WriteData;
		NestedLogicRAMIndexingModule_L30F9L36T10_NestedLogicRAMIndexingModule_L32F13L35T14_NestedLogicRAMIndexingModule_L33F37T62_Cast <= NestedLogicRAMIndexingModule_L30F9L36T10_NestedLogicRAMIndexingModule_L32F13L35T14_NestedLogicRAMIndexingModule_L33F44T61_Expr(7 downto 0);
		oValue <= State_Nested_Buff(TO_INTEGER(Inputs_ReadAddr));
	end process;
	-- [BEGIN USER ARCHITECTURE]
	-- [END USER ARCHITECTURE]
end architecture;
