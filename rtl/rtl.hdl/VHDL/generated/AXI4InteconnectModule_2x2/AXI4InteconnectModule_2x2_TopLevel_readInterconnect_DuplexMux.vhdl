-- PLEASE READ THIS, IT MAY SAVE YOU SOME TIME AND MONEY, THANK YOU!
-- * This file was generated by Quokka FPGA Toolkit.
-- * Generated code is your property, do whatever you want with it
-- * Place custom code between [BEGIN USER ***] and [END USER ***].
-- * CAUTION: All code outside of [USER] scope is subject to regeneration.
-- * Bad things happen sometimes in developer's life,
--   it is recommended to use source control management software (e.g. git, bzr etc) to keep your custom code safe'n'sound.
-- * Internal structure of code is subject to change.
--   You can use some of signals in custom code, but most likely they will not exist in future (e.g. will get shorter or gone completely)
-- * Please send your feedback, comments, improvement ideas etc. to evmuryshkin@gmail.com
-- * Visit https://github.com/EvgenyMuryshkin/QuokkaEvaluation to access latest version of playground
--
-- DISCLAIMER:
--   Code comes AS-IS, it is your responsibility to make sure it is working as expected
--   no responsibility will be taken for any loss or damage caused by use of Quokka toolkit.
--
-- System configuration name is AXI4InteconnectModule_2x2_TopLevel_readInterconnect_DuplexMux, clock frequency is 1Hz, Embedded
library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;
use work.Quokka.all;
entity AXI4InteconnectModule_2x2_TopLevel_readInterconnect_DuplexMux is
	port
	(
		-- [BEGIN USER PORTS]
		-- [END USER PORTS]
		iLeft0 : in unsigned (83 downto 0);
		iLeft1 : in unsigned (83 downto 0);
		iLeftAddr : in unsigned (0 downto 0);
		iLeftAddrValid : in std_logic;
		iRight0 : in unsigned (52 downto 0);
		iRight1 : in unsigned (52 downto 0);
		iRightAddr : in unsigned (0 downto 0);
		iRightAddrValid : in std_logic;
		oLeft0 : out unsigned (83 downto 0);
		oLeft1 : out unsigned (83 downto 0);
		oMuxLeftData : out unsigned (83 downto 0);
		oMuxRightData : out unsigned (52 downto 0);
		oRight0 : out unsigned (52 downto 0);
		oRight1 : out unsigned (52 downto 0)
	);
end entity;
-- FSM summary
-- Packages
architecture rtl of AXI4InteconnectModule_2x2_TopLevel_readInterconnect_DuplexMux is
	-- [BEGIN USER SIGNALS]
	-- [END USER SIGNALS]
	constant HiSignal : std_logic := '1';
	constant LoSignal : std_logic := '0';
	constant Zero : std_logic := '0';
	constant One : std_logic := '1';
	-- true is a reserved name, declaration skipped
	-- false is a reserved name, declaration skipped
	constant leftCount : signed(2 downto 0) := "010";
	constant rightCount : signed(2 downto 0) := "010";
	constant Prefilled0 : unsigned(0 downto 0) := "0";
	constant Prefilled1 : unsigned(0 downto 0) := "1";
	signal Inputs_iLeftAddr : unsigned(0 downto 0) := (others => '0');
	signal Inputs_iLeftAddrValid : std_logic := '0';
	signal Inputs_iRightAddr : unsigned(0 downto 0) := (others => '0');
	signal Inputs_iRightAddrValid : std_logic := '0';
	signal mEmptyLeftData_AR_ARID : unsigned(7 downto 0) := (others => '0');
	signal mEmptyLeftData_AR_ARADDR : unsigned(31 downto 0) := (others => '0');
	signal mEmptyLeftData_AR_ARLEN : unsigned(7 downto 0) := (others => '0');
	signal mEmptyLeftData_AR_ARSIZE : unsigned(2 downto 0) := (others => '0');
	signal mEmptyLeftData_AR_ARBURST : unsigned(1 downto 0) := (others => '0');
	signal mEmptyLeftData_AR_ARLOCK : unsigned(1 downto 0) := (others => '0');
	signal mEmptyLeftData_AR_ARCACHE : unsigned(3 downto 0) := (others => '0');
	signal mEmptyLeftData_AR_ARPROT : unsigned(2 downto 0) := (others => '0');
	signal mEmptyLeftData_AR_ARQOS : unsigned(3 downto 0) := (others => '0');
	signal mEmptyLeftData_AR_ARREGION : unsigned(7 downto 0) := (others => '0');
	signal mEmptyLeftData_AR_ARUSER : unsigned(7 downto 0) := (others => '0');
	signal mEmptyLeftData_AR_ARVALID : std_logic := '0';
	signal mEmptyLeftData_R_RREADY : std_logic := '0';
	signal mEmptyRightData_AR_ARREADY : std_logic := '0';
	signal mEmptyRightData_R_RID : unsigned(7 downto 0) := (others => '0');
	signal mEmptyRightData_R_RRESP : unsigned(1 downto 0) := (others => '0');
	signal mEmptyRightData_R_RLAST : std_logic := '0';
	signal mEmptyRightData_R_RUSER : unsigned(7 downto 0) := (others => '0');
	signal mEmptyRightData_R_RVALID : std_logic := '0';
	signal mMuxLeftData_AR_ARID : unsigned(7 downto 0) := (others => '0');
	signal mMuxLeftData_AR_ARADDR : unsigned(31 downto 0) := (others => '0');
	signal mMuxLeftData_AR_ARLEN : unsigned(7 downto 0) := (others => '0');
	signal mMuxLeftData_AR_ARSIZE : unsigned(2 downto 0) := (others => '0');
	signal mMuxLeftData_AR_ARBURST : unsigned(1 downto 0) := (others => '0');
	signal mMuxLeftData_AR_ARLOCK : unsigned(1 downto 0) := (others => '0');
	signal mMuxLeftData_AR_ARCACHE : unsigned(3 downto 0) := (others => '0');
	signal mMuxLeftData_AR_ARPROT : unsigned(2 downto 0) := (others => '0');
	signal mMuxLeftData_AR_ARQOS : unsigned(3 downto 0) := (others => '0');
	signal mMuxLeftData_AR_ARREGION : unsigned(7 downto 0) := (others => '0');
	signal mMuxLeftData_AR_ARUSER : unsigned(7 downto 0) := (others => '0');
	signal mMuxLeftData_AR_ARVALID : std_logic := '0';
	signal mMuxLeftData_R_RREADY : std_logic := '0';
	signal mMuxRightData_AR_ARREADY : std_logic := '0';
	signal mMuxRightData_R_RID : unsigned(7 downto 0) := (others => '0');
	signal mMuxRightData_R_RRESP : unsigned(1 downto 0) := (others => '0');
	signal mMuxRightData_R_RLAST : std_logic := '0';
	signal mMuxRightData_R_RUSER : unsigned(7 downto 0) := (others => '0');
	signal mMuxRightData_R_RVALID : std_logic := '0';
	signal FullDuplexMuxModule_L94F13L104T14_0_FullDuplexMuxModule_L96F21T78_Expr : std_logic := '0';
	signal FullDuplexMuxModule_L94F13L104T14_0_FullDuplexMuxModule_L96F21T78_Expr_1 : std_logic := '0';
	signal FullDuplexMuxModule_L94F13L104T14_0_FullDuplexMuxModule_L96F21T78_Expr_2 : std_logic := '0';
	signal FullDuplexMuxModule_L94F13L104T14_1_FullDuplexMuxModule_L96F21T78_Expr : std_logic := '0';
	signal FullDuplexMuxModule_L94F13L104T14_1_FullDuplexMuxModule_L96F21T78_Expr_1 : std_logic := '0';
	signal FullDuplexMuxModule_L94F13L104T14_1_FullDuplexMuxModule_L96F21T78_Expr_2 : std_logic := '0';
	signal FullDuplexMuxModule_L118F13L128T14_0_FullDuplexMuxModule_L120F21T75_Expr : std_logic := '0';
	signal FullDuplexMuxModule_L118F13L128T14_0_FullDuplexMuxModule_L120F21T75_Expr_1 : std_logic := '0';
	signal FullDuplexMuxModule_L118F13L128T14_0_FullDuplexMuxModule_L120F21T75_Expr_2 : std_logic := '0';
	signal FullDuplexMuxModule_L118F13L128T14_1_FullDuplexMuxModule_L120F21T75_Expr : std_logic := '0';
	signal FullDuplexMuxModule_L118F13L128T14_1_FullDuplexMuxModule_L120F21T75_Expr_1 : std_logic := '0';
	signal FullDuplexMuxModule_L118F13L128T14_1_FullDuplexMuxModule_L120F21T75_Expr_2 : std_logic := '0';
	signal FullDuplexMuxModule_L94F13L104T14_0_FullDuplexMuxModule_L96F47T78_Expr : std_logic := '0';
	signal FullDuplexMuxModule_L94F13L104T14_0_FullDuplexMuxModule_L96F47T78_ExprLhs : signed(1 downto 0) := "00";
	signal FullDuplexMuxModule_L94F13L104T14_0_FullDuplexMuxModule_L96F47T78_ExprRhs : signed(1 downto 0) := "00";
	signal FullDuplexMuxModule_L94F13L104T14_1_FullDuplexMuxModule_L96F47T78_Expr : std_logic := '0';
	signal FullDuplexMuxModule_L94F13L104T14_1_FullDuplexMuxModule_L96F47T78_ExprLhs : signed(1 downto 0) := "00";
	signal FullDuplexMuxModule_L94F13L104T14_1_FullDuplexMuxModule_L96F47T78_ExprRhs : signed(1 downto 0) := "00";
	signal FullDuplexMuxModule_L118F13L128T14_0_FullDuplexMuxModule_L120F46T75_Expr : std_logic := '0';
	signal FullDuplexMuxModule_L118F13L128T14_0_FullDuplexMuxModule_L120F46T75_ExprLhs : signed(1 downto 0) := "00";
	signal FullDuplexMuxModule_L118F13L128T14_0_FullDuplexMuxModule_L120F46T75_ExprRhs : signed(1 downto 0) := "00";
	signal FullDuplexMuxModule_L118F13L128T14_1_FullDuplexMuxModule_L120F46T75_Expr : std_logic := '0';
	signal FullDuplexMuxModule_L118F13L128T14_1_FullDuplexMuxModule_L120F46T75_ExprLhs : signed(1 downto 0) := "00";
	signal FullDuplexMuxModule_L118F13L128T14_1_FullDuplexMuxModule_L120F46T75_ExprRhs : signed(1 downto 0) := "00";
	type Inputs_iLeftArray is array (0 to 1) of unsigned (83 downto 0);
	signal Inputs_iLeft : Inputs_iLeftArray := (others => (others => '0'));
	type Inputs_iRightArray is array (0 to 1) of unsigned (52 downto 0);
	signal Inputs_iRight : Inputs_iRightArray := (others => (others => '0'));
	type mEmptyRightData_R_RDATAArray is array (0 to 3) of unsigned (7 downto 0);
	signal mEmptyRightData_R_RDATA : mEmptyRightData_R_RDATAArray := (others => (others => '0'));
	type mMuxRightData_R_RDATAArray is array (0 to 3) of unsigned (7 downto 0);
	signal mMuxRightData_R_RDATA : mMuxRightData_R_RDATAArray := (others => (others => '0'));
	type mOutLeftDataArray is array (0 to 1) of unsigned (83 downto 0);
	signal mOutLeftData : mOutLeftDataArray := (others => (others => '0'));
	type mOutRightDataArray is array (0 to 1) of unsigned (52 downto 0);
	signal mOutRightData : mOutRightDataArray := (others => (others => '0'));
begin
	FullDuplexMuxModule_L94F13L104T14_0_FullDuplexMuxModule_L96F47T78_Expr <= '1' when (signed(resize(FullDuplexMuxModule_L94F13L104T14_0_FullDuplexMuxModule_L96F47T78_ExprLhs, FullDuplexMuxModule_L94F13L104T14_0_FullDuplexMuxModule_L96F47T78_ExprLhs'length + 1)) = signed(resize(FullDuplexMuxModule_L94F13L104T14_0_FullDuplexMuxModule_L96F47T78_ExprRhs, FullDuplexMuxModule_L94F13L104T14_0_FullDuplexMuxModule_L96F47T78_ExprRhs'length + 1))) else '0';
	FullDuplexMuxModule_L94F13L104T14_1_FullDuplexMuxModule_L96F47T78_Expr <= '1' when (signed(resize(FullDuplexMuxModule_L94F13L104T14_1_FullDuplexMuxModule_L96F47T78_ExprLhs, FullDuplexMuxModule_L94F13L104T14_1_FullDuplexMuxModule_L96F47T78_ExprLhs'length + 1)) = signed(resize(FullDuplexMuxModule_L94F13L104T14_1_FullDuplexMuxModule_L96F47T78_ExprRhs, FullDuplexMuxModule_L94F13L104T14_1_FullDuplexMuxModule_L96F47T78_ExprRhs'length + 1))) else '0';
	FullDuplexMuxModule_L118F13L128T14_0_FullDuplexMuxModule_L120F46T75_Expr <= '1' when (signed(resize(FullDuplexMuxModule_L118F13L128T14_0_FullDuplexMuxModule_L120F46T75_ExprLhs, FullDuplexMuxModule_L118F13L128T14_0_FullDuplexMuxModule_L120F46T75_ExprLhs'length + 1)) = signed(resize(FullDuplexMuxModule_L118F13L128T14_0_FullDuplexMuxModule_L120F46T75_ExprRhs, FullDuplexMuxModule_L118F13L128T14_0_FullDuplexMuxModule_L120F46T75_ExprRhs'length + 1))) else '0';
	FullDuplexMuxModule_L118F13L128T14_1_FullDuplexMuxModule_L120F46T75_Expr <= '1' when (signed(resize(FullDuplexMuxModule_L118F13L128T14_1_FullDuplexMuxModule_L120F46T75_ExprLhs, FullDuplexMuxModule_L118F13L128T14_1_FullDuplexMuxModule_L120F46T75_ExprLhs'length + 1)) = signed(resize(FullDuplexMuxModule_L118F13L128T14_1_FullDuplexMuxModule_L120F46T75_ExprRhs, FullDuplexMuxModule_L118F13L128T14_1_FullDuplexMuxModule_L120F46T75_ExprRhs'length + 1))) else '0';
	process (FullDuplexMuxModule_L94F13L104T14_0_FullDuplexMuxModule_L96F21T78_Expr_1, FullDuplexMuxModule_L94F13L104T14_0_FullDuplexMuxModule_L96F21T78_Expr_2)
	begin
		FullDuplexMuxModule_L94F13L104T14_0_FullDuplexMuxModule_L96F21T78_Expr <= FullDuplexMuxModule_L94F13L104T14_0_FullDuplexMuxModule_L96F21T78_Expr_1 AND FullDuplexMuxModule_L94F13L104T14_0_FullDuplexMuxModule_L96F21T78_Expr_2;
	end process;
	process (FullDuplexMuxModule_L94F13L104T14_1_FullDuplexMuxModule_L96F21T78_Expr_1, FullDuplexMuxModule_L94F13L104T14_1_FullDuplexMuxModule_L96F21T78_Expr_2)
	begin
		FullDuplexMuxModule_L94F13L104T14_1_FullDuplexMuxModule_L96F21T78_Expr <= FullDuplexMuxModule_L94F13L104T14_1_FullDuplexMuxModule_L96F21T78_Expr_1 AND FullDuplexMuxModule_L94F13L104T14_1_FullDuplexMuxModule_L96F21T78_Expr_2;
	end process;
	process (FullDuplexMuxModule_L118F13L128T14_0_FullDuplexMuxModule_L120F21T75_Expr_1, FullDuplexMuxModule_L118F13L128T14_0_FullDuplexMuxModule_L120F21T75_Expr_2)
	begin
		FullDuplexMuxModule_L118F13L128T14_0_FullDuplexMuxModule_L120F21T75_Expr <= FullDuplexMuxModule_L118F13L128T14_0_FullDuplexMuxModule_L120F21T75_Expr_1 AND FullDuplexMuxModule_L118F13L128T14_0_FullDuplexMuxModule_L120F21T75_Expr_2;
	end process;
	process (FullDuplexMuxModule_L118F13L128T14_1_FullDuplexMuxModule_L120F21T75_Expr_1, FullDuplexMuxModule_L118F13L128T14_1_FullDuplexMuxModule_L120F21T75_Expr_2)
	begin
		FullDuplexMuxModule_L118F13L128T14_1_FullDuplexMuxModule_L120F21T75_Expr <= FullDuplexMuxModule_L118F13L128T14_1_FullDuplexMuxModule_L120F21T75_Expr_1 AND FullDuplexMuxModule_L118F13L128T14_1_FullDuplexMuxModule_L120F21T75_Expr_2;
	end process;
	process (Inputs_iLeft, Inputs_iLeftAddrValid, mEmptyLeftData_AR_ARADDR, mEmptyLeftData_AR_ARBURST, mEmptyLeftData_AR_ARCACHE, mEmptyLeftData_AR_ARID, mEmptyLeftData_AR_ARLEN, mEmptyLeftData_AR_ARLOCK, mEmptyLeftData_AR_ARPROT, mEmptyLeftData_AR_ARQOS, mEmptyLeftData_AR_ARREGION, mEmptyLeftData_AR_ARSIZE, mEmptyLeftData_AR_ARUSER, mEmptyLeftData_AR_ARVALID, mEmptyLeftData_R_RREADY)
	begin
		if Inputs_iLeftAddrValid = '1' then
			mMuxLeftData_R_RREADY <= Inputs_iLeft(TO_INTEGER(Inputs_iLeftAddr))(83);
			mMuxLeftData_AR_ARVALID <= Inputs_iLeft(TO_INTEGER(Inputs_iLeftAddr))(82);
			mMuxLeftData_AR_ARUSER <= Inputs_iLeft(TO_INTEGER(Inputs_iLeftAddr))(81 downto 74);
			mMuxLeftData_AR_ARREGION <= Inputs_iLeft(TO_INTEGER(Inputs_iLeftAddr))(73 downto 66);
			mMuxLeftData_AR_ARQOS <= Inputs_iLeft(TO_INTEGER(Inputs_iLeftAddr))(65 downto 62);
			mMuxLeftData_AR_ARPROT <= Inputs_iLeft(TO_INTEGER(Inputs_iLeftAddr))(61 downto 59);
			mMuxLeftData_AR_ARCACHE <= Inputs_iLeft(TO_INTEGER(Inputs_iLeftAddr))(58 downto 55);
			mMuxLeftData_AR_ARLOCK <= Inputs_iLeft(TO_INTEGER(Inputs_iLeftAddr))(54 downto 53);
			mMuxLeftData_AR_ARBURST <= Inputs_iLeft(TO_INTEGER(Inputs_iLeftAddr))(52 downto 51);
			mMuxLeftData_AR_ARSIZE <= Inputs_iLeft(TO_INTEGER(Inputs_iLeftAddr))(50 downto 48);
			mMuxLeftData_AR_ARLEN <= Inputs_iLeft(TO_INTEGER(Inputs_iLeftAddr))(47 downto 40);
			mMuxLeftData_AR_ARADDR <= Inputs_iLeft(TO_INTEGER(Inputs_iLeftAddr))(39 downto 8);
			mMuxLeftData_AR_ARID <= Inputs_iLeft(TO_INTEGER(Inputs_iLeftAddr))(7 downto 0);
		else
			mMuxLeftData_AR_ARID <= mEmptyLeftData_AR_ARID;
			mMuxLeftData_AR_ARADDR <= mEmptyLeftData_AR_ARADDR;
			mMuxLeftData_AR_ARLEN <= mEmptyLeftData_AR_ARLEN;
			mMuxLeftData_AR_ARSIZE <= mEmptyLeftData_AR_ARSIZE;
			mMuxLeftData_AR_ARBURST <= mEmptyLeftData_AR_ARBURST;
			mMuxLeftData_AR_ARLOCK <= mEmptyLeftData_AR_ARLOCK;
			mMuxLeftData_AR_ARCACHE <= mEmptyLeftData_AR_ARCACHE;
			mMuxLeftData_AR_ARPROT <= mEmptyLeftData_AR_ARPROT;
			mMuxLeftData_AR_ARQOS <= mEmptyLeftData_AR_ARQOS;
			mMuxLeftData_AR_ARREGION <= mEmptyLeftData_AR_ARREGION;
			mMuxLeftData_AR_ARUSER <= mEmptyLeftData_AR_ARUSER;
			mMuxLeftData_AR_ARVALID <= mEmptyLeftData_AR_ARVALID;
			mMuxLeftData_R_RREADY <= mEmptyLeftData_R_RREADY;
		end if;
	end process;
	process (FullDuplexMuxModule_L94F13L104T14_0_FullDuplexMuxModule_L96F21T78_Expr, mEmptyLeftData_AR_ARADDR, mEmptyLeftData_AR_ARBURST, mEmptyLeftData_AR_ARCACHE, mEmptyLeftData_AR_ARID, mEmptyLeftData_AR_ARLEN, mEmptyLeftData_AR_ARLOCK, mEmptyLeftData_AR_ARPROT, mEmptyLeftData_AR_ARQOS, mEmptyLeftData_AR_ARREGION, mEmptyLeftData_AR_ARSIZE, mEmptyLeftData_AR_ARUSER, mEmptyLeftData_AR_ARVALID, mEmptyLeftData_R_RREADY, mMuxLeftData_AR_ARADDR, mMuxLeftData_AR_ARBURST, mMuxLeftData_AR_ARCACHE, mMuxLeftData_AR_ARID, mMuxLeftData_AR_ARLEN, mMuxLeftData_AR_ARLOCK, mMuxLeftData_AR_ARPROT, mMuxLeftData_AR_ARQOS, mMuxLeftData_AR_ARREGION, mMuxLeftData_AR_ARSIZE, mMuxLeftData_AR_ARUSER, mMuxLeftData_AR_ARVALID, mMuxLeftData_R_RREADY)
	begin
		if FullDuplexMuxModule_L94F13L104T14_0_FullDuplexMuxModule_L96F21T78_Expr = '1' then
			mOutLeftData(0)(83) <= mMuxLeftData_R_RREADY;
			mOutLeftData(0)(82) <= mMuxLeftData_AR_ARVALID;
			mOutLeftData(0)(81 downto 74) <= mMuxLeftData_AR_ARUSER;
			mOutLeftData(0)(73 downto 66) <= mMuxLeftData_AR_ARREGION;
			mOutLeftData(0)(65 downto 62) <= mMuxLeftData_AR_ARQOS;
			mOutLeftData(0)(61 downto 59) <= mMuxLeftData_AR_ARPROT;
			mOutLeftData(0)(58 downto 55) <= mMuxLeftData_AR_ARCACHE;
			mOutLeftData(0)(54 downto 53) <= mMuxLeftData_AR_ARLOCK;
			mOutLeftData(0)(52 downto 51) <= mMuxLeftData_AR_ARBURST;
			mOutLeftData(0)(50 downto 48) <= mMuxLeftData_AR_ARSIZE;
			mOutLeftData(0)(47 downto 40) <= mMuxLeftData_AR_ARLEN;
			mOutLeftData(0)(39 downto 8) <= mMuxLeftData_AR_ARADDR;
			mOutLeftData(0)(7 downto 0) <= mMuxLeftData_AR_ARID;
		else
			mOutLeftData(0)(83) <= mEmptyLeftData_R_RREADY;
			mOutLeftData(0)(82) <= mEmptyLeftData_AR_ARVALID;
			mOutLeftData(0)(81 downto 74) <= mEmptyLeftData_AR_ARUSER;
			mOutLeftData(0)(73 downto 66) <= mEmptyLeftData_AR_ARREGION;
			mOutLeftData(0)(65 downto 62) <= mEmptyLeftData_AR_ARQOS;
			mOutLeftData(0)(61 downto 59) <= mEmptyLeftData_AR_ARPROT;
			mOutLeftData(0)(58 downto 55) <= mEmptyLeftData_AR_ARCACHE;
			mOutLeftData(0)(54 downto 53) <= mEmptyLeftData_AR_ARLOCK;
			mOutLeftData(0)(52 downto 51) <= mEmptyLeftData_AR_ARBURST;
			mOutLeftData(0)(50 downto 48) <= mEmptyLeftData_AR_ARSIZE;
			mOutLeftData(0)(47 downto 40) <= mEmptyLeftData_AR_ARLEN;
			mOutLeftData(0)(39 downto 8) <= mEmptyLeftData_AR_ARADDR;
			mOutLeftData(0)(7 downto 0) <= mEmptyLeftData_AR_ARID;
		end if;
	end process;
	process (FullDuplexMuxModule_L94F13L104T14_1_FullDuplexMuxModule_L96F21T78_Expr, mEmptyLeftData_AR_ARADDR, mEmptyLeftData_AR_ARBURST, mEmptyLeftData_AR_ARCACHE, mEmptyLeftData_AR_ARID, mEmptyLeftData_AR_ARLEN, mEmptyLeftData_AR_ARLOCK, mEmptyLeftData_AR_ARPROT, mEmptyLeftData_AR_ARQOS, mEmptyLeftData_AR_ARREGION, mEmptyLeftData_AR_ARSIZE, mEmptyLeftData_AR_ARUSER, mEmptyLeftData_AR_ARVALID, mEmptyLeftData_R_RREADY, mMuxLeftData_AR_ARADDR, mMuxLeftData_AR_ARBURST, mMuxLeftData_AR_ARCACHE, mMuxLeftData_AR_ARID, mMuxLeftData_AR_ARLEN, mMuxLeftData_AR_ARLOCK, mMuxLeftData_AR_ARPROT, mMuxLeftData_AR_ARQOS, mMuxLeftData_AR_ARREGION, mMuxLeftData_AR_ARSIZE, mMuxLeftData_AR_ARUSER, mMuxLeftData_AR_ARVALID, mMuxLeftData_R_RREADY)
	begin
		if FullDuplexMuxModule_L94F13L104T14_1_FullDuplexMuxModule_L96F21T78_Expr = '1' then
			mOutLeftData(1)(83) <= mMuxLeftData_R_RREADY;
			mOutLeftData(1)(82) <= mMuxLeftData_AR_ARVALID;
			mOutLeftData(1)(81 downto 74) <= mMuxLeftData_AR_ARUSER;
			mOutLeftData(1)(73 downto 66) <= mMuxLeftData_AR_ARREGION;
			mOutLeftData(1)(65 downto 62) <= mMuxLeftData_AR_ARQOS;
			mOutLeftData(1)(61 downto 59) <= mMuxLeftData_AR_ARPROT;
			mOutLeftData(1)(58 downto 55) <= mMuxLeftData_AR_ARCACHE;
			mOutLeftData(1)(54 downto 53) <= mMuxLeftData_AR_ARLOCK;
			mOutLeftData(1)(52 downto 51) <= mMuxLeftData_AR_ARBURST;
			mOutLeftData(1)(50 downto 48) <= mMuxLeftData_AR_ARSIZE;
			mOutLeftData(1)(47 downto 40) <= mMuxLeftData_AR_ARLEN;
			mOutLeftData(1)(39 downto 8) <= mMuxLeftData_AR_ARADDR;
			mOutLeftData(1)(7 downto 0) <= mMuxLeftData_AR_ARID;
		else
			mOutLeftData(1)(83) <= mEmptyLeftData_R_RREADY;
			mOutLeftData(1)(82) <= mEmptyLeftData_AR_ARVALID;
			mOutLeftData(1)(81 downto 74) <= mEmptyLeftData_AR_ARUSER;
			mOutLeftData(1)(73 downto 66) <= mEmptyLeftData_AR_ARREGION;
			mOutLeftData(1)(65 downto 62) <= mEmptyLeftData_AR_ARQOS;
			mOutLeftData(1)(61 downto 59) <= mEmptyLeftData_AR_ARPROT;
			mOutLeftData(1)(58 downto 55) <= mEmptyLeftData_AR_ARCACHE;
			mOutLeftData(1)(54 downto 53) <= mEmptyLeftData_AR_ARLOCK;
			mOutLeftData(1)(52 downto 51) <= mEmptyLeftData_AR_ARBURST;
			mOutLeftData(1)(50 downto 48) <= mEmptyLeftData_AR_ARSIZE;
			mOutLeftData(1)(47 downto 40) <= mEmptyLeftData_AR_ARLEN;
			mOutLeftData(1)(39 downto 8) <= mEmptyLeftData_AR_ARADDR;
			mOutLeftData(1)(7 downto 0) <= mEmptyLeftData_AR_ARID;
		end if;
	end process;
	process (Inputs_iRight, Inputs_iRightAddrValid, mEmptyRightData_AR_ARREADY, mEmptyRightData_R_RDATA, mEmptyRightData_R_RID, mEmptyRightData_R_RLAST, mEmptyRightData_R_RRESP, mEmptyRightData_R_RUSER, mEmptyRightData_R_RVALID)
	begin
		if Inputs_iRightAddrValid = '1' then
			mMuxRightData_R_RVALID <= Inputs_iRight(TO_INTEGER(Inputs_iRightAddr))(52);
			mMuxRightData_R_RUSER <= Inputs_iRight(TO_INTEGER(Inputs_iRightAddr))(51 downto 44);
			mMuxRightData_R_RLAST <= Inputs_iRight(TO_INTEGER(Inputs_iRightAddr))(43);
			mMuxRightData_R_RRESP <= Inputs_iRight(TO_INTEGER(Inputs_iRightAddr))(42 downto 41);
			mMuxRightData_R_RDATA(3) <= Inputs_iRight(TO_INTEGER(Inputs_iRightAddr))(40 downto 33);
			mMuxRightData_R_RDATA(2) <= Inputs_iRight(TO_INTEGER(Inputs_iRightAddr))(32 downto 25);
			mMuxRightData_R_RDATA(1) <= Inputs_iRight(TO_INTEGER(Inputs_iRightAddr))(24 downto 17);
			mMuxRightData_R_RDATA(0) <= Inputs_iRight(TO_INTEGER(Inputs_iRightAddr))(16 downto 9);
			mMuxRightData_R_RID <= Inputs_iRight(TO_INTEGER(Inputs_iRightAddr))(8 downto 1);
			mMuxRightData_AR_ARREADY <= Inputs_iRight(TO_INTEGER(Inputs_iRightAddr))(0);
		else
			mMuxRightData_AR_ARREADY <= mEmptyRightData_AR_ARREADY;
			mMuxRightData_R_RID <= mEmptyRightData_R_RID;
			mMuxRightData_R_RDATA(0) <= mEmptyRightData_R_RDATA(0);
			mMuxRightData_R_RDATA(1) <= mEmptyRightData_R_RDATA(1);
			mMuxRightData_R_RDATA(2) <= mEmptyRightData_R_RDATA(2);
			mMuxRightData_R_RDATA(3) <= mEmptyRightData_R_RDATA(3);
			mMuxRightData_R_RRESP <= mEmptyRightData_R_RRESP;
			mMuxRightData_R_RLAST <= mEmptyRightData_R_RLAST;
			mMuxRightData_R_RUSER <= mEmptyRightData_R_RUSER;
			mMuxRightData_R_RVALID <= mEmptyRightData_R_RVALID;
		end if;
	end process;
	process (FullDuplexMuxModule_L118F13L128T14_0_FullDuplexMuxModule_L120F21T75_Expr, mEmptyRightData_AR_ARREADY, mEmptyRightData_R_RDATA, mEmptyRightData_R_RID, mEmptyRightData_R_RLAST, mEmptyRightData_R_RRESP, mEmptyRightData_R_RUSER, mEmptyRightData_R_RVALID, mMuxRightData_AR_ARREADY, mMuxRightData_R_RDATA, mMuxRightData_R_RID, mMuxRightData_R_RLAST, mMuxRightData_R_RRESP, mMuxRightData_R_RUSER, mMuxRightData_R_RVALID)
	begin
		if FullDuplexMuxModule_L118F13L128T14_0_FullDuplexMuxModule_L120F21T75_Expr = '1' then
			mOutRightData(0)(52) <= mMuxRightData_R_RVALID;
			mOutRightData(0)(51 downto 44) <= mMuxRightData_R_RUSER;
			mOutRightData(0)(43) <= mMuxRightData_R_RLAST;
			mOutRightData(0)(42 downto 41) <= mMuxRightData_R_RRESP;
			mOutRightData(0)(40 downto 33) <= mMuxRightData_R_RDATA(3);
			mOutRightData(0)(32 downto 25) <= mMuxRightData_R_RDATA(2);
			mOutRightData(0)(24 downto 17) <= mMuxRightData_R_RDATA(1);
			mOutRightData(0)(16 downto 9) <= mMuxRightData_R_RDATA(0);
			mOutRightData(0)(8 downto 1) <= mMuxRightData_R_RID;
			mOutRightData(0)(0) <= mMuxRightData_AR_ARREADY;
		else
			mOutRightData(0)(52) <= mEmptyRightData_R_RVALID;
			mOutRightData(0)(51 downto 44) <= mEmptyRightData_R_RUSER;
			mOutRightData(0)(43) <= mEmptyRightData_R_RLAST;
			mOutRightData(0)(42 downto 41) <= mEmptyRightData_R_RRESP;
			mOutRightData(0)(40 downto 33) <= mEmptyRightData_R_RDATA(3);
			mOutRightData(0)(32 downto 25) <= mEmptyRightData_R_RDATA(2);
			mOutRightData(0)(24 downto 17) <= mEmptyRightData_R_RDATA(1);
			mOutRightData(0)(16 downto 9) <= mEmptyRightData_R_RDATA(0);
			mOutRightData(0)(8 downto 1) <= mEmptyRightData_R_RID;
			mOutRightData(0)(0) <= mEmptyRightData_AR_ARREADY;
		end if;
	end process;
	process (FullDuplexMuxModule_L118F13L128T14_1_FullDuplexMuxModule_L120F21T75_Expr, mEmptyRightData_AR_ARREADY, mEmptyRightData_R_RDATA, mEmptyRightData_R_RID, mEmptyRightData_R_RLAST, mEmptyRightData_R_RRESP, mEmptyRightData_R_RUSER, mEmptyRightData_R_RVALID, mMuxRightData_AR_ARREADY, mMuxRightData_R_RDATA, mMuxRightData_R_RID, mMuxRightData_R_RLAST, mMuxRightData_R_RRESP, mMuxRightData_R_RUSER, mMuxRightData_R_RVALID)
	begin
		if FullDuplexMuxModule_L118F13L128T14_1_FullDuplexMuxModule_L120F21T75_Expr = '1' then
			mOutRightData(1)(52) <= mMuxRightData_R_RVALID;
			mOutRightData(1)(51 downto 44) <= mMuxRightData_R_RUSER;
			mOutRightData(1)(43) <= mMuxRightData_R_RLAST;
			mOutRightData(1)(42 downto 41) <= mMuxRightData_R_RRESP;
			mOutRightData(1)(40 downto 33) <= mMuxRightData_R_RDATA(3);
			mOutRightData(1)(32 downto 25) <= mMuxRightData_R_RDATA(2);
			mOutRightData(1)(24 downto 17) <= mMuxRightData_R_RDATA(1);
			mOutRightData(1)(16 downto 9) <= mMuxRightData_R_RDATA(0);
			mOutRightData(1)(8 downto 1) <= mMuxRightData_R_RID;
			mOutRightData(1)(0) <= mMuxRightData_AR_ARREADY;
		else
			mOutRightData(1)(52) <= mEmptyRightData_R_RVALID;
			mOutRightData(1)(51 downto 44) <= mEmptyRightData_R_RUSER;
			mOutRightData(1)(43) <= mEmptyRightData_R_RLAST;
			mOutRightData(1)(42 downto 41) <= mEmptyRightData_R_RRESP;
			mOutRightData(1)(40 downto 33) <= mEmptyRightData_R_RDATA(3);
			mOutRightData(1)(32 downto 25) <= mEmptyRightData_R_RDATA(2);
			mOutRightData(1)(24 downto 17) <= mEmptyRightData_R_RDATA(1);
			mOutRightData(1)(16 downto 9) <= mEmptyRightData_R_RDATA(0);
			mOutRightData(1)(8 downto 1) <= mEmptyRightData_R_RID;
			mOutRightData(1)(0) <= mEmptyRightData_AR_ARREADY;
		end if;
	end process;
	process (FullDuplexMuxModule_L118F13L128T14_0_FullDuplexMuxModule_L120F46T75_Expr, FullDuplexMuxModule_L118F13L128T14_1_FullDuplexMuxModule_L120F46T75_Expr, FullDuplexMuxModule_L94F13L104T14_0_FullDuplexMuxModule_L96F47T78_Expr, FullDuplexMuxModule_L94F13L104T14_1_FullDuplexMuxModule_L96F47T78_Expr, iLeft0, iLeft1, iLeftAddr, iLeftAddrValid, Inputs_iLeftAddr, Inputs_iLeftAddrValid, Inputs_iRightAddr, Inputs_iRightAddrValid, iRight0, iRight1, iRightAddr, iRightAddrValid, mMuxLeftData_AR_ARADDR, mMuxLeftData_AR_ARBURST, mMuxLeftData_AR_ARCACHE, mMuxLeftData_AR_ARID, mMuxLeftData_AR_ARLEN, mMuxLeftData_AR_ARLOCK, mMuxLeftData_AR_ARPROT, mMuxLeftData_AR_ARQOS, mMuxLeftData_AR_ARREGION, mMuxLeftData_AR_ARSIZE, mMuxLeftData_AR_ARUSER, mMuxLeftData_AR_ARVALID, mMuxLeftData_R_RREADY, mMuxRightData_AR_ARREADY, mMuxRightData_R_RDATA, mMuxRightData_R_RID, mMuxRightData_R_RLAST, mMuxRightData_R_RRESP, mMuxRightData_R_RUSER, mMuxRightData_R_RVALID, mOutLeftData, mOutRightData)
	begin
		FullDuplexMuxModule_L94F13L104T14_0_FullDuplexMuxModule_L96F47T78_ExprLhs(1) <= '0';
		FullDuplexMuxModule_L94F13L104T14_0_FullDuplexMuxModule_L96F47T78_ExprLhs(0) <= Inputs_iRightAddr(0);
		FullDuplexMuxModule_L94F13L104T14_0_FullDuplexMuxModule_L96F47T78_ExprRhs(1) <= '0';
		FullDuplexMuxModule_L94F13L104T14_0_FullDuplexMuxModule_L96F47T78_ExprRhs(0) <= Prefilled0(0);
		FullDuplexMuxModule_L94F13L104T14_1_FullDuplexMuxModule_L96F47T78_ExprLhs(1) <= '0';
		FullDuplexMuxModule_L94F13L104T14_1_FullDuplexMuxModule_L96F47T78_ExprLhs(0) <= Inputs_iRightAddr(0);
		FullDuplexMuxModule_L94F13L104T14_1_FullDuplexMuxModule_L96F47T78_ExprRhs(1) <= '0';
		FullDuplexMuxModule_L94F13L104T14_1_FullDuplexMuxModule_L96F47T78_ExprRhs(0) <= Prefilled1(0);
		FullDuplexMuxModule_L118F13L128T14_0_FullDuplexMuxModule_L120F46T75_ExprLhs(1) <= '0';
		FullDuplexMuxModule_L118F13L128T14_0_FullDuplexMuxModule_L120F46T75_ExprLhs(0) <= Inputs_iLeftAddr(0);
		FullDuplexMuxModule_L118F13L128T14_0_FullDuplexMuxModule_L120F46T75_ExprRhs(1) <= '0';
		FullDuplexMuxModule_L118F13L128T14_0_FullDuplexMuxModule_L120F46T75_ExprRhs(0) <= Prefilled0(0);
		FullDuplexMuxModule_L118F13L128T14_1_FullDuplexMuxModule_L120F46T75_ExprLhs(1) <= '0';
		FullDuplexMuxModule_L118F13L128T14_1_FullDuplexMuxModule_L120F46T75_ExprLhs(0) <= Inputs_iLeftAddr(0);
		FullDuplexMuxModule_L118F13L128T14_1_FullDuplexMuxModule_L120F46T75_ExprRhs(1) <= '0';
		FullDuplexMuxModule_L118F13L128T14_1_FullDuplexMuxModule_L120F46T75_ExprRhs(0) <= Prefilled1(0);
		FullDuplexMuxModule_L94F13L104T14_0_FullDuplexMuxModule_L96F21T78_Expr_1 <= Inputs_iRightAddrValid;
		FullDuplexMuxModule_L94F13L104T14_0_FullDuplexMuxModule_L96F21T78_Expr_2 <= FullDuplexMuxModule_L94F13L104T14_0_FullDuplexMuxModule_L96F47T78_Expr;
		FullDuplexMuxModule_L94F13L104T14_1_FullDuplexMuxModule_L96F21T78_Expr_1 <= Inputs_iRightAddrValid;
		FullDuplexMuxModule_L94F13L104T14_1_FullDuplexMuxModule_L96F21T78_Expr_2 <= FullDuplexMuxModule_L94F13L104T14_1_FullDuplexMuxModule_L96F47T78_Expr;
		FullDuplexMuxModule_L118F13L128T14_0_FullDuplexMuxModule_L120F21T75_Expr_1 <= Inputs_iLeftAddrValid;
		FullDuplexMuxModule_L118F13L128T14_0_FullDuplexMuxModule_L120F21T75_Expr_2 <= FullDuplexMuxModule_L118F13L128T14_0_FullDuplexMuxModule_L120F46T75_Expr;
		FullDuplexMuxModule_L118F13L128T14_1_FullDuplexMuxModule_L120F21T75_Expr_1 <= Inputs_iLeftAddrValid;
		FullDuplexMuxModule_L118F13L128T14_1_FullDuplexMuxModule_L120F21T75_Expr_2 <= FullDuplexMuxModule_L118F13L128T14_1_FullDuplexMuxModule_L120F46T75_Expr;
		Inputs_iLeft(0) <= iLeft0;
		Inputs_iLeft(1) <= iLeft1;
		Inputs_iLeftAddr <= iLeftAddr;
		Inputs_iLeftAddrValid <= iLeftAddrValid;
		Inputs_iRight(0) <= iRight0;
		Inputs_iRight(1) <= iRight1;
		Inputs_iRightAddr <= iRightAddr;
		Inputs_iRightAddrValid <= iRightAddrValid;
		oLeft0 <= mOutLeftData(0);
		oLeft1 <= mOutLeftData(1);
		oMuxLeftData(83) <= mMuxLeftData_R_RREADY;
		oMuxLeftData(82) <= mMuxLeftData_AR_ARVALID;
		oMuxLeftData(81 downto 74) <= mMuxLeftData_AR_ARUSER;
		oMuxLeftData(73 downto 66) <= mMuxLeftData_AR_ARREGION;
		oMuxLeftData(65 downto 62) <= mMuxLeftData_AR_ARQOS;
		oMuxLeftData(61 downto 59) <= mMuxLeftData_AR_ARPROT;
		oMuxLeftData(58 downto 55) <= mMuxLeftData_AR_ARCACHE;
		oMuxLeftData(54 downto 53) <= mMuxLeftData_AR_ARLOCK;
		oMuxLeftData(52 downto 51) <= mMuxLeftData_AR_ARBURST;
		oMuxLeftData(50 downto 48) <= mMuxLeftData_AR_ARSIZE;
		oMuxLeftData(47 downto 40) <= mMuxLeftData_AR_ARLEN;
		oMuxLeftData(39 downto 8) <= mMuxLeftData_AR_ARADDR;
		oMuxLeftData(7 downto 0) <= mMuxLeftData_AR_ARID;
		oMuxRightData(52) <= mMuxRightData_R_RVALID;
		oMuxRightData(51 downto 44) <= mMuxRightData_R_RUSER;
		oMuxRightData(43) <= mMuxRightData_R_RLAST;
		oMuxRightData(42 downto 41) <= mMuxRightData_R_RRESP;
		oMuxRightData(40 downto 33) <= mMuxRightData_R_RDATA(3);
		oMuxRightData(32 downto 25) <= mMuxRightData_R_RDATA(2);
		oMuxRightData(24 downto 17) <= mMuxRightData_R_RDATA(1);
		oMuxRightData(16 downto 9) <= mMuxRightData_R_RDATA(0);
		oMuxRightData(8 downto 1) <= mMuxRightData_R_RID;
		oMuxRightData(0) <= mMuxRightData_AR_ARREADY;
		oRight0 <= mOutRightData(0);
		oRight1 <= mOutRightData(1);
	end process;
	-- [BEGIN USER ARCHITECTURE]
	-- [END USER ARCHITECTURE]
end architecture;
