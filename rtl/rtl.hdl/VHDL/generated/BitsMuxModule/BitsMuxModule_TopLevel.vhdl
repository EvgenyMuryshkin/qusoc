-- PLEASE READ THIS, IT MAY SAVE YOU SOME TIME AND MONEY, THANK YOU!
-- * This file was generated by Quokka FPGA Toolkit.
-- * Generated code is your property, do whatever you want with it
-- * Place custom code between [BEGIN USER ***] and [END USER ***].
-- * CAUTION: All code outside of [USER] scope is subject to regeneration.
-- * Bad things happen sometimes in developer's life,
--   it is recommended to use source control management software (e.g. git, bzr etc) to keep your custom code safe'n'sound.
-- * Internal structure of code is subject to change.
--   You can use some of signals in custom code, but most likely they will not exist in future (e.g. will get shorter or gone completely)
-- * Please send your feedback, comments, improvement ideas etc. to evmuryshkin@gmail.com
-- * Visit https://github.com/EvgenyMuryshkin/QuokkaEvaluation to access latest version of playground
--
-- DISCLAIMER:
--   Code comes AS-IS, it is your responsibility to make sure it is working as expected
--   no responsibility will be taken for any loss or damage caused by use of Quokka toolkit.
--
-- System configuration name is BitsMuxModule_TopLevel, clock frequency is 1Hz, Top-level
library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;
use work.Quokka.all;
entity BitsMuxModule_TopLevel is
	port
	(
		-- [BEGIN USER PORTS]
		-- [END USER PORTS]
		Addr : in unsigned (7 downto 0);
		Value : in unsigned (7 downto 0);
		pixelBits : out unsigned (1 downto 0)
	);
end entity;
-- FSM summary
-- Packages
architecture rtl of BitsMuxModule_TopLevel is
	-- [BEGIN USER SIGNALS]
	-- [END USER SIGNALS]
	constant HiSignal : std_logic := '1';
	constant LoSignal : std_logic := '0';
	constant Zero : std_logic := '0';
	constant One : std_logic := '1';
	-- true is a reserved name, declaration skipped
	-- false is a reserved name, declaration skipped
	constant BitsMuxModule_L14F76T77_Expr : unsigned(1 downto 0) := "10";
	signal Inputs_Addr : unsigned(7 downto 0) := (others => '0');
	signal Inputs_Value : unsigned(7 downto 0) := (others => '0');
	signal pixelAddress : unsigned(1 downto 0) := (others => '0');
	signal BitsMuxModule_L14F41T100_Index : unsigned(1 downto 0) := (others => '0');
	signal BitsMuxModule_L14F42T93_Expr : unsigned(7 downto 0) := "00000000";
	signal BitsMuxModule_L14F42T93_Expr_1 : unsigned(7 downto 0) := "00000000";
	signal BitsMuxModule_L14F76T92_Expr : unsigned(4 downto 0) := "00000";
	signal BitsMuxModule_L14F76T92_Expr_1 : signed(4 downto 0) := "00000";
	signal BitsMuxModule_L14F76T92_Expr_2 : signed(4 downto 0) := "00000";
begin
	process (BitsMuxModule_L14F42T93_Expr_1, BitsMuxModule_L14F76T92_Expr)
	begin
		BitsMuxModule_L14F42T93_Expr <= shift_right(unsigned(BitsMuxModule_L14F42T93_Expr_1), to_integer(BitsMuxModule_L14F76T92_Expr));
	end process;
	process (BitsMuxModule_L14F76T92_Expr_1, BitsMuxModule_L14F76T92_Expr_2)
	begin
		BitsMuxModule_L14F76T92_Expr <= resize(unsigned(signed(resize(BitsMuxModule_L14F76T92_Expr_1, BitsMuxModule_L14F76T92_Expr_1'length + 1)) * signed(resize(BitsMuxModule_L14F76T92_Expr_2, BitsMuxModule_L14F76T92_Expr_2'length + 1))), BitsMuxModule_L14F76T92_Expr'length);
	end process;
	process (Addr, BitsMuxModule_L14F41T100_Index, BitsMuxModule_L14F42T93_Expr, Inputs_Addr, Inputs_Value, pixelAddress, Value)
	begin
		BitsMuxModule_L14F42T93_Expr_1 <= Inputs_Value;
		BitsMuxModule_L14F76T92_Expr_1(4 downto 2) <= (others => '0');
		BitsMuxModule_L14F76T92_Expr_1(1 downto 0) <= signed(BitsMuxModule_L14F76T77_Expr);
		BitsMuxModule_L14F76T92_Expr_2(4 downto 2) <= (others => '0');
		BitsMuxModule_L14F76T92_Expr_2(1 downto 0) <= signed(pixelAddress);
		Inputs_Addr <= Addr;
		Inputs_Value <= Value;
		pixelAddress <= Inputs_Addr(1 downto 0);
		BitsMuxModule_L14F41T100_Index <= BitsMuxModule_L14F42T93_Expr(1 downto 0);
		pixelBits <= BitsMuxModule_L14F41T100_Index;
	end process;
	-- [BEGIN USER ARCHITECTURE]
	-- [END USER ARCHITECTURE]
end architecture;
