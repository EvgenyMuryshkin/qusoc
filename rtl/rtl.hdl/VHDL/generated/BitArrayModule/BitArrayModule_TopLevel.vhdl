-- PLEASE READ THIS, IT MAY SAVE YOU SOME TIME AND MONEY, THANK YOU!
-- * This file was generated by Quokka FPGA Toolkit.
-- * Generated code is your property, do whatever you want with it
-- * Place custom code between [BEGIN USER ***] and [END USER ***].
-- * CAUTION: All code outside of [USER] scope is subject to regeneration.
-- * Bad things happen sometimes in developer's life,
--   it is recommended to use source control management software (e.g. git, bzr etc) to keep your custom code safe'n'sound.
-- * Internal structure of code is subject to change.
--   You can use some of signals in custom code, but most likely they will not exist in future (e.g. will get shorter or gone completely)
-- * Please send your feedback, comments, improvement ideas etc. to evmuryshkin@gmail.com
-- * Visit https://github.com/EvgenyMuryshkin/QuokkaEvaluation to access latest version of playground
--
-- DISCLAIMER:
--   Code comes AS-IS, it is your responsibility to make sure it is working as expected
--   no responsibility will be taken for any loss or damage caused by use of Quokka toolkit.
--
-- System configuration name is BitArrayModule_TopLevel, clock frequency is 1Hz, Top-level
library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;
use work.Quokka.all;
entity BitArrayModule_TopLevel is
	port
	(
		-- [BEGIN USER PORTS]
		-- [END USER PORTS]
		Bit : in unsigned (2 downto 0);
		Value : in unsigned (7 downto 0);
		CtorMux : out unsigned (7 downto 0);
		Direct : out unsigned (7 downto 0);
		FromBits1 : out unsigned (3 downto 0);
		FromBits2 : out unsigned (3 downto 0);
		High : out unsigned (3 downto 0);
		Low : out unsigned (3 downto 0);
		Picks : out unsigned (3 downto 0);
		Reversed : out unsigned (7 downto 0);
		ReversedByCall : out unsigned (7 downto 0);
		ReversedHigh : out unsigned (3 downto 0);
		ReversedLow : out unsigned (3 downto 0);
		ValueBit : out std_logic;
		ValueString : out unsigned (7 downto 0);
		ZeroString : out unsigned (7 downto 0)
	);
end entity;
-- FSM summary
-- Packages
architecture rtl of BitArrayModule_TopLevel is
	-- [BEGIN USER SIGNALS]
	-- [END USER SIGNALS]
	constant HiSignal : std_logic := '1';
	constant LoSignal : std_logic := '0';
	constant Zero : std_logic := '0';
	constant One : std_logic := '1';
	-- true is a reserved name, declaration skipped
	-- false is a reserved name, declaration skipped
	constant BitArrayModule_L29F53T54_Expr : std_logic := '0';
	constant BitArrayModule_L29F98T108_Expr : unsigned(7 downto 0) := "00000000";
	constant BitArrayModule_L29F153T163_Expr : unsigned(7 downto 0) := "01000000";
	constant BitArrayModule_L24F82T86_Expr : std_logic := '1';
	constant BitArrayModule_L24F88T92_Expr : std_logic := '1';
	constant BitArrayModule_L24F94T99_Expr : std_logic := '0';
	constant BitArrayModule_L24F101T105_Expr : std_logic := '1';
	constant BitArrayModule_L25F82T87_Expr : std_logic := '0';
	constant BitArrayModule_L25F89T93_Expr : std_logic := '1';
	constant BitArrayModule_L25F95T99_Expr : std_logic := '1';
	constant BitArrayModule_L25F101T105_Expr : std_logic := '1';
	constant BitArrayModule_L27F84T94_Expr : unsigned(7 downto 0) := "01000000";
	constant BitArrayModule_L26F83T93_Expr : unsigned(7 downto 0) := "00000000";
	signal Inputs_Bit : unsigned(2 downto 0) := (others => '0');
	signal Inputs_Value : unsigned(7 downto 0) := (others => '0');
	signal Bits : unsigned(7 downto 0) := (others => '0');
	signal BitArrayModule_L29F39T164_WhenTrue : unsigned(7 downto 0) := "00000000";
	signal BitArrayModule_L29F39T164_WhenFalse : unsigned(7 downto 0) := "00000000";
	signal BitArrayModule_L29F39T164_Ternary : unsigned(7 downto 0) := "00000000";
	signal BitArrayModule_L24F41T106_Source : unsigned(3 downto 0) := (others => '0');
	signal BitArrayModule_L25F41T106_Source : unsigned(3 downto 0) := (others => '0');
	signal BitArrayModule_L18F36T46_Index : unsigned(3 downto 0) := (others => '0');
	signal BitArrayModule_L19F35T45_Index : unsigned(3 downto 0) := (others => '0');
	signal BitArrayModule_L23F78T87_Index : unsigned(1 downto 0) := (others => '0');
	signal BitArrayModule_L23F89T98_Index : unsigned(1 downto 0) := (others => '0');
	signal BitArrayModule_L23F37T99_Source : unsigned(3 downto 0) := (others => '0');
	signal BitArrayModule_L20F40T50_Index : unsigned(7 downto 0) := (others => '0');
	signal BitArrayModule_L21F44T54_Index : unsigned(3 downto 0) := (others => '0');
	signal BitArrayModule_L22F43T53_Index : unsigned(3 downto 0) := (others => '0');
	signal BitArrayModule_L15F33T49_Index : std_logic := '0';
	signal BitArrayModule_L17F46T61_Expr : unsigned(7 downto 0) := "00000000";
	signal BitArrayModule_L17F46T61_Expr_1 : unsigned(7 downto 0) := "00000000";
	signal BitArrayModule_L29F39T54_Expr : std_logic := '0';
	signal BitArrayModule_L29F39T54_ExprLhs : signed(3 downto 0) := "0000";
	signal BitArrayModule_L29F39T54_ExprRhs : signed(3 downto 0) := "0000";
begin
	BitArrayModule_L29F39T54_Expr <= '1' when (signed(resize(BitArrayModule_L29F39T54_ExprLhs, BitArrayModule_L29F39T54_ExprLhs'length + 1)) = signed(resize(BitArrayModule_L29F39T54_ExprRhs, BitArrayModule_L29F39T54_ExprRhs'length + 1))) else '0';
	process (BitArrayModule_L17F46T61_Expr_1)
	begin
		for i in 7 downto 0 loop
			BitArrayModule_L17F46T61_Expr(i) <= BitArrayModule_L17F46T61_Expr_1(7 - i);
		end loop;
	end process;
	BitArrayModule_L29F39T164_Ternary <= BitArrayModule_L29F39T164_WhenTrue when (BitArrayModule_L29F39T54_Expr = '1') else BitArrayModule_L29F39T164_WhenFalse;
	process (Bit, BitArrayModule_L15F33T49_Index, BitArrayModule_L17F46T61_Expr, BitArrayModule_L18F36T46_Index, BitArrayModule_L19F35T45_Index, BitArrayModule_L20F40T50_Index, BitArrayModule_L21F44T54_Index, BitArrayModule_L22F43T53_Index, BitArrayModule_L23F37T99_Source, BitArrayModule_L23F78T87_Index, BitArrayModule_L23F89T98_Index, BitArrayModule_L24F41T106_Source, BitArrayModule_L25F41T106_Source, BitArrayModule_L29F39T164_Ternary, Bits, Inputs_Bit, Inputs_Value, Value)
	begin
		BitArrayModule_L29F39T54_ExprLhs(3) <= '0';
		BitArrayModule_L29F39T54_ExprLhs(2 downto 0) <= signed(Inputs_Bit);
		BitArrayModule_L29F39T54_ExprRhs(3 downto 1) <= (others => '0');
		BitArrayModule_L29F39T54_ExprRhs(0) <= BitArrayModule_L29F53T54_Expr;
		BitArrayModule_L17F46T61_Expr_1 <= Bits;
		Inputs_Bit <= Bit;
		Inputs_Value <= Value;
		Bits <= Inputs_Value;
		BitArrayModule_L29F39T164_WhenTrue <= BitArrayModule_L29F98T108_Expr;
		BitArrayModule_L29F39T164_WhenFalse <= BitArrayModule_L29F153T163_Expr;
		CtorMux <= BitArrayModule_L29F39T164_Ternary;
		Direct <= Bits;
		BitArrayModule_L24F41T106_Source(3) <= BitArrayModule_L24F82T86_Expr;
		BitArrayModule_L24F41T106_Source(2) <= BitArrayModule_L24F88T92_Expr;
		BitArrayModule_L24F41T106_Source(1) <= BitArrayModule_L24F94T99_Expr;
		BitArrayModule_L24F41T106_Source(0) <= BitArrayModule_L24F101T105_Expr;
		FromBits1 <= BitArrayModule_L24F41T106_Source;
		BitArrayModule_L25F41T106_Source(3) <= BitArrayModule_L25F82T87_Expr;
		BitArrayModule_L25F41T106_Source(2) <= BitArrayModule_L25F89T93_Expr;
		BitArrayModule_L25F41T106_Source(1) <= BitArrayModule_L25F95T99_Expr;
		BitArrayModule_L25F41T106_Source(0) <= BitArrayModule_L25F101T105_Expr;
		FromBits2 <= BitArrayModule_L25F41T106_Source;
		BitArrayModule_L18F36T46_Index <= Bits(7 downto 4);
		High <= BitArrayModule_L18F36T46_Index;
		BitArrayModule_L19F35T45_Index <= Bits(3 downto 0);
		Low <= BitArrayModule_L19F35T45_Index;
		BitArrayModule_L23F78T87_Index <= Bits(6 downto 5);
		BitArrayModule_L23F89T98_Index(0) <= Bits(1);
		BitArrayModule_L23F89T98_Index(1) <= Bits(0);
		BitArrayModule_L23F37T99_Source(3 downto 2) <= BitArrayModule_L23F78T87_Index;
		BitArrayModule_L23F37T99_Source(1 downto 0) <= BitArrayModule_L23F89T98_Index;
		Picks <= BitArrayModule_L23F37T99_Source;
		BitArrayModule_L20F40T50_Index(0) <= Bits(7);
		BitArrayModule_L20F40T50_Index(1) <= Bits(6);
		BitArrayModule_L20F40T50_Index(2) <= Bits(5);
		BitArrayModule_L20F40T50_Index(3) <= Bits(4);
		BitArrayModule_L20F40T50_Index(4) <= Bits(3);
		BitArrayModule_L20F40T50_Index(5) <= Bits(2);
		BitArrayModule_L20F40T50_Index(6) <= Bits(1);
		BitArrayModule_L20F40T50_Index(7) <= Bits(0);
		Reversed <= BitArrayModule_L20F40T50_Index;
		ReversedByCall <= BitArrayModule_L17F46T61_Expr;
		BitArrayModule_L21F44T54_Index(0) <= Bits(7);
		BitArrayModule_L21F44T54_Index(1) <= Bits(6);
		BitArrayModule_L21F44T54_Index(2) <= Bits(5);
		BitArrayModule_L21F44T54_Index(3) <= Bits(4);
		ReversedHigh <= BitArrayModule_L21F44T54_Index;
		BitArrayModule_L22F43T53_Index(0) <= Bits(3);
		BitArrayModule_L22F43T53_Index(1) <= Bits(2);
		BitArrayModule_L22F43T53_Index(2) <= Bits(1);
		BitArrayModule_L22F43T53_Index(3) <= Bits(0);
		ReversedLow <= BitArrayModule_L22F43T53_Index;
		BitArrayModule_L15F33T49_Index <= Bits(TO_INTEGER(Inputs_Bit));
		ValueBit <= BitArrayModule_L15F33T49_Index;
		ValueString <= BitArrayModule_L27F84T94_Expr;
		ZeroString <= BitArrayModule_L26F83T93_Expr;
	end process;
	-- [BEGIN USER ARCHITECTURE]
	-- [END USER ARCHITECTURE]
end architecture;
