-- PLEASE READ THIS, IT MAY SAVE YOU SOME TIME AND MONEY, THANK YOU!
-- * This file was generated by Quokka FPGA Toolkit.
-- * Generated code is your property, do whatever you want with it
-- * Place custom code between [BEGIN USER ***] and [END USER ***].
-- * CAUTION: All code outside of [USER] scope is subject to regeneration.
-- * Bad things happen sometimes in developer's life,
--   it is recommended to use source control management software (e.g. git, bzr etc) to keep your custom code safe'n'sound.
-- * Internal structure of code is subject to change.
--   You can use some of signals in custom code, but most likely they will not exist in future (e.g. will get shorter or gone completely)
-- * Please send your feedback, comments, improvement ideas etc. to evmuryshkin@gmail.com
-- * Visit https://github.com/EvgenyMuryshkin/QuokkaEvaluation to access latest version of playground
-- 
-- DISCLAIMER:
--   Code comes AS-IS, it is your responsibility to make sure it is working as expected
--   no responsibility will be taken for any loss or damage caused by use of Quokka toolkit.
-- 
-- System configuration name is FunctionsPipelineModule_TopLevel, clock frequency is 1Hz, Top-level
library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

use work.Quokka.all;

entity FunctionsPipelineModule_TopLevel is
    port
    (
-- [BEGIN USER PORTS]
-- [END USER PORTS]

Clock : in  std_logic;
Reset : in  std_logic;
inNumerator : in  signed(31 downto 0);
OutResult : out  signed(31 downto 0)
    );
end entity;

-- FSM summary
-- Packages
architecture rtl of FunctionsPipelineModule_TopLevel is
-- [BEGIN USER SIGNALS]
-- [END USER SIGNALS]
constant HiSignal : std_logic := '1';
constant LoSignal : std_logic := '0';
constant Zero : std_logic := '0';
constant One : std_logic := '1';
constant true : std_logic := '1';
constant false : std_logic := '0';
constant Pipeline_FunctionsPipelineModule_L34F29L41T18_FunctionsPipelineModule_L39F60T61_Expr : std_logic := '0';
signal Inputs_inNumerator : signed(31 downto 0) := (others => '0');
signal Pipeline_stage0_NextState_numerator : signed(31 downto 0) := (others => '0');
signal Pipeline_Inputs_inNumerator : signed(31 downto 0) := (others => '0');
signal Pipeline_State_numerator : signed(31 downto 0) := (others => '0');
signal Pipeline_NextState_numerator : signed(31 downto 0) := (others => '0');
signal Pipeline_FunctionsPipelineModule_L34F29L41T18_FunctionsPipelineModule_L35F47T64_Index : std_logic := '0';
signal Pipeline_FunctionsPipelineModule_L34F29L41T18_isNumeratorNegative : std_logic := '0';
signal Pipeline_stage0_State_numerator : signed(31 downto 0)  := "00000000000000000000000000000000";
constant Pipeline_stage0_State_numeratorDefault : signed(31 downto 0)  := "00000000000000000000000000000000";
signal Pipeline_FunctionsPipelineModule_L34F29L41T18_FunctionsPipelineModule_L39F60T77_Expr : signed(33 downto 0)  := "0000000000000000000000000000000000";
signal Pipeline_FunctionsPipelineModule_L34F29L41T18_FunctionsPipelineModule_L39F60T77_Expr_1 : signed(33 downto 0)  := "0000000000000000000000000000000000";
signal Pipeline_FunctionsPipelineModule_L34F29L41T18_FunctionsPipelineModule_L39F60T77_Expr_2 : signed(33 downto 0)  := "0000000000000000000000000000000000";
signal Pipeline_FunctionsPipelineModule_L34F29L41T18_FunctionsPipelineModule_L39F37T94_Lookup : unsigned(31 downto 0)  := "00000000000000000000000000000000";
signal Pipeline_FunctionsPipelineModule_L34F29L41T18_FunctionsPipelineModule_L39F37T94_LookupMultiplexerAddress : std_logic := '0';
signal Pipeline_FunctionsPipelineModule_L34F29L41T18_FunctionsPipelineModule_L39F37T94_Lookup1 : unsigned(31 downto 0)  := "00000000000000000000000000000000";
signal Pipeline_FunctionsPipelineModule_L34F29L41T18_FunctionsPipelineModule_L39F37T94_Lookup2 : unsigned(31 downto 0)  := "00000000000000000000000000000000";
begin
process (Clock, Pipeline_stage0_NextState_numerator, Reset)
begin
if rising_edge(Clock) then
if ( Reset = '1' ) then
Pipeline_stage0_State_numerator <= Pipeline_stage0_State_numeratorDefault;
else
Pipeline_stage0_State_numerator <= Pipeline_stage0_NextState_numerator;
end if;
end if;
end process;

process(Pipeline_FunctionsPipelineModule_L34F29L41T18_FunctionsPipelineModule_L39F60T77_Expr_1, Pipeline_FunctionsPipelineModule_L34F29L41T18_FunctionsPipelineModule_L39F60T77_Expr_2)
begin
    Pipeline_FunctionsPipelineModule_L34F29L41T18_FunctionsPipelineModule_L39F60T77_Expr <= resize(signed(signed(resize(Pipeline_FunctionsPipelineModule_L34F29L41T18_FunctionsPipelineModule_L39F60T77_Expr_1, Pipeline_FunctionsPipelineModule_L34F29L41T18_FunctionsPipelineModule_L39F60T77_Expr_1'length + 1)) - signed(resize(Pipeline_FunctionsPipelineModule_L34F29L41T18_FunctionsPipelineModule_L39F60T77_Expr_2, Pipeline_FunctionsPipelineModule_L34F29L41T18_FunctionsPipelineModule_L39F60T77_Expr_2'length + 1))), Pipeline_FunctionsPipelineModule_L34F29L41T18_FunctionsPipelineModule_L39F60T77_Expr'length);

end process;
process(Pipeline_FunctionsPipelineModule_L34F29L41T18_FunctionsPipelineModule_L39F37T94_Lookup1, Pipeline_FunctionsPipelineModule_L34F29L41T18_FunctionsPipelineModule_L39F37T94_Lookup2, Pipeline_FunctionsPipelineModule_L34F29L41T18_FunctionsPipelineModule_L39F37T94_LookupMultiplexerAddress)
begin
case Pipeline_FunctionsPipelineModule_L34F29L41T18_FunctionsPipelineModule_L39F37T94_LookupMultiplexerAddress is
  when '0' => 
Pipeline_FunctionsPipelineModule_L34F29L41T18_FunctionsPipelineModule_L39F37T94_Lookup <= Pipeline_FunctionsPipelineModule_L34F29L41T18_FunctionsPipelineModule_L39F37T94_Lookup1;
  when '1' => 
Pipeline_FunctionsPipelineModule_L34F29L41T18_FunctionsPipelineModule_L39F37T94_Lookup <= Pipeline_FunctionsPipelineModule_L34F29L41T18_FunctionsPipelineModule_L39F37T94_Lookup2;
  when others => 
Pipeline_FunctionsPipelineModule_L34F29L41T18_FunctionsPipelineModule_L39F37T94_Lookup <= "00000000000000000000000000000000";
end case;

end process;
process(Pipeline_FunctionsPipelineModule_L34F29L41T18_FunctionsPipelineModule_L35F47T64_Index, Pipeline_FunctionsPipelineModule_L34F29L41T18_FunctionsPipelineModule_L39F37T94_Lookup, Pipeline_stage0_State_numerator)
begin
Pipeline_stage0_NextState_numerator <= Pipeline_stage0_State_numerator;
Pipeline_FunctionsPipelineModule_L34F29L41T18_isNumeratorNegative <= Zero;
Pipeline_FunctionsPipelineModule_L34F29L41T18_isNumeratorNegative <= Pipeline_FunctionsPipelineModule_L34F29L41T18_FunctionsPipelineModule_L35F47T64_Index;
Pipeline_stage0_NextState_numerator <= signed(Pipeline_FunctionsPipelineModule_L34F29L41T18_FunctionsPipelineModule_L39F37T94_Lookup);
end process;
process(inNumerator, Inputs_inNumerator, Pipeline_FunctionsPipelineModule_L34F29L41T18_FunctionsPipelineModule_L39F60T77_Expr, Pipeline_FunctionsPipelineModule_L34F29L41T18_isNumeratorNegative, Pipeline_Inputs_inNumerator, Pipeline_stage0_NextState_numerator, Pipeline_stage0_State_numerator, Pipeline_State_numerator)
begin
Pipeline_FunctionsPipelineModule_L34F29L41T18_FunctionsPipelineModule_L39F60T77_Expr_1 <= (0 => Pipeline_FunctionsPipelineModule_L34F29L41T18_FunctionsPipelineModule_L39F60T61_Expr, others => '0');
Pipeline_FunctionsPipelineModule_L34F29L41T18_FunctionsPipelineModule_L39F60T77_Expr_2 <= signed(resize(signed(Pipeline_Inputs_inNumerator), Pipeline_FunctionsPipelineModule_L34F29L41T18_FunctionsPipelineModule_L39F60T77_Expr_2'length));
Inputs_inNumerator <= inNumerator;
Pipeline_State_numerator <= Pipeline_stage0_State_numerator;
Pipeline_NextState_numerator <= Pipeline_stage0_NextState_numerator;
Pipeline_FunctionsPipelineModule_L34F29L41T18_FunctionsPipelineModule_L35F47T64_Index <= Pipeline_Inputs_inNumerator(31);
OutResult <= Pipeline_State_numerator;
Pipeline_Inputs_inNumerator <= Inputs_inNumerator;
Pipeline_FunctionsPipelineModule_L34F29L41T18_FunctionsPipelineModule_L39F37T94_Lookup1 <= unsigned(Pipeline_Inputs_inNumerator);
Pipeline_FunctionsPipelineModule_L34F29L41T18_FunctionsPipelineModule_L39F37T94_Lookup2 <= unsigned(Pipeline_FunctionsPipelineModule_L34F29L41T18_FunctionsPipelineModule_L39F60T77_Expr(31 downto 0));
Pipeline_FunctionsPipelineModule_L34F29L41T18_FunctionsPipelineModule_L39F37T94_LookupMultiplexerAddress <= Pipeline_FunctionsPipelineModule_L34F29L41T18_isNumeratorNegative;
end process;
-- [BEGIN USER ARCHITECTURE]
-- [END USER ARCHITECTURE]
end architecture;
