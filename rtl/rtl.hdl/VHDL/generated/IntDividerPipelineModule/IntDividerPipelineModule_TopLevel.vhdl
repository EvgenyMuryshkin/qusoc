-- PLEASE READ THIS, IT MAY SAVE YOU SOME TIME AND MONEY, THANK YOU!
-- * This file was generated by Quokka FPGA Toolkit.
-- * Generated code is your property, do whatever you want with it
-- * Place custom code between [BEGIN USER ***] and [END USER ***].
-- * CAUTION: All code outside of [USER] scope is subject to regeneration.
-- * Bad things happen sometimes in developer's life,
--   it is recommended to use source control management software (e.g. git, bzr etc) to keep your custom code safe'n'sound.
-- * Internal structure of code is subject to change.
--   You can use some of signals in custom code, but most likely they will not exist in future (e.g. will get shorter or gone completely)
-- * Please send your feedback, comments, improvement ideas etc. to evmuryshkin@gmail.com
-- * Visit https://github.com/EvgenyMuryshkin/QuokkaEvaluation to access latest version of playground
-- 
-- DISCLAIMER:
--   Code comes AS-IS, it is your responsibility to make sure it is working as expected
--   no responsibility will be taken for any loss or damage caused by use of Quokka toolkit.
-- 
-- System configuration name is IntDividerPipelineModule_TopLevel, clock frequency is 1Hz, Top-level
library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

use work.Quokka.all;

entity IntDividerPipelineModule_TopLevel is
    port
    (
-- [BEGIN USER PORTS]
-- [END USER PORTS]

Clock : in  std_logic;
Reset : in  std_logic;
inReady : in  std_logic;
inNumerator : in  signed(31 downto 0);
inDenominator : in  signed(31 downto 0);
OutReady : out  std_logic;
OutRes : out  signed(31 downto 0);
OutRem : out  signed(31 downto 0)
    );
end entity;

-- FSM summary
-- Packages
architecture rtl of IntDividerPipelineModule_TopLevel is
-- [BEGIN USER SIGNALS]
-- [END USER SIGNALS]
constant HiSignal : std_logic := '1';
constant LoSignal : std_logic := '0';
constant Zero : std_logic := '0';
constant One : std_logic := '1';
constant true : std_logic := '1';
constant false : std_logic := '0';
constant DivPipeline_IntDividerPipelineModule_L47F13L61T14_IntDividerPipelineModule_L48F52T53_Expr : std_logic := '1';
constant DivPipeline_IntDividerPipelineModule_L47F13L61T14_IntDividerPipelineModule_L51F43T44_Expr : std_logic := '1';
constant DivPipeline_IntDividerPipelineModule_L47F13L61T14_IntDividerPipelineModule_L51F56T57_Expr : std_logic := '1';
constant DivPipeline_IntDividerPipelineModule_L47F13L61T14_IntDividerPipelineModule_L51F60T61_Expr : std_logic := '0';
constant IntDividerPipelineModule_L75F26T27_Expr : std_logic := '0';
constant IntDividerPipelineModule_L77F61T63_Expr : unsigned(5 downto 0)  := "100000";
signal Inputs_inReady : std_logic := '0';
signal Inputs_inNumerator : signed(31 downto 0) := (others => '0');
signal Inputs_inDenominator : signed(31 downto 0) := (others => '0');
signal DivPipeline_stage0_NextState_ready : std_logic := '0';
signal DivPipeline_stage0_NextState_numerator : signed(63 downto 0) := (others => '0');
signal DivPipeline_stage0_NextState_denominator : signed(63 downto 0) := (others => '0');
signal DivPipeline_stage0_NextState_result : signed(31 downto 0) := (others => '0');
signal DivPipeline_Inputs_ready : std_logic := '0';
signal DivPipeline_Inputs_numerator : signed(63 downto 0) := (others => '0');
signal DivPipeline_Inputs_denominator : signed(63 downto 0) := (others => '0');
signal DivPipeline_Inputs_result : signed(31 downto 0) := (others => '0');
signal DivPipeline_State_ready : std_logic := '0';
signal DivPipeline_State_numerator : signed(63 downto 0) := (others => '0');
signal DivPipeline_State_denominator : signed(63 downto 0) := (others => '0');
signal DivPipeline_State_result : signed(31 downto 0) := (others => '0');
signal DivPipeline_NextState_ready : std_logic := '0';
signal DivPipeline_NextState_numerator : signed(63 downto 0) := (others => '0');
signal DivPipeline_NextState_denominator : signed(63 downto 0) := (others => '0');
signal DivPipeline_NextState_result : signed(31 downto 0) := (others => '0');
signal DivPipeline_IntDividerPipelineModule_L47F13L61T14_denominator : signed(63 downto 0)  := "0000000000000000000000000000000000000000000000000000000000000000";
signal DivPipeline_IntDividerPipelineModule_L47F13L61T14_flag : std_logic := '0';
signal DivPipeline_IntDividerPipelineModule_L47F13L61T14_result : signed(31 downto 0)  := "00000000000000000000000000000000";
signal DivPipeline_IntDividerPipelineModule_L47F13L61T14_numerator : signed(63 downto 0)  := "0000000000000000000000000000000000000000000000000000000000000000";
signal IntDividerPipelineModule_L63F33T62_Cast : std_logic := '0';
signal IntDividerPipelineModule_L65F30T62_Cast : signed(31 downto 0) := (others => '0');
signal IntDividerPipelineModule_L77F31T57_Cast : signed(63 downto 0) := (others => '0');
signal DivPipeline_stage0_State_ready : std_logic := '0';
constant DivPipeline_stage0_State_readyDefault : std_logic := '0';
signal DivPipeline_stage0_State_numerator : signed(63 downto 0)  := "0000000000000000000000000000000000000000000000000000000000000000";
constant DivPipeline_stage0_State_numeratorDefault : signed(63 downto 0)  := "0000000000000000000000000000000000000000000000000000000000000000";
signal DivPipeline_stage0_State_denominator : signed(63 downto 0)  := "0000000000000000000000000000000000000000000000000000000000000000";
constant DivPipeline_stage0_State_denominatorDefault : signed(63 downto 0)  := "0000000000000000000000000000000000000000000000000000000000000000";
signal DivPipeline_stage0_State_result : signed(31 downto 0)  := "00000000000000000000000000000000";
constant DivPipeline_stage0_State_resultDefault : signed(31 downto 0)  := "00000000000000000000000000000000";
signal DivPipeline_IntDividerPipelineModule_L47F13L61T14_IntDividerPipelineModule_L48F35T53_Expr : unsigned(63 downto 0)  := "0000000000000000000000000000000000000000000000000000000000000000";
signal DivPipeline_IntDividerPipelineModule_L47F13L61T14_IntDividerPipelineModule_L48F35T53_Expr_1 : unsigned(63 downto 0)  := "0000000000000000000000000000000000000000000000000000000000000000";
signal DivPipeline_IntDividerPipelineModule_L47F13L61T14_IntDividerPipelineModule_L51F30T62_Expr : unsigned(32 downto 0)  := "000000000000000000000000000000000";
signal DivPipeline_IntDividerPipelineModule_L47F13L61T14_IntDividerPipelineModule_L51F30T62_Expr_1 : unsigned(32 downto 0)  := "000000000000000000000000000000000";
signal DivPipeline_IntDividerPipelineModule_L47F13L61T14_IntDividerPipelineModule_L51F30T62_Expr_2 : unsigned(32 downto 0)  := "000000000000000000000000000000000";
signal DivPipeline_IntDividerPipelineModule_L47F13L61T14_IntDividerPipelineModule_L51F31T44_Expr : unsigned(32 downto 0)  := "000000000000000000000000000000000";
signal DivPipeline_IntDividerPipelineModule_L47F13L61T14_IntDividerPipelineModule_L51F31T44_Expr_1 : unsigned(32 downto 0)  := "000000000000000000000000000000000";
signal IntDividerPipelineModule_L77F31T63_Expr : unsigned(95 downto 0)  := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
signal IntDividerPipelineModule_L77F31T63_Expr_1 : unsigned(95 downto 0)  := "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
signal DivPipeline_IntDividerPipelineModule_L47F13L61T14_IntDividerPipelineModule_L52F40T65_Expr : signed(64 downto 0)  := "00000000000000000000000000000000000000000000000000000000000000000";
signal DivPipeline_IntDividerPipelineModule_L47F13L61T14_IntDividerPipelineModule_L52F40T65_Expr_1 : signed(64 downto 0)  := "00000000000000000000000000000000000000000000000000000000000000000";
signal DivPipeline_IntDividerPipelineModule_L47F13L61T14_IntDividerPipelineModule_L52F40T65_Expr_2 : signed(64 downto 0)  := "00000000000000000000000000000000000000000000000000000000000000000";
signal DivPipeline_IntDividerPipelineModule_L47F13L61T14_IntDividerPipelineModule_L49F28T54_Expr : std_logic := '0';
signal DivPipeline_IntDividerPipelineModule_L47F13L61T14_IntDividerPipelineModule_L49F28T54_ExprLhs : signed(63 downto 0)  := "0000000000000000000000000000000000000000000000000000000000000000";
signal DivPipeline_IntDividerPipelineModule_L47F13L61T14_IntDividerPipelineModule_L49F28T54_ExprRhs : signed(63 downto 0)  := "0000000000000000000000000000000000000000000000000000000000000000";
signal DivPipeline_IntDividerPipelineModule_L47F13L61T14_IntDividerPipelineModule_L51F49T61_Lookup : unsigned(31 downto 0)  := "00000000000000000000000000000000";
signal DivPipeline_IntDividerPipelineModule_L47F13L61T14_IntDividerPipelineModule_L52F33T79_Lookup : unsigned(63 downto 0)  := "0000000000000000000000000000000000000000000000000000000000000000";
signal DivPipeline_IntDividerPipelineModule_L47F13L61T14_IntDividerPipelineModule_L51F49T61_LookupMultiplexerAddress : std_logic := '0';
signal DivPipeline_IntDividerPipelineModule_L47F13L61T14_IntDividerPipelineModule_L51F49T61_Lookup1 : unsigned(31 downto 0)  := "00000000000000000000000000000000";
signal DivPipeline_IntDividerPipelineModule_L47F13L61T14_IntDividerPipelineModule_L51F49T61_Lookup2 : unsigned(31 downto 0)  := "00000000000000000000000000000000";
signal DivPipeline_IntDividerPipelineModule_L47F13L61T14_IntDividerPipelineModule_L52F33T79_LookupMultiplexerAddress : std_logic := '0';
signal DivPipeline_IntDividerPipelineModule_L47F13L61T14_IntDividerPipelineModule_L52F33T79_Lookup1 : unsigned(63 downto 0)  := "0000000000000000000000000000000000000000000000000000000000000000";
signal DivPipeline_IntDividerPipelineModule_L47F13L61T14_IntDividerPipelineModule_L52F33T79_Lookup2 : unsigned(63 downto 0)  := "0000000000000000000000000000000000000000000000000000000000000000";
begin
process (Clock, DivPipeline_stage0_NextState_denominator, DivPipeline_stage0_NextState_numerator, DivPipeline_stage0_NextState_ready, DivPipeline_stage0_NextState_result, Reset)
begin
if rising_edge(Clock) then
if ( Reset = '1' ) then
DivPipeline_stage0_State_ready <= DivPipeline_stage0_State_readyDefault;
DivPipeline_stage0_State_numerator <= DivPipeline_stage0_State_numeratorDefault;
DivPipeline_stage0_State_denominator <= DivPipeline_stage0_State_denominatorDefault;
DivPipeline_stage0_State_result <= DivPipeline_stage0_State_resultDefault;
else
DivPipeline_stage0_State_ready <= DivPipeline_stage0_NextState_ready;
DivPipeline_stage0_State_numerator <= DivPipeline_stage0_NextState_numerator;
DivPipeline_stage0_State_denominator <= DivPipeline_stage0_NextState_denominator;
DivPipeline_stage0_State_result <= DivPipeline_stage0_NextState_result;
end if;
end if;
end process;
    DivPipeline_IntDividerPipelineModule_L47F13L61T14_IntDividerPipelineModule_L49F28T54_Expr <= '1' when (signed(resize(DivPipeline_IntDividerPipelineModule_L47F13L61T14_IntDividerPipelineModule_L49F28T54_ExprLhs, DivPipeline_IntDividerPipelineModule_L47F13L61T14_IntDividerPipelineModule_L49F28T54_ExprLhs'length + 1)) >= signed(resize(DivPipeline_IntDividerPipelineModule_L47F13L61T14_IntDividerPipelineModule_L49F28T54_ExprRhs, DivPipeline_IntDividerPipelineModule_L47F13L61T14_IntDividerPipelineModule_L49F28T54_ExprRhs'length + 1))) else '0';
process(DivPipeline_IntDividerPipelineModule_L47F13L61T14_IntDividerPipelineModule_L48F35T53_Expr_1)
alias output is DivPipeline_IntDividerPipelineModule_L47F13L61T14_IntDividerPipelineModule_L48F35T53_Expr;
alias source0 is DivPipeline_IntDividerPipelineModule_L47F13L61T14_IntDividerPipelineModule_L48F35T53_Expr_1;
begin
-- Output: DivPipeline_IntDividerPipelineModule_L47F13L61T14_IntDividerPipelineModule_L48F35T53_Expr, Width: 64, ShiftBy: 1, Sources: 1
output(0) <= source0(1);
output(1) <= source0(2);
output(2) <= source0(3);
output(3) <= source0(4);
output(4) <= source0(5);
output(5) <= source0(6);
output(6) <= source0(7);
output(7) <= source0(8);
output(8) <= source0(9);
output(9) <= source0(10);
output(10) <= source0(11);
output(11) <= source0(12);
output(12) <= source0(13);
output(13) <= source0(14);
output(14) <= source0(15);
output(15) <= source0(16);
output(16) <= source0(17);
output(17) <= source0(18);
output(18) <= source0(19);
output(19) <= source0(20);
output(20) <= source0(21);
output(21) <= source0(22);
output(22) <= source0(23);
output(23) <= source0(24);
output(24) <= source0(25);
output(25) <= source0(26);
output(26) <= source0(27);
output(27) <= source0(28);
output(28) <= source0(29);
output(29) <= source0(30);
output(30) <= source0(31);
output(31) <= source0(32);
output(32) <= source0(33);
output(33) <= source0(34);
output(34) <= source0(35);
output(35) <= source0(36);
output(36) <= source0(37);
output(37) <= source0(38);
output(38) <= source0(39);
output(39) <= source0(40);
output(40) <= source0(41);
output(41) <= source0(42);
output(42) <= source0(43);
output(43) <= source0(44);
output(44) <= source0(45);
output(45) <= source0(46);
output(46) <= source0(47);
output(47) <= source0(48);
output(48) <= source0(49);
output(49) <= source0(50);
output(50) <= source0(51);
output(51) <= source0(52);
output(52) <= source0(53);
output(53) <= source0(54);
output(54) <= source0(55);
output(55) <= source0(56);
output(56) <= source0(57);
output(57) <= source0(58);
output(58) <= source0(59);
output(59) <= source0(60);
output(60) <= source0(61);
output(61) <= source0(62);
output(62) <= source0(63);
output(63) <= source0(63);
end process;

process(DivPipeline_IntDividerPipelineModule_L47F13L61T14_IntDividerPipelineModule_L51F30T62_Expr_1, DivPipeline_IntDividerPipelineModule_L47F13L61T14_IntDividerPipelineModule_L51F30T62_Expr_2)
begin

    for i in 32 downto 0 loop
        DivPipeline_IntDividerPipelineModule_L47F13L61T14_IntDividerPipelineModule_L51F30T62_Expr(i) <= DivPipeline_IntDividerPipelineModule_L47F13L61T14_IntDividerPipelineModule_L51F30T62_Expr_1(i)  OR DivPipeline_IntDividerPipelineModule_L47F13L61T14_IntDividerPipelineModule_L51F30T62_Expr_2(i)    ;
    end loop;

    end process;
process(DivPipeline_IntDividerPipelineModule_L47F13L61T14_IntDividerPipelineModule_L51F31T44_Expr_1)
alias output is DivPipeline_IntDividerPipelineModule_L47F13L61T14_IntDividerPipelineModule_L51F31T44_Expr;
alias source0 is DivPipeline_IntDividerPipelineModule_L47F13L61T14_IntDividerPipelineModule_L51F31T44_Expr_1;
begin
output(0) <= '0';
output(1) <= source0(0);
output(2) <= source0(1);
output(3) <= source0(2);
output(4) <= source0(3);
output(5) <= source0(4);
output(6) <= source0(5);
output(7) <= source0(6);
output(8) <= source0(7);
output(9) <= source0(8);
output(10) <= source0(9);
output(11) <= source0(10);
output(12) <= source0(11);
output(13) <= source0(12);
output(14) <= source0(13);
output(15) <= source0(14);
output(16) <= source0(15);
output(17) <= source0(16);
output(18) <= source0(17);
output(19) <= source0(18);
output(20) <= source0(19);
output(21) <= source0(20);
output(22) <= source0(21);
output(23) <= source0(22);
output(24) <= source0(23);
output(25) <= source0(24);
output(26) <= source0(25);
output(27) <= source0(26);
output(28) <= source0(27);
output(29) <= source0(28);
output(30) <= source0(29);
output(31) <= source0(30);
output(32) <= source0(31);
end process;
process(IntDividerPipelineModule_L77F31T63_Expr_1)
alias output is IntDividerPipelineModule_L77F31T63_Expr;
alias source0 is IntDividerPipelineModule_L77F31T63_Expr_1;
begin
output(0) <= '0';
output(1) <= '0';
output(2) <= '0';
output(3) <= '0';
output(4) <= '0';
output(5) <= '0';
output(6) <= '0';
output(7) <= '0';
output(8) <= '0';
output(9) <= '0';
output(10) <= '0';
output(11) <= '0';
output(12) <= '0';
output(13) <= '0';
output(14) <= '0';
output(15) <= '0';
output(16) <= '0';
output(17) <= '0';
output(18) <= '0';
output(19) <= '0';
output(20) <= '0';
output(21) <= '0';
output(22) <= '0';
output(23) <= '0';
output(24) <= '0';
output(25) <= '0';
output(26) <= '0';
output(27) <= '0';
output(28) <= '0';
output(29) <= '0';
output(30) <= '0';
output(31) <= '0';
output(32) <= source0(0);
output(33) <= source0(1);
output(34) <= source0(2);
output(35) <= source0(3);
output(36) <= source0(4);
output(37) <= source0(5);
output(38) <= source0(6);
output(39) <= source0(7);
output(40) <= source0(8);
output(41) <= source0(9);
output(42) <= source0(10);
output(43) <= source0(11);
output(44) <= source0(12);
output(45) <= source0(13);
output(46) <= source0(14);
output(47) <= source0(15);
output(48) <= source0(16);
output(49) <= source0(17);
output(50) <= source0(18);
output(51) <= source0(19);
output(52) <= source0(20);
output(53) <= source0(21);
output(54) <= source0(22);
output(55) <= source0(23);
output(56) <= source0(24);
output(57) <= source0(25);
output(58) <= source0(26);
output(59) <= source0(27);
output(60) <= source0(28);
output(61) <= source0(29);
output(62) <= source0(30);
output(63) <= source0(31);
output(64) <= source0(32);
output(65) <= source0(33);
output(66) <= source0(34);
output(67) <= source0(35);
output(68) <= source0(36);
output(69) <= source0(37);
output(70) <= source0(38);
output(71) <= source0(39);
output(72) <= source0(40);
output(73) <= source0(41);
output(74) <= source0(42);
output(75) <= source0(43);
output(76) <= source0(44);
output(77) <= source0(45);
output(78) <= source0(46);
output(79) <= source0(47);
output(80) <= source0(48);
output(81) <= source0(49);
output(82) <= source0(50);
output(83) <= source0(51);
output(84) <= source0(52);
output(85) <= source0(53);
output(86) <= source0(54);
output(87) <= source0(55);
output(88) <= source0(56);
output(89) <= source0(57);
output(90) <= source0(58);
output(91) <= source0(59);
output(92) <= source0(60);
output(93) <= source0(61);
output(94) <= source0(62);
output(95) <= source0(63);
end process;

process(DivPipeline_IntDividerPipelineModule_L47F13L61T14_IntDividerPipelineModule_L52F40T65_Expr_1, DivPipeline_IntDividerPipelineModule_L47F13L61T14_IntDividerPipelineModule_L52F40T65_Expr_2)
begin
    DivPipeline_IntDividerPipelineModule_L47F13L61T14_IntDividerPipelineModule_L52F40T65_Expr <= resize(signed(signed(resize(DivPipeline_IntDividerPipelineModule_L47F13L61T14_IntDividerPipelineModule_L52F40T65_Expr_1, DivPipeline_IntDividerPipelineModule_L47F13L61T14_IntDividerPipelineModule_L52F40T65_Expr_1'length + 1)) - signed(resize(DivPipeline_IntDividerPipelineModule_L47F13L61T14_IntDividerPipelineModule_L52F40T65_Expr_2, DivPipeline_IntDividerPipelineModule_L47F13L61T14_IntDividerPipelineModule_L52F40T65_Expr_2'length + 1))), DivPipeline_IntDividerPipelineModule_L47F13L61T14_IntDividerPipelineModule_L52F40T65_Expr'length);

end process;
process(DivPipeline_IntDividerPipelineModule_L47F13L61T14_IntDividerPipelineModule_L51F49T61_Lookup1, DivPipeline_IntDividerPipelineModule_L47F13L61T14_IntDividerPipelineModule_L51F49T61_Lookup2, DivPipeline_IntDividerPipelineModule_L47F13L61T14_IntDividerPipelineModule_L51F49T61_LookupMultiplexerAddress)
begin
case DivPipeline_IntDividerPipelineModule_L47F13L61T14_IntDividerPipelineModule_L51F49T61_LookupMultiplexerAddress is
  when '0' => 
DivPipeline_IntDividerPipelineModule_L47F13L61T14_IntDividerPipelineModule_L51F49T61_Lookup <= DivPipeline_IntDividerPipelineModule_L47F13L61T14_IntDividerPipelineModule_L51F49T61_Lookup1;
  when '1' => 
DivPipeline_IntDividerPipelineModule_L47F13L61T14_IntDividerPipelineModule_L51F49T61_Lookup <= DivPipeline_IntDividerPipelineModule_L47F13L61T14_IntDividerPipelineModule_L51F49T61_Lookup2;
  when others => 
DivPipeline_IntDividerPipelineModule_L47F13L61T14_IntDividerPipelineModule_L51F49T61_Lookup <= "00000000000000000000000000000000";
end case;

end process;
process(DivPipeline_IntDividerPipelineModule_L47F13L61T14_IntDividerPipelineModule_L52F33T79_Lookup1, DivPipeline_IntDividerPipelineModule_L47F13L61T14_IntDividerPipelineModule_L52F33T79_Lookup2, DivPipeline_IntDividerPipelineModule_L47F13L61T14_IntDividerPipelineModule_L52F33T79_LookupMultiplexerAddress)
begin
case DivPipeline_IntDividerPipelineModule_L47F13L61T14_IntDividerPipelineModule_L52F33T79_LookupMultiplexerAddress is
  when '0' => 
DivPipeline_IntDividerPipelineModule_L47F13L61T14_IntDividerPipelineModule_L52F33T79_Lookup <= DivPipeline_IntDividerPipelineModule_L47F13L61T14_IntDividerPipelineModule_L52F33T79_Lookup1;
  when '1' => 
DivPipeline_IntDividerPipelineModule_L47F13L61T14_IntDividerPipelineModule_L52F33T79_Lookup <= DivPipeline_IntDividerPipelineModule_L47F13L61T14_IntDividerPipelineModule_L52F33T79_Lookup2;
  when others => 
DivPipeline_IntDividerPipelineModule_L47F13L61T14_IntDividerPipelineModule_L52F33T79_Lookup <= "0000000000000000000000000000000000000000000000000000000000000000";
end case;

end process;
process(DivPipeline_Inputs_ready, DivPipeline_IntDividerPipelineModule_L47F13L61T14_denominator, DivPipeline_IntDividerPipelineModule_L47F13L61T14_IntDividerPipelineModule_L48F35T53_Expr, DivPipeline_IntDividerPipelineModule_L47F13L61T14_IntDividerPipelineModule_L49F28T54_Expr, DivPipeline_IntDividerPipelineModule_L47F13L61T14_IntDividerPipelineModule_L51F30T62_Expr, DivPipeline_IntDividerPipelineModule_L47F13L61T14_IntDividerPipelineModule_L52F33T79_Lookup, DivPipeline_IntDividerPipelineModule_L47F13L61T14_numerator, DivPipeline_IntDividerPipelineModule_L47F13L61T14_result, DivPipeline_stage0_State_denominator, DivPipeline_stage0_State_numerator, DivPipeline_stage0_State_ready, DivPipeline_stage0_State_result)
begin
DivPipeline_stage0_NextState_ready <= DivPipeline_stage0_State_ready;
DivPipeline_stage0_NextState_numerator <= DivPipeline_stage0_State_numerator;
DivPipeline_stage0_NextState_denominator <= DivPipeline_stage0_State_denominator;
DivPipeline_stage0_NextState_result <= DivPipeline_stage0_State_result;
DivPipeline_stage0_NextState_ready <= DivPipeline_Inputs_ready;
DivPipeline_stage0_NextState_numerator <= DivPipeline_IntDividerPipelineModule_L47F13L61T14_numerator;
DivPipeline_stage0_NextState_denominator <= DivPipeline_IntDividerPipelineModule_L47F13L61T14_denominator;
DivPipeline_stage0_NextState_result <= DivPipeline_IntDividerPipelineModule_L47F13L61T14_result;
DivPipeline_IntDividerPipelineModule_L47F13L61T14_denominator <= signed(DivPipeline_IntDividerPipelineModule_L47F13L61T14_IntDividerPipelineModule_L48F35T53_Expr);
DivPipeline_IntDividerPipelineModule_L47F13L61T14_flag <= DivPipeline_IntDividerPipelineModule_L47F13L61T14_IntDividerPipelineModule_L49F28T54_Expr;
DivPipeline_IntDividerPipelineModule_L47F13L61T14_result <= signed(DivPipeline_IntDividerPipelineModule_L47F13L61T14_IntDividerPipelineModule_L51F30T62_Expr(31 downto 0));
DivPipeline_IntDividerPipelineModule_L47F13L61T14_numerator <= signed(DivPipeline_IntDividerPipelineModule_L47F13L61T14_IntDividerPipelineModule_L52F33T79_Lookup);
end process;
process(DivPipeline_Inputs_denominator, DivPipeline_Inputs_numerator, DivPipeline_Inputs_result, DivPipeline_IntDividerPipelineModule_L47F13L61T14_denominator, DivPipeline_IntDividerPipelineModule_L47F13L61T14_flag, DivPipeline_IntDividerPipelineModule_L47F13L61T14_IntDividerPipelineModule_L51F31T44_Expr, DivPipeline_IntDividerPipelineModule_L47F13L61T14_IntDividerPipelineModule_L51F49T61_Lookup, DivPipeline_IntDividerPipelineModule_L47F13L61T14_IntDividerPipelineModule_L52F40T65_Expr, DivPipeline_stage0_NextState_denominator, DivPipeline_stage0_NextState_numerator, DivPipeline_stage0_NextState_ready, DivPipeline_stage0_NextState_result, DivPipeline_stage0_State_denominator, DivPipeline_stage0_State_numerator, DivPipeline_stage0_State_ready, DivPipeline_stage0_State_result, DivPipeline_State_numerator, DivPipeline_State_ready, DivPipeline_State_result, inDenominator, inNumerator, Inputs_inDenominator, Inputs_inNumerator, Inputs_inReady, inReady, IntDividerPipelineModule_L63F33T62_Cast, IntDividerPipelineModule_L65F30T62_Cast, IntDividerPipelineModule_L77F31T57_Cast, IntDividerPipelineModule_L77F31T63_Expr)
begin
DivPipeline_IntDividerPipelineModule_L47F13L61T14_IntDividerPipelineModule_L49F28T54_ExprLhs <= DivPipeline_Inputs_numerator;
DivPipeline_IntDividerPipelineModule_L47F13L61T14_IntDividerPipelineModule_L49F28T54_ExprRhs <= DivPipeline_IntDividerPipelineModule_L47F13L61T14_denominator;
DivPipeline_IntDividerPipelineModule_L47F13L61T14_IntDividerPipelineModule_L48F35T53_Expr_1 <= unsigned(DivPipeline_Inputs_denominator);
DivPipeline_IntDividerPipelineModule_L47F13L61T14_IntDividerPipelineModule_L51F30T62_Expr_1 <= DivPipeline_IntDividerPipelineModule_L47F13L61T14_IntDividerPipelineModule_L51F31T44_Expr;
DivPipeline_IntDividerPipelineModule_L47F13L61T14_IntDividerPipelineModule_L51F30T62_Expr_2 <= unsigned(resize(unsigned(DivPipeline_IntDividerPipelineModule_L47F13L61T14_IntDividerPipelineModule_L51F49T61_Lookup), DivPipeline_IntDividerPipelineModule_L47F13L61T14_IntDividerPipelineModule_L51F30T62_Expr_2'length));
DivPipeline_IntDividerPipelineModule_L47F13L61T14_IntDividerPipelineModule_L51F31T44_Expr_1 <= unsigned(resize(signed(DivPipeline_Inputs_result), DivPipeline_IntDividerPipelineModule_L47F13L61T14_IntDividerPipelineModule_L51F31T44_Expr_1'length));
IntDividerPipelineModule_L77F31T63_Expr_1 <= unsigned(resize(signed(IntDividerPipelineModule_L77F31T57_Cast), IntDividerPipelineModule_L77F31T63_Expr_1'length));
DivPipeline_IntDividerPipelineModule_L47F13L61T14_IntDividerPipelineModule_L52F40T65_Expr_1 <= signed(resize(signed(DivPipeline_Inputs_numerator), DivPipeline_IntDividerPipelineModule_L47F13L61T14_IntDividerPipelineModule_L52F40T65_Expr_1'length));
DivPipeline_IntDividerPipelineModule_L47F13L61T14_IntDividerPipelineModule_L52F40T65_Expr_2 <= signed(resize(signed(DivPipeline_IntDividerPipelineModule_L47F13L61T14_denominator), DivPipeline_IntDividerPipelineModule_L47F13L61T14_IntDividerPipelineModule_L52F40T65_Expr_2'length));
Inputs_inReady <= inReady;
Inputs_inNumerator <= inNumerator;
Inputs_inDenominator <= inDenominator;
DivPipeline_State_ready <= DivPipeline_stage0_State_ready;
DivPipeline_State_numerator <= DivPipeline_stage0_State_numerator;
DivPipeline_State_denominator <= DivPipeline_stage0_State_denominator;
DivPipeline_State_result <= DivPipeline_stage0_State_result;
DivPipeline_NextState_ready <= DivPipeline_stage0_NextState_ready;
DivPipeline_NextState_numerator <= DivPipeline_stage0_NextState_numerator;
DivPipeline_NextState_denominator <= DivPipeline_stage0_NextState_denominator;
DivPipeline_NextState_result <= DivPipeline_stage0_NextState_result;
IntDividerPipelineModule_L63F33T62_Cast <= DivPipeline_State_ready;
OutReady <= IntDividerPipelineModule_L63F33T62_Cast;
OutRes <= DivPipeline_State_result;
IntDividerPipelineModule_L65F30T62_Cast <= DivPipeline_State_numerator(31 downto 0);
OutRem <= IntDividerPipelineModule_L65F30T62_Cast;
IntDividerPipelineModule_L77F31T57_Cast <= signed(resize(signed(Inputs_inDenominator), IntDividerPipelineModule_L77F31T57_Cast'length));
DivPipeline_Inputs_ready <= Inputs_inReady;
DivPipeline_Inputs_numerator <= signed(resize(signed(Inputs_inNumerator), DivPipeline_Inputs_numerator'length));
DivPipeline_Inputs_denominator <= signed(IntDividerPipelineModule_L77F31T63_Expr(63 downto 0));
DivPipeline_Inputs_result <= (0 => IntDividerPipelineModule_L75F26T27_Expr, others => '0');
DivPipeline_IntDividerPipelineModule_L47F13L61T14_IntDividerPipelineModule_L51F49T61_Lookup1 <= (0 => DivPipeline_IntDividerPipelineModule_L47F13L61T14_IntDividerPipelineModule_L51F60T61_Expr, others => '0');
DivPipeline_IntDividerPipelineModule_L47F13L61T14_IntDividerPipelineModule_L51F49T61_Lookup2 <= (0 => DivPipeline_IntDividerPipelineModule_L47F13L61T14_IntDividerPipelineModule_L51F56T57_Expr, others => '0');
DivPipeline_IntDividerPipelineModule_L47F13L61T14_IntDividerPipelineModule_L51F49T61_LookupMultiplexerAddress <= DivPipeline_IntDividerPipelineModule_L47F13L61T14_flag;
DivPipeline_IntDividerPipelineModule_L47F13L61T14_IntDividerPipelineModule_L52F33T79_Lookup1 <= unsigned(DivPipeline_Inputs_numerator);
DivPipeline_IntDividerPipelineModule_L47F13L61T14_IntDividerPipelineModule_L52F33T79_Lookup2 <= unsigned(DivPipeline_IntDividerPipelineModule_L47F13L61T14_IntDividerPipelineModule_L52F40T65_Expr(63 downto 0));
DivPipeline_IntDividerPipelineModule_L47F13L61T14_IntDividerPipelineModule_L52F33T79_LookupMultiplexerAddress <= DivPipeline_IntDividerPipelineModule_L47F13L61T14_flag;
end process;
-- [BEGIN USER ARCHITECTURE]
-- [END USER ARCHITECTURE]
end architecture;
