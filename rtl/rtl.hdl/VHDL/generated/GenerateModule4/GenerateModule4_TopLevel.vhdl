-- PLEASE READ THIS, IT MAY SAVE YOU SOME TIME AND MONEY, THANK YOU!
-- * This file was generated by Quokka FPGA Toolkit.
-- * Generated code is your property, do whatever you want with it
-- * Place custom code between [BEGIN USER ***] and [END USER ***].
-- * CAUTION: All code outside of [USER] scope is subject to regeneration.
-- * Bad things happen sometimes in developer's life,
--   it is recommended to use source control management software (e.g. git, bzr etc) to keep your custom code safe'n'sound.
-- * Internal structure of code is subject to change.
--   You can use some of signals in custom code, but most likely they will not exist in future (e.g. will get shorter or gone completely)
-- * Please send your feedback, comments, improvement ideas etc. to evmuryshkin@gmail.com
-- * Visit https://github.com/EvgenyMuryshkin/QuokkaEvaluation to access latest version of playground
--
-- DISCLAIMER:
--   Code comes AS-IS, it is your responsibility to make sure it is working as expected
--   no responsibility will be taken for any loss or damage caused by use of Quokka toolkit.
--
-- System configuration name is GenerateModule4_TopLevel, clock frequency is 1Hz, Top-level
library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;
use work.Quokka.all;
entity GenerateModule4_TopLevel is
	port
	(
		-- [BEGIN USER PORTS]
		-- [END USER PORTS]
		iSeed : in std_logic;
		iBits : in unsigned (4 downto 0);
		oData0 : out unsigned (1 downto 0);
		oData1 : out unsigned (2 downto 0);
		oData2 : out unsigned (3 downto 0);
		oData3 : out unsigned (4 downto 0);
		oData4 : out unsigned (5 downto 0)
	);
end entity;
-- FSM summary
-- Packages
architecture rtl of GenerateModule4_TopLevel is
	-- [BEGIN USER SIGNALS]
	-- [END USER SIGNALS]
	constant HiSignal : std_logic := '1';
	constant LoSignal : std_logic := '0';
	constant Zero : std_logic := '0';
	constant One : std_logic := '1';
	constant true : std_logic := '1';
	constant false : std_logic := '0';
	constant size : unsigned(2 downto 0) := "101";
	constant GenerateModule_L83F25T26_Expr : std_logic := '0';
	constant GenerateModule_L86F13L93T14_1_idx : std_logic := '1';
	constant GenerateModule_L86F13L93T14_2_idx : unsigned(1 downto 0) := "10";
	constant GenerateModule_L95F13L102T14_3_idx : unsigned(1 downto 0) := "11";
	constant GenerateModule_L95F13L102T14_4_idx : unsigned(2 downto 0) := "100";
	signal Inputs_iSeed : std_logic := '0';
	signal Inputs_iBits : unsigned(4 downto 0) := (others => '0');
	signal nested0_iData : std_logic := '0';
	signal nested0_iBit : std_logic := '0';
	signal nested0_oData : unsigned(1 downto 0) := (others => '0');
	signal nested0_oBit : std_logic := '0';
	signal nested1_iData : unsigned(1 downto 0) := (others => '0');
	signal nested1_iBit : std_logic := '0';
	signal nested1_oData : unsigned(2 downto 0) := (others => '0');
	signal nested1_oBit : std_logic := '0';
	signal nested2_iData : unsigned(2 downto 0) := (others => '0');
	signal nested2_iBit : std_logic := '0';
	signal nested2_oData : unsigned(3 downto 0) := (others => '0');
	signal nested2_oBit : std_logic := '0';
	signal nested3_iData : unsigned(3 downto 0) := (others => '0');
	signal nested3_iBit : std_logic := '0';
	signal nested3_oData : unsigned(4 downto 0) := (others => '0');
	signal nested3_oBit : std_logic := '0';
	signal nested4_iData : unsigned(4 downto 0) := (others => '0');
	signal nested4_iBit : std_logic := '0';
	signal nested4_oData : unsigned(5 downto 0) := (others => '0');
	signal nested4_oBit : std_logic := '0';
	signal nested0iDatanested0_iDataHardLink : std_logic := '0';
	signal nested0iBitnested0_iBitHardLink : std_logic := '0';
	signal nested0oDatanested0_oDataHardLink : unsigned(1 downto 0) := "00";
	signal nested0oBitnested0_oBitHardLink : std_logic := '0';
	signal nested1iDatanested1_iDataHardLink : unsigned(1 downto 0) := "00";
	signal nested1iBitnested1_iBitHardLink : std_logic := '0';
	signal nested1oDatanested1_oDataHardLink : unsigned(2 downto 0) := "000";
	signal nested1oBitnested1_oBitHardLink : std_logic := '0';
	signal nested2iDatanested2_iDataHardLink : unsigned(2 downto 0) := "000";
	signal nested2iBitnested2_iBitHardLink : std_logic := '0';
	signal nested2oDatanested2_oDataHardLink : unsigned(3 downto 0) := "0000";
	signal nested2oBitnested2_oBitHardLink : std_logic := '0';
	signal nested3iDatanested3_iDataHardLink : unsigned(3 downto 0) := "0000";
	signal nested3iBitnested3_iBitHardLink : std_logic := '0';
	signal nested3oDatanested3_oDataHardLink : unsigned(4 downto 0) := "00000";
	signal nested3oBitnested3_oBitHardLink : std_logic := '0';
	signal nested4iDatanested4_iDataHardLink : unsigned(4 downto 0) := "00000";
	signal nested4iBitnested4_iBitHardLink : std_logic := '0';
	signal nested4oDatanested4_oDataHardLink : unsigned(5 downto 0) := "000000";
	signal nested4oBitnested4_oBitHardLink : std_logic := '0';
begin
	GenerateModule4_TopLevel_nested0 : entity work.GenerateModule4_TopLevel_nested0
	port map
	(
		-- [BEGIN USER MAP FOR nested0]
		-- [END USER MAP FOR nested0]
iData => nested0iDatanested0_iDataHardLink,
iBit => nested0iBitnested0_iBitHardLink,
oData => nested0oDatanested0_oDataHardLink,
oBit => nested0oBitnested0_oBitHardLink
	);
	GenerateModule4_TopLevel_nested1 : entity work.GenerateModule4_TopLevel_nested1
	port map
	(
		-- [BEGIN USER MAP FOR nested1]
		-- [END USER MAP FOR nested1]
iData => nested1iDatanested1_iDataHardLink,
iBit => nested1iBitnested1_iBitHardLink,
oData => nested1oDatanested1_oDataHardLink,
oBit => nested1oBitnested1_oBitHardLink
	);
	GenerateModule4_TopLevel_nested2 : entity work.GenerateModule4_TopLevel_nested2
	port map
	(
		-- [BEGIN USER MAP FOR nested2]
		-- [END USER MAP FOR nested2]
iData => nested2iDatanested2_iDataHardLink,
iBit => nested2iBitnested2_iBitHardLink,
oData => nested2oDatanested2_oDataHardLink,
oBit => nested2oBitnested2_oBitHardLink
	);
	GenerateModule4_TopLevel_nested3 : entity work.GenerateModule4_TopLevel_nested3
	port map
	(
		-- [BEGIN USER MAP FOR nested3]
		-- [END USER MAP FOR nested3]
iData => nested3iDatanested3_iDataHardLink,
iBit => nested3iBitnested3_iBitHardLink,
oData => nested3oDatanested3_oDataHardLink,
oBit => nested3oBitnested3_oBitHardLink
	);
	GenerateModule4_TopLevel_nested4 : entity work.GenerateModule4_TopLevel_nested4
	port map
	(
		-- [BEGIN USER MAP FOR nested4]
		-- [END USER MAP FOR nested4]
iData => nested4iDatanested4_iDataHardLink,
iBit => nested4iBitnested4_iBitHardLink,
oData => nested4oDatanested4_oDataHardLink,
oBit => nested4oBitnested4_oBitHardLink
	);
	process (iBits, Inputs_iBits, iSeed, nested0_iBit, nested0_iData, nested0_oData, nested0oBitnested0_oBitHardLink, nested0oDatanested0_oDataHardLink, nested1_iBit, nested1_iData, nested1_oData, nested1oBitnested1_oBitHardLink, nested1oDatanested1_oDataHardLink, nested2_iBit, nested2_iData, nested2_oData, nested2oBitnested2_oBitHardLink, nested2oDatanested2_oDataHardLink, nested3_iBit, nested3_iData, nested3_oData, nested3oBitnested3_oBitHardLink, nested3oDatanested3_oDataHardLink, nested4_iBit, nested4_iData, nested4_oData, nested4oBitnested4_oBitHardLink, nested4oDatanested4_oDataHardLink)
	begin
		Inputs_iSeed <= iSeed;
		Inputs_iBits <= iBits;
		nested0_iData <= GenerateModule_L83F25T26_Expr;
		nested0_iBit <= Inputs_iBits(0);
		nested1_iData <= nested0_oData;
		nested1_iBit <= Inputs_iBits(1);
		nested2_iData <= nested1_oData;
		nested2_iBit <= Inputs_iBits(2);
		oData0 <= nested0_oData;
		oData1 <= nested1_oData;
		oData2 <= nested2_oData;
		oData3 <= nested3_oData;
		oData4 <= nested4_oData;
		nested0iDatanested0_iDataHardLink <= nested0_iData;
		nested0iBitnested0_iBitHardLink <= nested0_iBit;
		nested0_oData <= nested0oDatanested0_oDataHardLink;
		nested0_oBit <= nested0oBitnested0_oBitHardLink;
		nested1iDatanested1_iDataHardLink <= nested1_iData;
		nested1iBitnested1_iBitHardLink <= nested1_iBit;
		nested1_oData <= nested1oDatanested1_oDataHardLink;
		nested1_oBit <= nested1oBitnested1_oBitHardLink;
		nested2iDatanested2_iDataHardLink <= nested2_iData;
		nested2iBitnested2_iBitHardLink <= nested2_iBit;
		nested2_oData <= nested2oDatanested2_oDataHardLink;
		nested2_oBit <= nested2oBitnested2_oBitHardLink;
		nested3iDatanested3_iDataHardLink <= nested3_iData;
		nested3iBitnested3_iBitHardLink <= nested3_iBit;
		nested3_oData <= nested3oDatanested3_oDataHardLink;
		nested3_oBit <= nested3oBitnested3_oBitHardLink;
		nested4iDatanested4_iDataHardLink <= nested4_iData;
		nested4iBitnested4_iBitHardLink <= nested4_iBit;
		nested4_oData <= nested4oDatanested4_oDataHardLink;
		nested4_oBit <= nested4oBitnested4_oBitHardLink;
	end process;
	-- [BEGIN USER ARCHITECTURE]
	-- [END USER ARCHITECTURE]
end architecture;
