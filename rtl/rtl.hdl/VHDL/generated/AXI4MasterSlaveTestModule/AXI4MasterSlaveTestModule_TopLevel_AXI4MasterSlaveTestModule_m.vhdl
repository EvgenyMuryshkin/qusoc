-- PLEASE READ THIS, IT MAY SAVE YOU SOME TIME AND MONEY, THANK YOU!
-- * This file was generated by Quokka FPGA Toolkit.
-- * Generated code is your property, do whatever you want with it
-- * Place custom code between [BEGIN USER ***] and [END USER ***].
-- * CAUTION: All code outside of [USER] scope is subject to regeneration.
-- * Bad things happen sometimes in developer's life,
--   it is recommended to use source control management software (e.g. git, bzr etc) to keep your custom code safe'n'sound.
-- * Internal structure of code is subject to change.
--   You can use some of signals in custom code, but most likely they will not exist in future (e.g. will get shorter or gone completely)
-- * Please send your feedback, comments, improvement ideas etc. to evmuryshkin@gmail.com
-- * Visit https://github.com/EvgenyMuryshkin/QuokkaEvaluation to access latest version of playground
-- 
-- DISCLAIMER:
--   Code comes AS-IS, it is your responsibility to make sure it is working as expected
--   no responsibility will be taken for any loss or damage caused by use of Quokka toolkit.
-- 
-- System configuration name is AXI4MasterSlaveTestModule_TopLevel_AXI4MasterSlaveTestModule_m, clock frequency is 1Hz, Embedded
library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

use work.Quokka.all;

entity AXI4MasterSlaveTestModule_TopLevel_AXI4MasterSlaveTestModule_m is
    port
    (
-- [BEGIN USER PORTS]
-- [END USER PORTS]

BoardSignals : in  BoardSignalsType;
S2M_AR_ARREADY : in  std_logic;
S2M_AW_AWREADY : in  std_logic;
S2M_B_BID : in  unsigned(8 downto 1);
S2M_B_BRESP : in  unsigned(2 downto 1);
S2M_B_BUSER : in  unsigned(8 downto 1);
S2M_B_BVALID : in  std_logic;
S2M_R_RID : in  unsigned(8 downto 1);
S2M_R_RDATA0 : in  unsigned(8 downto 1);
S2M_R_RDATA1 : in  unsigned(8 downto 1);
S2M_R_RDATA2 : in  unsigned(8 downto 1);
S2M_R_RDATA3 : in  unsigned(8 downto 1);
S2M_R_RRESP : in  unsigned(2 downto 1);
S2M_R_RLAST : in  std_logic;
S2M_R_RUSER : in  unsigned(8 downto 1);
S2M_R_RVALID : in  std_logic;
S2M_W_WREADY : in  std_logic;
AXADDR : in  unsigned(32 downto 1);
RE : in  std_logic;
WE : in  std_logic;
WDATA0 : in  unsigned(8 downto 1);
WDATA1 : in  unsigned(8 downto 1);
WDATA2 : in  unsigned(8 downto 1);
WDATA3 : in  unsigned(8 downto 1);
WSTRB : in  unsigned(4 downto 1);
InvalidInputs : out  std_logic;
OutACK : out  std_logic;
RDATA0 : out  unsigned(8 downto 1);
RDATA1 : out  unsigned(8 downto 1);
RDATA2 : out  unsigned(8 downto 1);
RDATA3 : out  unsigned(8 downto 1);
M2S_AR_ARID : out  unsigned(8 downto 1);
M2S_AR_ARADDR : out  unsigned(32 downto 1);
M2S_AR_ARLEN : out  unsigned(8 downto 1);
M2S_AR_ARSIZE : out  unsigned(3 downto 1);
M2S_AR_ARBURST : out  unsigned(2 downto 1);
M2S_AR_ARLOCK : out  unsigned(2 downto 1);
M2S_AR_ARCACHE : out  unsigned(4 downto 1);
M2S_AR_ARPROT : out  unsigned(3 downto 1);
M2S_AR_ARQOS : out  unsigned(4 downto 1);
M2S_AR_ARREGION : out  unsigned(8 downto 1);
M2S_AR_ARUSER : out  unsigned(8 downto 1);
M2S_AR_ARVALID : out  std_logic;
M2S_R_RREADY : out  std_logic;
M2S_AW_AWID : out  unsigned(8 downto 1);
M2S_AW_AWADDR : out  unsigned(32 downto 1);
M2S_AW_AWLEN : out  unsigned(8 downto 1);
M2S_AW_AWSIZE : out  unsigned(3 downto 1);
M2S_AW_AWBURST : out  unsigned(2 downto 1);
M2S_AW_AWLOCK : out  unsigned(2 downto 1);
M2S_AW_AWCACHE : out  unsigned(4 downto 1);
M2S_AW_AWPROT : out  unsigned(3 downto 1);
M2S_AW_AWQOS : out  unsigned(4 downto 1);
M2S_AW_AWREGION : out  unsigned(8 downto 1);
M2S_AW_AWUSER : out  unsigned(8 downto 1);
M2S_AW_AWVALID : out  std_logic;
M2S_W_WID : out  unsigned(8 downto 1);
M2S_W_WDATA0 : out  unsigned(8 downto 1);
M2S_W_WDATA1 : out  unsigned(8 downto 1);
M2S_W_WDATA2 : out  unsigned(8 downto 1);
M2S_W_WDATA3 : out  unsigned(8 downto 1);
M2S_W_WSTRB : out  unsigned(4 downto 1);
M2S_W_WLAST : out  std_logic;
M2S_W_WUSER : out  unsigned(8 downto 1);
M2S_W_WVALID : out  std_logic;
M2S_B_BREADY : out  std_logic
    );
end entity;

-- FSM summary
-- Packages
architecture rtl of AXI4MasterSlaveTestModule_TopLevel_AXI4MasterSlaveTestModule_m is
-- [BEGIN USER SIGNALS]
-- [END USER SIGNALS]
constant HiSignal : std_logic := '1';
constant LoSignal : std_logic := '0';
constant Zero : std_logic := '0';
constant One : std_logic := '1';
constant true : std_logic := '1';
constant false : std_logic := '0';
constant size : unsigned(1 downto 0)  := "10";
constant AXI4MasterModule_L87F9L135T10_AXI4MasterModule_L88F13L134T14_AXI4MasterModule_L90F22T40_Expr : std_logic := '0';
constant AXI4MasterModule_L87F9L135T10_AXI4MasterModule_L88F13L134T14_AXI4MasterModule_L91F37T54_Expr : std_logic := '1';
constant AXI4MasterModule_L87F9L135T10_AXI4MasterModule_L88F13L134T14_AXI4MasterModule_L93F22T39_Expr : std_logic := '1';
constant AXI4MasterModule_L87F9L135T10_AXI4MasterModule_L88F13L134T14_AXI4MasterModule_L95F21L108T22_AXI4MasterModule_L97F25L102T26_AXI4MasterModule_L101F45T63_Expr : unsigned(2 downto 0)  := "100";
constant AXI4MasterModule_L87F9L135T10_AXI4MasterModule_L88F13L134T14_AXI4MasterModule_L95F21L108T22_AXI4MasterModule_L104F25L107T26_AXI4MasterModule_L106F45T63_Expr : unsigned(1 downto 0)  := "10";
constant AXI4MasterModule_L87F9L135T10_AXI4MasterModule_L88F13L134T14_AXI4MasterModule_L110F22T40_Expr : unsigned(1 downto 0)  := "10";
constant AXI4MasterModule_L87F9L135T10_AXI4MasterModule_L88F13L134T14_AXI4MasterModule_L112F21L115T22_AXI4MasterModule_L114F41T58_Expr : unsigned(1 downto 0)  := "11";
constant AXI4MasterModule_L87F9L135T10_AXI4MasterModule_L88F13L134T14_AXI4MasterModule_L117F22T39_Expr : unsigned(1 downto 0)  := "11";
constant AXI4MasterModule_L87F9L135T10_AXI4MasterModule_L88F13L134T14_AXI4MasterModule_L118F37T54_Expr : std_logic := '1';
constant AXI4MasterModule_L87F9L135T10_AXI4MasterModule_L88F13L134T14_AXI4MasterModule_L120F22T40_Expr : unsigned(2 downto 0)  := "100";
constant AXI4MasterModule_L87F9L135T10_AXI4MasterModule_L88F13L134T14_AXI4MasterModule_L122F21L124T22_AXI4MasterModule_L123F41T58_Expr : unsigned(2 downto 0)  := "101";
constant AXI4MasterModule_L87F9L135T10_AXI4MasterModule_L88F13L134T14_AXI4MasterModule_L126F22T39_Expr : unsigned(2 downto 0)  := "101";
constant AXI4MasterModule_L87F9L135T10_AXI4MasterModule_L88F13L134T14_AXI4MasterModule_L127F37T54_Expr : std_logic := '1';
constant AXI4MasterModule_L87F9L135T10_AXI4MasterModule_L88F13L134T14_AXI4MasterModule_L130F17L132T18_AXI4MasterModule_L131F37T54_Expr : std_logic := '1';
constant AXI4MasterModule_L55F44T61_Expr : unsigned(1 downto 0)  := "11";
constant AXI4MasterModule_L55F78T95_Expr : unsigned(2 downto 0)  := "101";
constant AXI4MasterModule_L62F40T58_Expr : unsigned(1 downto 0)  := "10";
constant AXI4_M_AR_L15F28T29_Expr : std_logic := '0';
constant AXI4_M_AR_L17F29T30_Expr : std_logic := '1';
constant AXI4_M_AR_L18F33T43_Expr : unsigned(1 downto 0)  := "10";
constant AXI4_M_AR_L19F35T48_Expr : std_logic := '1';
constant AXI4_M_AR_L20F33T47_Expr : std_logic := '0';
constant AXI4_M_AR_L21F35T63_Expr : std_logic := '0';
constant AXI4_M_AR_L22F33T66_Expr : unsigned(1 downto 0)  := "10";
constant AXI4_M_AR_L23F31T44_Expr : std_logic := '0';
constant AXI4_M_AR_L24F32T33_Expr : std_logic := '0';
constant AXI4_M_AR_L25F30T31_Expr : std_logic := '0';
constant AXI4MasterModule_L66F39T56_Expr : unsigned(1 downto 0)  := "11";
constant AXI4MasterModule_L71F40T58_Expr : unsigned(2 downto 0)  := "100";
constant AXI4_M_AW_L14F28T29_Expr : std_logic := '0';
constant AXI4_M_AW_L16F29T30_Expr : std_logic := '1';
constant AXI4_M_AW_L17F33T43_Expr : unsigned(1 downto 0)  := "10";
constant AXI4_M_AW_L18F35T48_Expr : std_logic := '1';
constant AXI4_M_AW_L19F33T47_Expr : std_logic := '0';
constant AXI4_M_AW_L20F35T63_Expr : std_logic := '0';
constant AXI4_M_AW_L21F33T66_Expr : unsigned(1 downto 0)  := "10";
constant AXI4_M_AW_L22F31T44_Expr : std_logic := '0';
constant AXI4_M_AW_L23F32T33_Expr : std_logic := '0';
constant AXI4_M_AW_L24F30T31_Expr : std_logic := '0';
constant AXI4MasterModule_L75F23T24_Expr : std_logic := '0';
constant AXI4MasterModule_L78F39T57_Expr : unsigned(2 downto 0)  := "100";
constant AXI4_M_W_L17F29T33_Expr : std_logic := '1';
constant AXI4_M_W_L18F29T30_Expr : std_logic := '0';
constant AXI4MasterModule_L82F39T56_Expr : unsigned(2 downto 0)  := "101";
signal Inputs_S2M_AR_ARREADY : std_logic := '0';
signal Inputs_S2M_AW_AWREADY : std_logic := '0';
signal Inputs_S2M_B_BID : unsigned(7 downto 0) := (others => '0');
signal Inputs_S2M_B_BRESP : unsigned(1 downto 0) := (others => '0');
signal Inputs_S2M_B_BUSER : unsigned(7 downto 0) := (others => '0');
signal Inputs_S2M_B_BVALID : std_logic := '0';
signal Inputs_S2M_R_RID : unsigned(7 downto 0) := (others => '0');
signal Inputs_S2M_R_RDATA0 : unsigned(7 downto 0) := (others => '0');
signal Inputs_S2M_R_RDATA1 : unsigned(7 downto 0) := (others => '0');
signal Inputs_S2M_R_RDATA2 : unsigned(7 downto 0) := (others => '0');
signal Inputs_S2M_R_RDATA3 : unsigned(7 downto 0) := (others => '0');
signal Inputs_S2M_R_RRESP : unsigned(1 downto 0) := (others => '0');
signal Inputs_S2M_R_RLAST : std_logic := '0';
signal Inputs_S2M_R_RUSER : unsigned(7 downto 0) := (others => '0');
signal Inputs_S2M_R_RVALID : std_logic := '0';
signal Inputs_S2M_W_WREADY : std_logic := '0';
signal Inputs_AXADDR : unsigned(31 downto 0) := (others => '0');
signal Inputs_RE : std_logic := '0';
signal Inputs_WE : std_logic := '0';
signal Inputs_WDATA0 : unsigned(7 downto 0) := (others => '0');
signal Inputs_WDATA1 : unsigned(7 downto 0) := (others => '0');
signal Inputs_WDATA2 : unsigned(7 downto 0) := (others => '0');
signal Inputs_WDATA3 : unsigned(7 downto 0) := (others => '0');
signal Inputs_WSTRB : unsigned(3 downto 0) := (others => '0');
signal NextState_fsm : unsigned(2 downto 0) := (others => '0');
signal NextState_AXADDR : unsigned(31 downto 0) := (others => '0');
signal NextState_WSTRB : unsigned(3 downto 0) := (others => '0');
signal internalInvalidInputs : std_logic := '0';
signal State_ARDATADefault : unsigned(7 downto 0)  := "00000000";
signal State_AWDATADefault : unsigned(7 downto 0)  := "00000000";
signal State_fsm : unsigned(2 downto 0)  := "000";
constant State_fsmDefault : unsigned(2 downto 0)  := "000";
signal State_AXADDR : unsigned(31 downto 0)  := "00000000000000000000000000000000";
constant State_AXADDRDefault : unsigned(31 downto 0)  := "00000000000000000000000000000000";
signal State_WSTRB : unsigned(3 downto 0)  := "0000";
constant State_WSTRBDefault : unsigned(3 downto 0)  := "0000";
signal AXI4MasterModule_L53F39T60_Expr : std_logic := '0';
signal AXI4MasterModule_L53F39T60_Expr_1 : std_logic := '0';
signal AXI4MasterModule_L53F39T60_Expr_2 : std_logic := '0';
signal AXI4MasterModule_L87F9L135T10_AXI4MasterModule_L88F13L134T14_AXI4MasterModule_L94F25T47_Expr : std_logic := '0';
signal AXI4MasterModule_L87F9L135T10_AXI4MasterModule_L88F13L134T14_AXI4MasterModule_L94F25T47_Expr_1 : std_logic := '0';
signal AXI4MasterModule_L55F31T95_Expr : std_logic := '0';
signal AXI4MasterModule_L55F31T95_Expr_1 : std_logic := '0';
signal AXI4MasterModule_L55F31T95_Expr_2 : std_logic := '0';
signal AXI4MasterModule_L87F9L135T10_AXI4MasterModule_L88F13L134T14_AXI4MasterModule_L90F17L92T27_Case : std_logic := '0';
signal AXI4MasterModule_L87F9L135T10_AXI4MasterModule_L88F13L134T14_AXI4MasterModule_L90F17L92T27_CaseLhs : signed(3 downto 0)  := "0000";
signal AXI4MasterModule_L87F9L135T10_AXI4MasterModule_L88F13L134T14_AXI4MasterModule_L90F17L92T27_CaseRhs : signed(3 downto 0)  := "0000";
signal AXI4MasterModule_L87F9L135T10_AXI4MasterModule_L88F13L134T14_AXI4MasterModule_L93F17L109T27_Case : std_logic := '0';
signal AXI4MasterModule_L87F9L135T10_AXI4MasterModule_L88F13L134T14_AXI4MasterModule_L93F17L109T27_CaseLhs : signed(3 downto 0)  := "0000";
signal AXI4MasterModule_L87F9L135T10_AXI4MasterModule_L88F13L134T14_AXI4MasterModule_L93F17L109T27_CaseRhs : signed(3 downto 0)  := "0000";
signal AXI4MasterModule_L87F9L135T10_AXI4MasterModule_L88F13L134T14_AXI4MasterModule_L110F17L116T27_Case : std_logic := '0';
signal AXI4MasterModule_L87F9L135T10_AXI4MasterModule_L88F13L134T14_AXI4MasterModule_L110F17L116T27_CaseLhs : signed(3 downto 0)  := "0000";
signal AXI4MasterModule_L87F9L135T10_AXI4MasterModule_L88F13L134T14_AXI4MasterModule_L110F17L116T27_CaseRhs : signed(3 downto 0)  := "0000";
signal AXI4MasterModule_L87F9L135T10_AXI4MasterModule_L88F13L134T14_AXI4MasterModule_L117F17L119T27_Case : std_logic := '0';
signal AXI4MasterModule_L87F9L135T10_AXI4MasterModule_L88F13L134T14_AXI4MasterModule_L117F17L119T27_CaseLhs : signed(3 downto 0)  := "0000";
signal AXI4MasterModule_L87F9L135T10_AXI4MasterModule_L88F13L134T14_AXI4MasterModule_L117F17L119T27_CaseRhs : signed(3 downto 0)  := "0000";
signal AXI4MasterModule_L87F9L135T10_AXI4MasterModule_L88F13L134T14_AXI4MasterModule_L120F17L125T27_Case : std_logic := '0';
signal AXI4MasterModule_L87F9L135T10_AXI4MasterModule_L88F13L134T14_AXI4MasterModule_L120F17L125T27_CaseLhs : signed(3 downto 0)  := "0000";
signal AXI4MasterModule_L87F9L135T10_AXI4MasterModule_L88F13L134T14_AXI4MasterModule_L120F17L125T27_CaseRhs : signed(3 downto 0)  := "0000";
signal AXI4MasterModule_L87F9L135T10_AXI4MasterModule_L88F13L134T14_AXI4MasterModule_L126F17L128T27_Case : std_logic := '0';
signal AXI4MasterModule_L87F9L135T10_AXI4MasterModule_L88F13L134T14_AXI4MasterModule_L126F17L128T27_CaseLhs : signed(3 downto 0)  := "0000";
signal AXI4MasterModule_L87F9L135T10_AXI4MasterModule_L88F13L134T14_AXI4MasterModule_L126F17L128T27_CaseRhs : signed(3 downto 0)  := "0000";
signal AXI4MasterModule_L55F31T61_Expr : std_logic := '0';
signal AXI4MasterModule_L55F31T61_ExprLhs : signed(3 downto 0)  := "0000";
signal AXI4MasterModule_L55F31T61_ExprRhs : signed(3 downto 0)  := "0000";
signal AXI4MasterModule_L55F65T95_Expr : std_logic := '0';
signal AXI4MasterModule_L55F65T95_ExprLhs : signed(3 downto 0)  := "0000";
signal AXI4MasterModule_L55F65T95_ExprRhs : signed(3 downto 0)  := "0000";
signal AXI4MasterModule_L62F27T58_Expr : std_logic := '0';
signal AXI4MasterModule_L62F27T58_ExprLhs : signed(3 downto 0)  := "0000";
signal AXI4MasterModule_L62F27T58_ExprRhs : signed(3 downto 0)  := "0000";
signal AXI4MasterModule_L66F26T56_Expr : std_logic := '0';
signal AXI4MasterModule_L66F26T56_ExprLhs : signed(3 downto 0)  := "0000";
signal AXI4MasterModule_L66F26T56_ExprRhs : signed(3 downto 0)  := "0000";
signal AXI4MasterModule_L71F27T58_Expr : std_logic := '0';
signal AXI4MasterModule_L71F27T58_ExprLhs : signed(3 downto 0)  := "0000";
signal AXI4MasterModule_L71F27T58_ExprRhs : signed(3 downto 0)  := "0000";
signal AXI4MasterModule_L78F26T57_Expr : std_logic := '0';
signal AXI4MasterModule_L78F26T57_ExprLhs : signed(3 downto 0)  := "0000";
signal AXI4MasterModule_L78F26T57_ExprRhs : signed(3 downto 0)  := "0000";
signal AXI4MasterModule_L82F26T56_Expr : std_logic := '0';
signal AXI4MasterModule_L82F26T56_ExprLhs : signed(3 downto 0)  := "0000";
signal AXI4MasterModule_L82F26T56_ExprRhs : signed(3 downto 0)  := "0000";
type State_ARDATAArray is array(0 to 3) of unsigned(7 downto 0);
signal State_ARDATA : State_ARDATAArray := (others => (others => '0'));
type NextState_ARDATAArray is array(0 to 3) of unsigned(7 downto 0);
signal NextState_ARDATA : NextState_ARDATAArray := (others => (others => '0'));
type State_AWDATAArray is array(0 to 3) of unsigned(7 downto 0);
signal State_AWDATA : State_AWDATAArray := (others => (others => '0'));
type NextState_AWDATAArray is array(0 to 3) of unsigned(7 downto 0);
signal NextState_AWDATA : NextState_AWDATAArray := (others => (others => '0'));
begin
process (BoardSignals, NextState_AXADDR, NextState_fsm, NextState_WSTRB)
begin
if rising_edge(BoardSignals.Clock) then
if ( BoardSignals.Reset = '1' ) then
State_fsm <= State_fsmDefault;
State_AXADDR <= State_AXADDRDefault;
State_WSTRB <= State_WSTRBDefault;
else
State_fsm <= NextState_fsm;
State_AXADDR <= NextState_AXADDR;
State_WSTRB <= NextState_WSTRB;
end if;
end if;
end process;
process (BoardSignals, NextState_ARDATA, State_ARDATADefault)
begin
if rising_edge(BoardSignals.Clock) then
if ( BoardSignals.Reset = '1' ) then
for State_ARDATA_Iterator in 0 to 3 loop
State_ARDATA(State_ARDATA_Iterator) <= State_ARDATADefault;
end loop;
else
for State_ARDATA_Iterator in 0 to 3 loop
State_ARDATA(State_ARDATA_Iterator) <= NextState_ARDATA(State_ARDATA_Iterator);
end loop;
end if;
end if;
end process;
process (BoardSignals, NextState_AWDATA, State_AWDATADefault)
begin
if rising_edge(BoardSignals.Clock) then
if ( BoardSignals.Reset = '1' ) then
for State_AWDATA_Iterator in 0 to 3 loop
State_AWDATA(State_AWDATA_Iterator) <= State_AWDATADefault;
end loop;
else
for State_AWDATA_Iterator in 0 to 3 loop
State_AWDATA(State_AWDATA_Iterator) <= NextState_AWDATA(State_AWDATA_Iterator);
end loop;
end if;
end if;
end process;
    AXI4MasterModule_L87F9L135T10_AXI4MasterModule_L88F13L134T14_AXI4MasterModule_L90F17L92T27_Case <= '1' when (signed(resize(AXI4MasterModule_L87F9L135T10_AXI4MasterModule_L88F13L134T14_AXI4MasterModule_L90F17L92T27_CaseLhs, AXI4MasterModule_L87F9L135T10_AXI4MasterModule_L88F13L134T14_AXI4MasterModule_L90F17L92T27_CaseLhs'length + 1)) = signed(resize(AXI4MasterModule_L87F9L135T10_AXI4MasterModule_L88F13L134T14_AXI4MasterModule_L90F17L92T27_CaseRhs, AXI4MasterModule_L87F9L135T10_AXI4MasterModule_L88F13L134T14_AXI4MasterModule_L90F17L92T27_CaseRhs'length + 1))) else '0';
    AXI4MasterModule_L87F9L135T10_AXI4MasterModule_L88F13L134T14_AXI4MasterModule_L93F17L109T27_Case <= '1' when (signed(resize(AXI4MasterModule_L87F9L135T10_AXI4MasterModule_L88F13L134T14_AXI4MasterModule_L93F17L109T27_CaseLhs, AXI4MasterModule_L87F9L135T10_AXI4MasterModule_L88F13L134T14_AXI4MasterModule_L93F17L109T27_CaseLhs'length + 1)) = signed(resize(AXI4MasterModule_L87F9L135T10_AXI4MasterModule_L88F13L134T14_AXI4MasterModule_L93F17L109T27_CaseRhs, AXI4MasterModule_L87F9L135T10_AXI4MasterModule_L88F13L134T14_AXI4MasterModule_L93F17L109T27_CaseRhs'length + 1))) else '0';
    AXI4MasterModule_L87F9L135T10_AXI4MasterModule_L88F13L134T14_AXI4MasterModule_L110F17L116T27_Case <= '1' when (signed(resize(AXI4MasterModule_L87F9L135T10_AXI4MasterModule_L88F13L134T14_AXI4MasterModule_L110F17L116T27_CaseLhs, AXI4MasterModule_L87F9L135T10_AXI4MasterModule_L88F13L134T14_AXI4MasterModule_L110F17L116T27_CaseLhs'length + 1)) = signed(resize(AXI4MasterModule_L87F9L135T10_AXI4MasterModule_L88F13L134T14_AXI4MasterModule_L110F17L116T27_CaseRhs, AXI4MasterModule_L87F9L135T10_AXI4MasterModule_L88F13L134T14_AXI4MasterModule_L110F17L116T27_CaseRhs'length + 1))) else '0';
    AXI4MasterModule_L87F9L135T10_AXI4MasterModule_L88F13L134T14_AXI4MasterModule_L117F17L119T27_Case <= '1' when (signed(resize(AXI4MasterModule_L87F9L135T10_AXI4MasterModule_L88F13L134T14_AXI4MasterModule_L117F17L119T27_CaseLhs, AXI4MasterModule_L87F9L135T10_AXI4MasterModule_L88F13L134T14_AXI4MasterModule_L117F17L119T27_CaseLhs'length + 1)) = signed(resize(AXI4MasterModule_L87F9L135T10_AXI4MasterModule_L88F13L134T14_AXI4MasterModule_L117F17L119T27_CaseRhs, AXI4MasterModule_L87F9L135T10_AXI4MasterModule_L88F13L134T14_AXI4MasterModule_L117F17L119T27_CaseRhs'length + 1))) else '0';
    AXI4MasterModule_L87F9L135T10_AXI4MasterModule_L88F13L134T14_AXI4MasterModule_L120F17L125T27_Case <= '1' when (signed(resize(AXI4MasterModule_L87F9L135T10_AXI4MasterModule_L88F13L134T14_AXI4MasterModule_L120F17L125T27_CaseLhs, AXI4MasterModule_L87F9L135T10_AXI4MasterModule_L88F13L134T14_AXI4MasterModule_L120F17L125T27_CaseLhs'length + 1)) = signed(resize(AXI4MasterModule_L87F9L135T10_AXI4MasterModule_L88F13L134T14_AXI4MasterModule_L120F17L125T27_CaseRhs, AXI4MasterModule_L87F9L135T10_AXI4MasterModule_L88F13L134T14_AXI4MasterModule_L120F17L125T27_CaseRhs'length + 1))) else '0';
    AXI4MasterModule_L87F9L135T10_AXI4MasterModule_L88F13L134T14_AXI4MasterModule_L126F17L128T27_Case <= '1' when (signed(resize(AXI4MasterModule_L87F9L135T10_AXI4MasterModule_L88F13L134T14_AXI4MasterModule_L126F17L128T27_CaseLhs, AXI4MasterModule_L87F9L135T10_AXI4MasterModule_L88F13L134T14_AXI4MasterModule_L126F17L128T27_CaseLhs'length + 1)) = signed(resize(AXI4MasterModule_L87F9L135T10_AXI4MasterModule_L88F13L134T14_AXI4MasterModule_L126F17L128T27_CaseRhs, AXI4MasterModule_L87F9L135T10_AXI4MasterModule_L88F13L134T14_AXI4MasterModule_L126F17L128T27_CaseRhs'length + 1))) else '0';
    AXI4MasterModule_L55F31T61_Expr <= '1' when (signed(resize(AXI4MasterModule_L55F31T61_ExprLhs, AXI4MasterModule_L55F31T61_ExprLhs'length + 1)) = signed(resize(AXI4MasterModule_L55F31T61_ExprRhs, AXI4MasterModule_L55F31T61_ExprRhs'length + 1))) else '0';
    AXI4MasterModule_L55F65T95_Expr <= '1' when (signed(resize(AXI4MasterModule_L55F65T95_ExprLhs, AXI4MasterModule_L55F65T95_ExprLhs'length + 1)) = signed(resize(AXI4MasterModule_L55F65T95_ExprRhs, AXI4MasterModule_L55F65T95_ExprRhs'length + 1))) else '0';
    AXI4MasterModule_L62F27T58_Expr <= '1' when (signed(resize(AXI4MasterModule_L62F27T58_ExprLhs, AXI4MasterModule_L62F27T58_ExprLhs'length + 1)) = signed(resize(AXI4MasterModule_L62F27T58_ExprRhs, AXI4MasterModule_L62F27T58_ExprRhs'length + 1))) else '0';
    AXI4MasterModule_L66F26T56_Expr <= '1' when (signed(resize(AXI4MasterModule_L66F26T56_ExprLhs, AXI4MasterModule_L66F26T56_ExprLhs'length + 1)) = signed(resize(AXI4MasterModule_L66F26T56_ExprRhs, AXI4MasterModule_L66F26T56_ExprRhs'length + 1))) else '0';
    AXI4MasterModule_L71F27T58_Expr <= '1' when (signed(resize(AXI4MasterModule_L71F27T58_ExprLhs, AXI4MasterModule_L71F27T58_ExprLhs'length + 1)) = signed(resize(AXI4MasterModule_L71F27T58_ExprRhs, AXI4MasterModule_L71F27T58_ExprRhs'length + 1))) else '0';
    AXI4MasterModule_L78F26T57_Expr <= '1' when (signed(resize(AXI4MasterModule_L78F26T57_ExprLhs, AXI4MasterModule_L78F26T57_ExprLhs'length + 1)) = signed(resize(AXI4MasterModule_L78F26T57_ExprRhs, AXI4MasterModule_L78F26T57_ExprRhs'length + 1))) else '0';
    AXI4MasterModule_L82F26T56_Expr <= '1' when (signed(resize(AXI4MasterModule_L82F26T56_ExprLhs, AXI4MasterModule_L82F26T56_ExprLhs'length + 1)) = signed(resize(AXI4MasterModule_L82F26T56_ExprRhs, AXI4MasterModule_L82F26T56_ExprRhs'length + 1))) else '0';

process(AXI4MasterModule_L53F39T60_Expr_1, AXI4MasterModule_L53F39T60_Expr_2)
begin
AXI4MasterModule_L53F39T60_Expr <= AXI4MasterModule_L53F39T60_Expr_1 AND AXI4MasterModule_L53F39T60_Expr_2;

    end process;

process(AXI4MasterModule_L87F9L135T10_AXI4MasterModule_L88F13L134T14_AXI4MasterModule_L94F25T47_Expr_1)
begin
AXI4MasterModule_L87F9L135T10_AXI4MasterModule_L88F13L134T14_AXI4MasterModule_L94F25T47_Expr <= NOT AXI4MasterModule_L87F9L135T10_AXI4MasterModule_L88F13L134T14_AXI4MasterModule_L94F25T47_Expr_1;

    end process;

process(AXI4MasterModule_L55F31T95_Expr_1, AXI4MasterModule_L55F31T95_Expr_2)
begin
AXI4MasterModule_L55F31T95_Expr <= AXI4MasterModule_L55F31T95_Expr_1 OR AXI4MasterModule_L55F31T95_Expr_2;

    end process;
process(AXI4MasterModule_L87F9L135T10_AXI4MasterModule_L88F13L134T14_AXI4MasterModule_L110F17L116T27_Case, AXI4MasterModule_L87F9L135T10_AXI4MasterModule_L88F13L134T14_AXI4MasterModule_L117F17L119T27_Case, AXI4MasterModule_L87F9L135T10_AXI4MasterModule_L88F13L134T14_AXI4MasterModule_L120F17L125T27_Case, AXI4MasterModule_L87F9L135T10_AXI4MasterModule_L88F13L134T14_AXI4MasterModule_L126F17L128T27_Case, AXI4MasterModule_L87F9L135T10_AXI4MasterModule_L88F13L134T14_AXI4MasterModule_L90F17L92T27_Case, AXI4MasterModule_L87F9L135T10_AXI4MasterModule_L88F13L134T14_AXI4MasterModule_L93F17L109T27_Case, AXI4MasterModule_L87F9L135T10_AXI4MasterModule_L88F13L134T14_AXI4MasterModule_L94F25T47_Expr, Inputs_AXADDR, Inputs_RE, Inputs_S2M_B_BVALID, Inputs_S2M_R_RDATA0, Inputs_S2M_R_RDATA1, Inputs_S2M_R_RDATA2, Inputs_S2M_R_RDATA3, Inputs_S2M_R_RVALID, Inputs_WDATA0, Inputs_WDATA1, Inputs_WDATA2, Inputs_WDATA3, Inputs_WE, Inputs_WSTRB, State_ARDATA, State_AWDATA, State_AXADDR, State_fsm, State_WSTRB)
begin
for NextState_AWDATA_Iterator in 0 to 3 loop
NextState_AWDATA(NextState_AWDATA_Iterator) <= State_AWDATA(NextState_AWDATA_Iterator);
end loop;
for NextState_ARDATA_Iterator in 0 to 3 loop
NextState_ARDATA(NextState_ARDATA_Iterator) <= State_ARDATA(NextState_ARDATA_Iterator);
end loop;
NextState_fsm <= State_fsm;
NextState_AXADDR <= State_AXADDR;
NextState_WSTRB <= State_WSTRB;
if ( AXI4MasterModule_L87F9L135T10_AXI4MasterModule_L88F13L134T14_AXI4MasterModule_L90F17L92T27_Case = '1' ) then
NextState_fsm <= (0 => AXI4MasterModule_L87F9L135T10_AXI4MasterModule_L88F13L134T14_AXI4MasterModule_L91F37T54_Expr, others => '0');
elsif ( AXI4MasterModule_L87F9L135T10_AXI4MasterModule_L88F13L134T14_AXI4MasterModule_L93F17L109T27_Case = '1' ) then
if ( AXI4MasterModule_L87F9L135T10_AXI4MasterModule_L88F13L134T14_AXI4MasterModule_L94F25T47_Expr = '1' ) then
if ( Inputs_WE = '1' ) then
NextState_AXADDR <= Inputs_AXADDR;
NextState_AWDATA(0) <= Inputs_WDATA0;
NextState_AWDATA(1) <= Inputs_WDATA1;
NextState_AWDATA(2) <= Inputs_WDATA2;
NextState_AWDATA(3) <= Inputs_WDATA3;
NextState_WSTRB <= Inputs_WSTRB;
NextState_fsm <= AXI4MasterModule_L87F9L135T10_AXI4MasterModule_L88F13L134T14_AXI4MasterModule_L95F21L108T22_AXI4MasterModule_L97F25L102T26_AXI4MasterModule_L101F45T63_Expr;
elsif ( Inputs_RE = '1' ) then
NextState_AXADDR <= Inputs_AXADDR;
NextState_fsm <= unsigned(resize(unsigned(AXI4MasterModule_L87F9L135T10_AXI4MasterModule_L88F13L134T14_AXI4MasterModule_L95F21L108T22_AXI4MasterModule_L104F25L107T26_AXI4MasterModule_L106F45T63_Expr), NextState_fsm'length));
end if;
end if;
elsif ( AXI4MasterModule_L87F9L135T10_AXI4MasterModule_L88F13L134T14_AXI4MasterModule_L110F17L116T27_Case = '1' ) then
if ( Inputs_S2M_R_RVALID = '1' ) then
NextState_ARDATA(0) <= Inputs_S2M_R_RDATA0;
NextState_ARDATA(1) <= Inputs_S2M_R_RDATA1;
NextState_ARDATA(2) <= Inputs_S2M_R_RDATA2;
NextState_ARDATA(3) <= Inputs_S2M_R_RDATA3;
NextState_fsm <= unsigned(resize(unsigned(AXI4MasterModule_L87F9L135T10_AXI4MasterModule_L88F13L134T14_AXI4MasterModule_L112F21L115T22_AXI4MasterModule_L114F41T58_Expr), NextState_fsm'length));
end if;
elsif ( AXI4MasterModule_L87F9L135T10_AXI4MasterModule_L88F13L134T14_AXI4MasterModule_L117F17L119T27_Case = '1' ) then
NextState_fsm <= (0 => AXI4MasterModule_L87F9L135T10_AXI4MasterModule_L88F13L134T14_AXI4MasterModule_L118F37T54_Expr, others => '0');
elsif ( AXI4MasterModule_L87F9L135T10_AXI4MasterModule_L88F13L134T14_AXI4MasterModule_L120F17L125T27_Case = '1' ) then
if ( Inputs_S2M_B_BVALID = '1' ) then
NextState_fsm <= AXI4MasterModule_L87F9L135T10_AXI4MasterModule_L88F13L134T14_AXI4MasterModule_L122F21L124T22_AXI4MasterModule_L123F41T58_Expr;
end if;
elsif ( AXI4MasterModule_L87F9L135T10_AXI4MasterModule_L88F13L134T14_AXI4MasterModule_L126F17L128T27_Case = '1' ) then
NextState_fsm <= (0 => AXI4MasterModule_L87F9L135T10_AXI4MasterModule_L88F13L134T14_AXI4MasterModule_L127F37T54_Expr, others => '0');
else
NextState_fsm <= (0 => AXI4MasterModule_L87F9L135T10_AXI4MasterModule_L88F13L134T14_AXI4MasterModule_L130F17L132T18_AXI4MasterModule_L131F37T54_Expr, others => '0');
end if;
end process;
process(AXADDR, AXI4MasterModule_L53F39T60_Expr, AXI4MasterModule_L55F31T61_Expr, AXI4MasterModule_L55F31T95_Expr, AXI4MasterModule_L55F65T95_Expr, AXI4MasterModule_L62F27T58_Expr, AXI4MasterModule_L66F26T56_Expr, AXI4MasterModule_L71F27T58_Expr, AXI4MasterModule_L78F26T57_Expr, AXI4MasterModule_L82F26T56_Expr, Inputs_RE, Inputs_WE, internalInvalidInputs, RE, S2M_AR_ARREADY, S2M_AW_AWREADY, S2M_B_BID, S2M_B_BRESP, S2M_B_BUSER, S2M_B_BVALID, S2M_R_RDATA0, S2M_R_RDATA1, S2M_R_RDATA2, S2M_R_RDATA3, S2M_R_RID, S2M_R_RLAST, S2M_R_RRESP, S2M_R_RUSER, S2M_R_RVALID, S2M_W_WREADY, State_ARDATA, State_AWDATA, State_AXADDR, State_fsm, State_WSTRB, WDATA0, WDATA1, WDATA2, WDATA3, WE, WSTRB)
begin
AXI4MasterModule_L87F9L135T10_AXI4MasterModule_L88F13L134T14_AXI4MasterModule_L90F17L92T27_CaseLhs <= signed(resize(unsigned(State_fsm), AXI4MasterModule_L87F9L135T10_AXI4MasterModule_L88F13L134T14_AXI4MasterModule_L90F17L92T27_CaseLhs'length));
AXI4MasterModule_L87F9L135T10_AXI4MasterModule_L88F13L134T14_AXI4MasterModule_L90F17L92T27_CaseRhs <= (0 => AXI4MasterModule_L87F9L135T10_AXI4MasterModule_L88F13L134T14_AXI4MasterModule_L90F22T40_Expr, others => '0');
AXI4MasterModule_L87F9L135T10_AXI4MasterModule_L88F13L134T14_AXI4MasterModule_L93F17L109T27_CaseLhs <= signed(resize(unsigned(State_fsm), AXI4MasterModule_L87F9L135T10_AXI4MasterModule_L88F13L134T14_AXI4MasterModule_L93F17L109T27_CaseLhs'length));
AXI4MasterModule_L87F9L135T10_AXI4MasterModule_L88F13L134T14_AXI4MasterModule_L93F17L109T27_CaseRhs <= (0 => AXI4MasterModule_L87F9L135T10_AXI4MasterModule_L88F13L134T14_AXI4MasterModule_L93F22T39_Expr, others => '0');
AXI4MasterModule_L87F9L135T10_AXI4MasterModule_L88F13L134T14_AXI4MasterModule_L110F17L116T27_CaseLhs <= signed(resize(unsigned(State_fsm), AXI4MasterModule_L87F9L135T10_AXI4MasterModule_L88F13L134T14_AXI4MasterModule_L110F17L116T27_CaseLhs'length));
AXI4MasterModule_L87F9L135T10_AXI4MasterModule_L88F13L134T14_AXI4MasterModule_L110F17L116T27_CaseRhs <= signed(resize(unsigned(AXI4MasterModule_L87F9L135T10_AXI4MasterModule_L88F13L134T14_AXI4MasterModule_L110F22T40_Expr), AXI4MasterModule_L87F9L135T10_AXI4MasterModule_L88F13L134T14_AXI4MasterModule_L110F17L116T27_CaseRhs'length));
AXI4MasterModule_L87F9L135T10_AXI4MasterModule_L88F13L134T14_AXI4MasterModule_L117F17L119T27_CaseLhs <= signed(resize(unsigned(State_fsm), AXI4MasterModule_L87F9L135T10_AXI4MasterModule_L88F13L134T14_AXI4MasterModule_L117F17L119T27_CaseLhs'length));
AXI4MasterModule_L87F9L135T10_AXI4MasterModule_L88F13L134T14_AXI4MasterModule_L117F17L119T27_CaseRhs <= signed(resize(unsigned(AXI4MasterModule_L87F9L135T10_AXI4MasterModule_L88F13L134T14_AXI4MasterModule_L117F22T39_Expr), AXI4MasterModule_L87F9L135T10_AXI4MasterModule_L88F13L134T14_AXI4MasterModule_L117F17L119T27_CaseRhs'length));
AXI4MasterModule_L87F9L135T10_AXI4MasterModule_L88F13L134T14_AXI4MasterModule_L120F17L125T27_CaseLhs <= signed(resize(unsigned(State_fsm), AXI4MasterModule_L87F9L135T10_AXI4MasterModule_L88F13L134T14_AXI4MasterModule_L120F17L125T27_CaseLhs'length));
AXI4MasterModule_L87F9L135T10_AXI4MasterModule_L88F13L134T14_AXI4MasterModule_L120F17L125T27_CaseRhs <= signed(resize(unsigned(AXI4MasterModule_L87F9L135T10_AXI4MasterModule_L88F13L134T14_AXI4MasterModule_L120F22T40_Expr), AXI4MasterModule_L87F9L135T10_AXI4MasterModule_L88F13L134T14_AXI4MasterModule_L120F17L125T27_CaseRhs'length));
AXI4MasterModule_L87F9L135T10_AXI4MasterModule_L88F13L134T14_AXI4MasterModule_L126F17L128T27_CaseLhs <= signed(resize(unsigned(State_fsm), AXI4MasterModule_L87F9L135T10_AXI4MasterModule_L88F13L134T14_AXI4MasterModule_L126F17L128T27_CaseLhs'length));
AXI4MasterModule_L87F9L135T10_AXI4MasterModule_L88F13L134T14_AXI4MasterModule_L126F17L128T27_CaseRhs <= signed(resize(unsigned(AXI4MasterModule_L87F9L135T10_AXI4MasterModule_L88F13L134T14_AXI4MasterModule_L126F22T39_Expr), AXI4MasterModule_L87F9L135T10_AXI4MasterModule_L88F13L134T14_AXI4MasterModule_L126F17L128T27_CaseRhs'length));
AXI4MasterModule_L55F31T61_ExprLhs <= signed(resize(unsigned(State_fsm), AXI4MasterModule_L55F31T61_ExprLhs'length));
AXI4MasterModule_L55F31T61_ExprRhs <= signed(resize(unsigned(AXI4MasterModule_L55F44T61_Expr), AXI4MasterModule_L55F31T61_ExprRhs'length));
AXI4MasterModule_L55F65T95_ExprLhs <= signed(resize(unsigned(State_fsm), AXI4MasterModule_L55F65T95_ExprLhs'length));
AXI4MasterModule_L55F65T95_ExprRhs <= signed(resize(unsigned(AXI4MasterModule_L55F78T95_Expr), AXI4MasterModule_L55F65T95_ExprRhs'length));
AXI4MasterModule_L62F27T58_ExprLhs <= signed(resize(unsigned(State_fsm), AXI4MasterModule_L62F27T58_ExprLhs'length));
AXI4MasterModule_L62F27T58_ExprRhs <= signed(resize(unsigned(AXI4MasterModule_L62F40T58_Expr), AXI4MasterModule_L62F27T58_ExprRhs'length));
AXI4MasterModule_L66F26T56_ExprLhs <= signed(resize(unsigned(State_fsm), AXI4MasterModule_L66F26T56_ExprLhs'length));
AXI4MasterModule_L66F26T56_ExprRhs <= signed(resize(unsigned(AXI4MasterModule_L66F39T56_Expr), AXI4MasterModule_L66F26T56_ExprRhs'length));
AXI4MasterModule_L71F27T58_ExprLhs <= signed(resize(unsigned(State_fsm), AXI4MasterModule_L71F27T58_ExprLhs'length));
AXI4MasterModule_L71F27T58_ExprRhs <= signed(resize(unsigned(AXI4MasterModule_L71F40T58_Expr), AXI4MasterModule_L71F27T58_ExprRhs'length));
AXI4MasterModule_L78F26T57_ExprLhs <= signed(resize(unsigned(State_fsm), AXI4MasterModule_L78F26T57_ExprLhs'length));
AXI4MasterModule_L78F26T57_ExprRhs <= signed(resize(unsigned(AXI4MasterModule_L78F39T57_Expr), AXI4MasterModule_L78F26T57_ExprRhs'length));
AXI4MasterModule_L82F26T56_ExprLhs <= signed(resize(unsigned(State_fsm), AXI4MasterModule_L82F26T56_ExprLhs'length));
AXI4MasterModule_L82F26T56_ExprRhs <= signed(resize(unsigned(AXI4MasterModule_L82F39T56_Expr), AXI4MasterModule_L82F26T56_ExprRhs'length));
AXI4MasterModule_L53F39T60_Expr_1 <= Inputs_RE;
AXI4MasterModule_L53F39T60_Expr_2 <= Inputs_WE;
AXI4MasterModule_L87F9L135T10_AXI4MasterModule_L88F13L134T14_AXI4MasterModule_L94F25T47_Expr_1 <= internalInvalidInputs;
AXI4MasterModule_L55F31T95_Expr_1 <= AXI4MasterModule_L55F31T61_Expr;
AXI4MasterModule_L55F31T95_Expr_2 <= AXI4MasterModule_L55F65T95_Expr;
Inputs_S2M_AR_ARREADY <= S2M_AR_ARREADY;
Inputs_S2M_AW_AWREADY <= S2M_AW_AWREADY;
Inputs_S2M_B_BID <= S2M_B_BID;
Inputs_S2M_B_BRESP <= S2M_B_BRESP;
Inputs_S2M_B_BUSER <= S2M_B_BUSER;
Inputs_S2M_B_BVALID <= S2M_B_BVALID;
Inputs_S2M_R_RID <= S2M_R_RID;
Inputs_S2M_R_RDATA0 <= S2M_R_RDATA0;
Inputs_S2M_R_RDATA1 <= S2M_R_RDATA1;
Inputs_S2M_R_RDATA2 <= S2M_R_RDATA2;
Inputs_S2M_R_RDATA3 <= S2M_R_RDATA3;
Inputs_S2M_R_RRESP <= S2M_R_RRESP;
Inputs_S2M_R_RLAST <= S2M_R_RLAST;
Inputs_S2M_R_RUSER <= S2M_R_RUSER;
Inputs_S2M_R_RVALID <= S2M_R_RVALID;
Inputs_S2M_W_WREADY <= S2M_W_WREADY;
Inputs_AXADDR <= AXADDR;
Inputs_RE <= RE;
Inputs_WE <= WE;
Inputs_WDATA0 <= WDATA0;
Inputs_WDATA1 <= WDATA1;
Inputs_WDATA2 <= WDATA2;
Inputs_WDATA3 <= WDATA3;
Inputs_WSTRB <= WSTRB;
internalInvalidInputs <= AXI4MasterModule_L53F39T60_Expr;
InvalidInputs <= internalInvalidInputs;
OutACK <= AXI4MasterModule_L55F31T95_Expr;
RDATA0 <= State_ARDATA(0);
RDATA1 <= State_ARDATA(1);
RDATA2 <= State_ARDATA(2);
RDATA3 <= State_ARDATA(3);
M2S_AR_ARID <= (1 => AXI4_M_AR_L15F28T29_Expr, others => '0');
M2S_AR_ARADDR <= State_AXADDR;
M2S_AR_ARLEN <= (1 => AXI4_M_AR_L17F29T30_Expr, others => '0');
M2S_AR_ARSIZE <= unsigned(resize(unsigned(AXI4_M_AR_L18F33T43_Expr), M2S_AR_ARSIZE'length));
M2S_AR_ARBURST <= (1 => AXI4_M_AR_L19F35T48_Expr, others => '0');
M2S_AR_ARLOCK <= (1 => AXI4_M_AR_L20F33T47_Expr, others => '0');
M2S_AR_ARCACHE <= (1 => AXI4_M_AR_L21F35T63_Expr, others => '0');
M2S_AR_ARPROT <= unsigned(resize(unsigned(AXI4_M_AR_L22F33T66_Expr), M2S_AR_ARPROT'length));
M2S_AR_ARQOS <= (1 => AXI4_M_AR_L23F31T44_Expr, others => '0');
M2S_AR_ARREGION <= (1 => AXI4_M_AR_L24F32T33_Expr, others => '0');
M2S_AR_ARUSER <= (1 => AXI4_M_AR_L25F30T31_Expr, others => '0');
M2S_AR_ARVALID <= AXI4MasterModule_L62F27T58_Expr;
M2S_R_RREADY <= AXI4MasterModule_L66F26T56_Expr;
M2S_AW_AWID <= (1 => AXI4_M_AW_L14F28T29_Expr, others => '0');
M2S_AW_AWADDR <= State_AXADDR;
M2S_AW_AWLEN <= (1 => AXI4_M_AW_L16F29T30_Expr, others => '0');
M2S_AW_AWSIZE <= unsigned(resize(unsigned(AXI4_M_AW_L17F33T43_Expr), M2S_AW_AWSIZE'length));
M2S_AW_AWBURST <= (1 => AXI4_M_AW_L18F35T48_Expr, others => '0');
M2S_AW_AWLOCK <= (1 => AXI4_M_AW_L19F33T47_Expr, others => '0');
M2S_AW_AWCACHE <= (1 => AXI4_M_AW_L20F35T63_Expr, others => '0');
M2S_AW_AWPROT <= unsigned(resize(unsigned(AXI4_M_AW_L21F33T66_Expr), M2S_AW_AWPROT'length));
M2S_AW_AWQOS <= (1 => AXI4_M_AW_L22F31T44_Expr, others => '0');
M2S_AW_AWREGION <= (1 => AXI4_M_AW_L23F32T33_Expr, others => '0');
M2S_AW_AWUSER <= (1 => AXI4_M_AW_L24F30T31_Expr, others => '0');
M2S_AW_AWVALID <= AXI4MasterModule_L71F27T58_Expr;
M2S_W_WID <= (1 => AXI4MasterModule_L75F23T24_Expr, others => '0');
M2S_W_WDATA0 <= State_AWDATA(0);
M2S_W_WDATA1 <= State_AWDATA(1);
M2S_W_WDATA2 <= State_AWDATA(2);
M2S_W_WDATA3 <= State_AWDATA(3);
M2S_W_WSTRB <= State_WSTRB;
M2S_W_WLAST <= AXI4_M_W_L17F29T33_Expr;
M2S_W_WUSER <= (1 => AXI4_M_W_L18F29T30_Expr, others => '0');
M2S_W_WVALID <= AXI4MasterModule_L78F26T57_Expr;
M2S_B_BREADY <= AXI4MasterModule_L82F26T56_Expr;
end process;
-- [BEGIN USER ARCHITECTURE]
-- [END USER ARCHITECTURE]
end architecture;
