-- PLEASE READ THIS, IT MAY SAVE YOU SOME TIME AND MONEY, THANK YOU!
-- * This file was generated by Quokka FPGA Toolkit.
-- * Generated code is your property, do whatever you want with it
-- * Place custom code between [BEGIN USER ***] and [END USER ***].
-- * CAUTION: All code outside of [USER] scope is subject to regeneration.
-- * Bad things happen sometimes in developer's life,
--   it is recommended to use source control management software (e.g. git, bzr etc) to keep your custom code safe'n'sound.
-- * Internal structure of code is subject to change.
--   You can use some of signals in custom code, but most likely they will not exist in future (e.g. will get shorter or gone completely)
-- * Please send your feedback, comments, improvement ideas etc. to evmuryshkin@gmail.com
-- * Visit https://github.com/EvgenyMuryshkin/QuokkaEvaluation to access latest version of playground
-- 
-- DISCLAIMER:
--   Code comes AS-IS, it is your responsibility to make sure it is working as expected
--   no responsibility will be taken for any loss or damage caused by use of Quokka toolkit.
-- 
-- System configuration name is AXI4MasterSlaveTestModule_TopLevel_AXI4MasterSlaveTestModule_s, clock frequency is 1Hz, Embedded
library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;

use work.Quokka.all;

entity AXI4MasterSlaveTestModule_TopLevel_AXI4MasterSlaveTestModule_s is
    port
    (
-- [BEGIN USER PORTS]
-- [END USER PORTS]

BoardSignals : in  BoardSignalsType;
M2S_AR_ARID : in  unsigned(8 downto 1);
M2S_AR_ARADDR : in  unsigned(32 downto 1);
M2S_AR_ARLEN : in  unsigned(8 downto 1);
M2S_AR_ARSIZE : in  unsigned(3 downto 1);
M2S_AR_ARBURST : in  unsigned(2 downto 1);
M2S_AR_ARLOCK : in  unsigned(2 downto 1);
M2S_AR_ARCACHE : in  unsigned(4 downto 1);
M2S_AR_ARPROT : in  unsigned(3 downto 1);
M2S_AR_ARQOS : in  unsigned(4 downto 1);
M2S_AR_ARREGION : in  unsigned(8 downto 1);
M2S_AR_ARUSER : in  unsigned(8 downto 1);
M2S_AR_ARVALID : in  std_logic;
M2S_R_RREADY : in  std_logic;
M2S_AW_AWID : in  unsigned(8 downto 1);
M2S_AW_AWADDR : in  unsigned(32 downto 1);
M2S_AW_AWLEN : in  unsigned(8 downto 1);
M2S_AW_AWSIZE : in  unsigned(3 downto 1);
M2S_AW_AWBURST : in  unsigned(2 downto 1);
M2S_AW_AWLOCK : in  unsigned(2 downto 1);
M2S_AW_AWCACHE : in  unsigned(4 downto 1);
M2S_AW_AWPROT : in  unsigned(3 downto 1);
M2S_AW_AWQOS : in  unsigned(4 downto 1);
M2S_AW_AWREGION : in  unsigned(8 downto 1);
M2S_AW_AWUSER : in  unsigned(8 downto 1);
M2S_AW_AWVALID : in  std_logic;
M2S_W_WID : in  unsigned(8 downto 1);
M2S_W_WDATA0 : in  unsigned(8 downto 1);
M2S_W_WDATA1 : in  unsigned(8 downto 1);
M2S_W_WDATA2 : in  unsigned(8 downto 1);
M2S_W_WDATA3 : in  unsigned(8 downto 1);
M2S_W_WSTRB : in  unsigned(4 downto 1);
M2S_W_WLAST : in  std_logic;
M2S_W_WUSER : in  unsigned(8 downto 1);
M2S_W_WVALID : in  std_logic;
M2S_B_BREADY : in  std_logic;
WE : in  std_logic;
WDATA0 : in  unsigned(8 downto 1);
WDATA1 : in  unsigned(8 downto 1);
WDATA2 : in  unsigned(8 downto 1);
WDATA3 : in  unsigned(8 downto 1);
OutData0 : out  unsigned(8 downto 1);
OutData1 : out  unsigned(8 downto 1);
OutData2 : out  unsigned(8 downto 1);
OutData3 : out  unsigned(8 downto 1);
OutACK : out  std_logic;
S2M_AR_ARREADY : out  std_logic;
S2M_AW_AWREADY : out  std_logic;
S2M_B_BID : out  unsigned(8 downto 1);
S2M_B_BRESP : out  unsigned(2 downto 1);
S2M_B_BUSER : out  unsigned(8 downto 1);
S2M_B_BVALID : out  std_logic;
S2M_R_RID : out  unsigned(8 downto 1);
S2M_R_RDATA0 : out  unsigned(8 downto 1);
S2M_R_RDATA1 : out  unsigned(8 downto 1);
S2M_R_RDATA2 : out  unsigned(8 downto 1);
S2M_R_RDATA3 : out  unsigned(8 downto 1);
S2M_R_RRESP : out  unsigned(2 downto 1);
S2M_R_RLAST : out  std_logic;
S2M_R_RUSER : out  unsigned(8 downto 1);
S2M_R_RVALID : out  std_logic;
S2M_W_WREADY : out  std_logic
    );
end entity;

-- FSM summary
-- Packages
architecture rtl of AXI4MasterSlaveTestModule_TopLevel_AXI4MasterSlaveTestModule_s is
-- [BEGIN USER SIGNALS]
-- [END USER SIGNALS]
constant HiSignal : std_logic := '1';
constant LoSignal : std_logic := '0';
constant Zero : std_logic := '0';
constant One : std_logic := '1';
constant true : std_logic := '1';
constant false : std_logic := '0';
constant size : unsigned(1 downto 0)  := "10";
constant AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L86F13L112T14_AXI4RegisterModule_L88F22T43_Expr : std_logic := '0';
constant AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L86F13L112T14_AXI4RegisterModule_L89F17L91T18_AXI4RegisterModule_L90F41T61_Expr : std_logic := '1';
constant AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L86F13L112T14_AXI4RegisterModule_L93F22T42_Expr : std_logic := '1';
constant AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L86F13L112T14_AXI4RegisterModule_L94F17L99T18_AXI4RegisterModule_L96F21L98T22_AXI4RegisterModule_L97F45T63_Expr : unsigned(1 downto 0)  := "10";
constant AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L86F13L112T14_AXI4RegisterModule_L101F22T40_Expr : unsigned(1 downto 0)  := "10";
constant AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L86F13L112T14_AXI4RegisterModule_L102F17L105T18_AXI4RegisterModule_L104F45T65_Expr : std_logic := '1';
constant AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L86F13L112T14_AXI4RegisterModule_L108F17L110T18_AXI4RegisterModule_L109F41T61_Expr : std_logic := '1';
constant AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L114F13L163T14_AXI4RegisterModule_L116F22T44_Expr : std_logic := '0';
constant AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L114F13L163T14_AXI4RegisterModule_L117F17L119T18_AXI4RegisterModule_L118F42T63_Expr : std_logic := '1';
constant AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L114F13L163T14_AXI4RegisterModule_L121F22T43_Expr : std_logic := '1';
constant AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L114F13L163T14_AXI4RegisterModule_L122F17L150T18_AXI4RegisterModule_L124F42T62_Expr : std_logic := '1';
constant AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L114F13L163T14_AXI4RegisterModule_L122F17L150T18_AXI4RegisterModule_L125F21L149T22_AXI4RegisterModule_L130F50T69_Expr : unsigned(1 downto 0)  := "10";
constant AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L114F13L163T14_AXI4RegisterModule_L122F17L150T18_AXI4RegisterModule_L125F21L149T22_AXI4RegisterModule_L135F25L140T26_AXI4RegisterModule_L136F29L139T30_0_w : std_logic := '0';
constant AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L114F13L163T14_AXI4RegisterModule_L122F17L150T18_AXI4RegisterModule_L125F21L149T22_AXI4RegisterModule_L135F25L140T26_AXI4RegisterModule_L136F29L139T30_1_w : std_logic := '1';
constant AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L114F13L163T14_AXI4RegisterModule_L122F17L150T18_AXI4RegisterModule_L125F21L149T22_AXI4RegisterModule_L135F25L140T26_AXI4RegisterModule_L136F29L139T30_2_w : unsigned(1 downto 0)  := "10";
constant AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L114F13L163T14_AXI4RegisterModule_L122F17L150T18_AXI4RegisterModule_L125F21L149T22_AXI4RegisterModule_L135F25L140T26_AXI4RegisterModule_L136F29L139T30_3_w : unsigned(1 downto 0)  := "11";
constant AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L114F13L163T14_AXI4RegisterModule_L122F17L150T18_AXI4RegisterModule_L125F21L149T22_AXI4RegisterModule_L142F25L148T26_AXI4RegisterModule_L143F29L147T30_0_w : std_logic := '0';
constant AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L114F13L163T14_AXI4RegisterModule_L122F17L150T18_AXI4RegisterModule_L125F21L149T22_AXI4RegisterModule_L142F25L148T26_AXI4RegisterModule_L143F29L147T30_1_w : std_logic := '1';
constant AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L114F13L163T14_AXI4RegisterModule_L122F17L150T18_AXI4RegisterModule_L125F21L149T22_AXI4RegisterModule_L142F25L148T26_AXI4RegisterModule_L143F29L147T30_2_w : unsigned(1 downto 0)  := "10";
constant AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L114F13L163T14_AXI4RegisterModule_L122F17L150T18_AXI4RegisterModule_L125F21L149T22_AXI4RegisterModule_L142F25L148T26_AXI4RegisterModule_L143F29L147T30_3_w : unsigned(1 downto 0)  := "11";
constant AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L114F13L163T14_AXI4RegisterModule_L152F22T41_Expr : unsigned(1 downto 0)  := "10";
constant AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L114F13L163T14_AXI4RegisterModule_L153F17L156T18_AXI4RegisterModule_L155F46T67_Expr : std_logic := '1';
constant AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L114F13L163T14_AXI4RegisterModule_L159F17L161T18_AXI4RegisterModule_L160F42T63_Expr : std_logic := '1';
constant AXI4RegisterModule_L46F48T68_Expr : std_logic := '1';
constant AXI4RegisterModule_L52F44T64_Expr : std_logic := '1';
constant AXI4RegisterModule_L58F43T61_Expr : unsigned(1 downto 0)  := "10";
constant AXI4RegisterModule_L60F25T37_Expr : std_logic := '0';
constant AXI4_S_R_L18F29T33_Expr : std_logic := '1';
constant AXI4RegisterModule_L64F45T66_Expr : std_logic := '1';
constant AXI4RegisterModule_L68F44T65_Expr : std_logic := '1';
constant AXI4RegisterModule_L73F25T37_Expr : std_logic := '0';
constant AXI4RegisterModule_L75F44T63_Expr : unsigned(1 downto 0)  := "10";
signal Inputs_M2S_AR_ARID : unsigned(7 downto 0) := (others => '0');
signal Inputs_M2S_AR_ARADDR : unsigned(31 downto 0) := (others => '0');
signal Inputs_M2S_AR_ARLEN : unsigned(7 downto 0) := (others => '0');
signal Inputs_M2S_AR_ARSIZE : unsigned(2 downto 0) := (others => '0');
signal Inputs_M2S_AR_ARBURST : unsigned(1 downto 0) := (others => '0');
signal Inputs_M2S_AR_ARLOCK : unsigned(1 downto 0) := (others => '0');
signal Inputs_M2S_AR_ARCACHE : unsigned(3 downto 0) := (others => '0');
signal Inputs_M2S_AR_ARPROT : unsigned(2 downto 0) := (others => '0');
signal Inputs_M2S_AR_ARQOS : unsigned(3 downto 0) := (others => '0');
signal Inputs_M2S_AR_ARREGION : unsigned(7 downto 0) := (others => '0');
signal Inputs_M2S_AR_ARUSER : unsigned(7 downto 0) := (others => '0');
signal Inputs_M2S_AR_ARVALID : std_logic := '0';
signal Inputs_M2S_R_RREADY : std_logic := '0';
signal Inputs_M2S_AW_AWID : unsigned(7 downto 0) := (others => '0');
signal Inputs_M2S_AW_AWADDR : unsigned(31 downto 0) := (others => '0');
signal Inputs_M2S_AW_AWLEN : unsigned(7 downto 0) := (others => '0');
signal Inputs_M2S_AW_AWSIZE : unsigned(2 downto 0) := (others => '0');
signal Inputs_M2S_AW_AWBURST : unsigned(1 downto 0) := (others => '0');
signal Inputs_M2S_AW_AWLOCK : unsigned(1 downto 0) := (others => '0');
signal Inputs_M2S_AW_AWCACHE : unsigned(3 downto 0) := (others => '0');
signal Inputs_M2S_AW_AWPROT : unsigned(2 downto 0) := (others => '0');
signal Inputs_M2S_AW_AWQOS : unsigned(3 downto 0) := (others => '0');
signal Inputs_M2S_AW_AWREGION : unsigned(7 downto 0) := (others => '0');
signal Inputs_M2S_AW_AWUSER : unsigned(7 downto 0) := (others => '0');
signal Inputs_M2S_AW_AWVALID : std_logic := '0';
signal Inputs_M2S_W_WID : unsigned(7 downto 0) := (others => '0');
signal Inputs_M2S_W_WDATA0 : unsigned(7 downto 0) := (others => '0');
signal Inputs_M2S_W_WDATA1 : unsigned(7 downto 0) := (others => '0');
signal Inputs_M2S_W_WDATA2 : unsigned(7 downto 0) := (others => '0');
signal Inputs_M2S_W_WDATA3 : unsigned(7 downto 0) := (others => '0');
signal Inputs_M2S_W_WSTRB : unsigned(3 downto 0) := (others => '0');
signal Inputs_M2S_W_WLAST : std_logic := '0';
signal Inputs_M2S_W_WUSER : unsigned(7 downto 0) := (others => '0');
signal Inputs_M2S_W_WVALID : std_logic := '0';
signal Inputs_M2S_B_BREADY : std_logic := '0';
signal Inputs_WE : std_logic := '0';
signal Inputs_WDATA0 : unsigned(7 downto 0) := (others => '0');
signal Inputs_WDATA1 : unsigned(7 downto 0) := (others => '0');
signal Inputs_WDATA2 : unsigned(7 downto 0) := (others => '0');
signal Inputs_WDATA3 : unsigned(7 downto 0) := (others => '0');
signal NextState_readFSM : unsigned(1 downto 0) := (others => '0');
signal NextState_writeFSM : unsigned(1 downto 0) := (others => '0');
signal AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L114F13L163T14_AXI4RegisterModule_L122F17L150T18_AXI4RegisterModule_L125F21L149T22_axiWE : std_logic := '0';
signal AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L114F13L163T14_AXI4RegisterModule_L122F17L150T18_AXI4RegisterModule_L125F21L149T22_AXI4RegisterModule_L142F25L148T26_AXI4RegisterModule_L143F29L147T30_0_AXI4RegisterModule_L144F29L147T30_AXI4RegisterModule_L145F37T58_Index : std_logic := '0';
signal AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L114F13L163T14_AXI4RegisterModule_L122F17L150T18_AXI4RegisterModule_L125F21L149T22_AXI4RegisterModule_L142F25L148T26_AXI4RegisterModule_L143F29L147T30_1_AXI4RegisterModule_L144F29L147T30_AXI4RegisterModule_L145F37T58_Index : std_logic := '0';
signal AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L114F13L163T14_AXI4RegisterModule_L122F17L150T18_AXI4RegisterModule_L125F21L149T22_AXI4RegisterModule_L142F25L148T26_AXI4RegisterModule_L143F29L147T30_2_AXI4RegisterModule_L144F29L147T30_AXI4RegisterModule_L145F37T58_Index : std_logic := '0';
signal AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L114F13L163T14_AXI4RegisterModule_L122F17L150T18_AXI4RegisterModule_L125F21L149T22_AXI4RegisterModule_L142F25L148T26_AXI4RegisterModule_L143F29L147T30_3_AXI4RegisterModule_L144F29L147T30_AXI4RegisterModule_L145F37T58_Index : std_logic := '0';
signal State_bytesDefault : unsigned(7 downto 0)  := "00000000";
signal State_readFSM : unsigned(1 downto 0)  := "00";
constant State_readFSMDefault : unsigned(1 downto 0)  := "00";
signal State_writeFSM : unsigned(1 downto 0)  := "00";
constant State_writeFSMDefault : unsigned(1 downto 0)  := "00";
signal AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L114F13L163T14_AXI4RegisterModule_L122F17L150T18_AXI4RegisterModule_L125F21L149T22_AXI4RegisterModule_L126F37T81_Expr : std_logic := '0';
signal AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L114F13L163T14_AXI4RegisterModule_L122F17L150T18_AXI4RegisterModule_L125F21L149T22_AXI4RegisterModule_L126F37T81_Expr_1 : std_logic := '0';
signal AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L114F13L163T14_AXI4RegisterModule_L122F17L150T18_AXI4RegisterModule_L125F21L149T22_AXI4RegisterModule_L126F37T81_Expr_2 : std_logic := '0';
signal AXI4RegisterModule_L46F31T81_Expr : std_logic := '0';
signal AXI4RegisterModule_L46F31T81_Expr_1 : std_logic := '0';
signal AXI4RegisterModule_L46F31T81_Expr_2 : std_logic := '0';
signal AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L86F13L112T14_AXI4RegisterModule_L88F17L92T23_Case : std_logic := '0';
signal AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L86F13L112T14_AXI4RegisterModule_L88F17L92T23_CaseLhs : signed(2 downto 0)  := "000";
signal AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L86F13L112T14_AXI4RegisterModule_L88F17L92T23_CaseRhs : signed(2 downto 0)  := "000";
signal AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L86F13L112T14_AXI4RegisterModule_L93F17L100T23_Case : std_logic := '0';
signal AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L86F13L112T14_AXI4RegisterModule_L93F17L100T23_CaseLhs : signed(2 downto 0)  := "000";
signal AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L86F13L112T14_AXI4RegisterModule_L93F17L100T23_CaseRhs : signed(2 downto 0)  := "000";
signal AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L86F13L112T14_AXI4RegisterModule_L101F17L106T23_Case : std_logic := '0';
signal AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L86F13L112T14_AXI4RegisterModule_L101F17L106T23_CaseLhs : signed(2 downto 0)  := "000";
signal AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L86F13L112T14_AXI4RegisterModule_L101F17L106T23_CaseRhs : signed(2 downto 0)  := "000";
signal AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L114F13L163T14_AXI4RegisterModule_L116F17L120T23_Case : std_logic := '0';
signal AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L114F13L163T14_AXI4RegisterModule_L116F17L120T23_CaseLhs : signed(2 downto 0)  := "000";
signal AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L114F13L163T14_AXI4RegisterModule_L116F17L120T23_CaseRhs : signed(2 downto 0)  := "000";
signal AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L114F13L163T14_AXI4RegisterModule_L121F17L151T23_Case : std_logic := '0';
signal AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L114F13L163T14_AXI4RegisterModule_L121F17L151T23_CaseLhs : signed(2 downto 0)  := "000";
signal AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L114F13L163T14_AXI4RegisterModule_L121F17L151T23_CaseRhs : signed(2 downto 0)  := "000";
signal AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L114F13L163T14_AXI4RegisterModule_L122F17L150T18_AXI4RegisterModule_L124F25T62_Expr : std_logic := '0';
signal AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L114F13L163T14_AXI4RegisterModule_L122F17L150T18_AXI4RegisterModule_L124F25T62_ExprLhs : signed(2 downto 0)  := "000";
signal AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L114F13L163T14_AXI4RegisterModule_L122F17L150T18_AXI4RegisterModule_L124F25T62_ExprRhs : signed(2 downto 0)  := "000";
signal AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L114F13L163T14_AXI4RegisterModule_L152F17L157T23_Case : std_logic := '0';
signal AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L114F13L163T14_AXI4RegisterModule_L152F17L157T23_CaseLhs : signed(2 downto 0)  := "000";
signal AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L114F13L163T14_AXI4RegisterModule_L152F17L157T23_CaseRhs : signed(2 downto 0)  := "000";
signal AXI4RegisterModule_L46F31T68_Expr : std_logic := '0';
signal AXI4RegisterModule_L46F31T68_ExprLhs : signed(2 downto 0)  := "000";
signal AXI4RegisterModule_L46F31T68_ExprRhs : signed(2 downto 0)  := "000";
signal AXI4RegisterModule_L52F27T64_Expr : std_logic := '0';
signal AXI4RegisterModule_L52F27T64_ExprLhs : signed(2 downto 0)  := "000";
signal AXI4RegisterModule_L52F27T64_ExprRhs : signed(2 downto 0)  := "000";
signal AXI4RegisterModule_L58F26T61_Expr : std_logic := '0';
signal AXI4RegisterModule_L58F26T61_ExprLhs : signed(2 downto 0)  := "000";
signal AXI4RegisterModule_L58F26T61_ExprRhs : signed(2 downto 0)  := "000";
signal AXI4RegisterModule_L64F27T66_Expr : std_logic := '0';
signal AXI4RegisterModule_L64F27T66_ExprLhs : signed(2 downto 0)  := "000";
signal AXI4RegisterModule_L64F27T66_ExprRhs : signed(2 downto 0)  := "000";
signal AXI4RegisterModule_L68F26T65_Expr : std_logic := '0';
signal AXI4RegisterModule_L68F26T65_ExprLhs : signed(2 downto 0)  := "000";
signal AXI4RegisterModule_L68F26T65_ExprRhs : signed(2 downto 0)  := "000";
signal AXI4RegisterModule_L75F26T63_Expr : std_logic := '0';
signal AXI4RegisterModule_L75F26T63_ExprLhs : signed(2 downto 0)  := "000";
signal AXI4RegisterModule_L75F26T63_ExprRhs : signed(2 downto 0)  := "000";
type State_bytesArray is array(0 to 3) of unsigned(7 downto 0);
signal State_bytes : State_bytesArray := (others => (others => '0'));
type NextState_bytesArray is array(0 to 3) of unsigned(7 downto 0);
signal NextState_bytes : NextState_bytesArray := (others => (others => '0'));
begin
process (BoardSignals, NextState_readFSM, NextState_writeFSM)
begin
if rising_edge(BoardSignals.Clock) then
if ( BoardSignals.Reset = '1' ) then
State_readFSM <= State_readFSMDefault;
State_writeFSM <= State_writeFSMDefault;
else
State_readFSM <= NextState_readFSM;
State_writeFSM <= NextState_writeFSM;
end if;
end if;
end process;
process (BoardSignals, NextState_bytes, State_bytesDefault)
begin
if rising_edge(BoardSignals.Clock) then
if ( BoardSignals.Reset = '1' ) then
for State_bytes_Iterator in 0 to 3 loop
State_bytes(State_bytes_Iterator) <= State_bytesDefault;
end loop;
else
for State_bytes_Iterator in 0 to 3 loop
State_bytes(State_bytes_Iterator) <= NextState_bytes(State_bytes_Iterator);
end loop;
end if;
end if;
end process;
    AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L86F13L112T14_AXI4RegisterModule_L88F17L92T23_Case <= '1' when (signed(resize(AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L86F13L112T14_AXI4RegisterModule_L88F17L92T23_CaseLhs, AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L86F13L112T14_AXI4RegisterModule_L88F17L92T23_CaseLhs'length + 1)) = signed(resize(AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L86F13L112T14_AXI4RegisterModule_L88F17L92T23_CaseRhs, AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L86F13L112T14_AXI4RegisterModule_L88F17L92T23_CaseRhs'length + 1))) else '0';
    AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L86F13L112T14_AXI4RegisterModule_L93F17L100T23_Case <= '1' when (signed(resize(AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L86F13L112T14_AXI4RegisterModule_L93F17L100T23_CaseLhs, AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L86F13L112T14_AXI4RegisterModule_L93F17L100T23_CaseLhs'length + 1)) = signed(resize(AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L86F13L112T14_AXI4RegisterModule_L93F17L100T23_CaseRhs, AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L86F13L112T14_AXI4RegisterModule_L93F17L100T23_CaseRhs'length + 1))) else '0';
    AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L86F13L112T14_AXI4RegisterModule_L101F17L106T23_Case <= '1' when (signed(resize(AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L86F13L112T14_AXI4RegisterModule_L101F17L106T23_CaseLhs, AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L86F13L112T14_AXI4RegisterModule_L101F17L106T23_CaseLhs'length + 1)) = signed(resize(AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L86F13L112T14_AXI4RegisterModule_L101F17L106T23_CaseRhs, AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L86F13L112T14_AXI4RegisterModule_L101F17L106T23_CaseRhs'length + 1))) else '0';
    AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L114F13L163T14_AXI4RegisterModule_L116F17L120T23_Case <= '1' when (signed(resize(AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L114F13L163T14_AXI4RegisterModule_L116F17L120T23_CaseLhs, AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L114F13L163T14_AXI4RegisterModule_L116F17L120T23_CaseLhs'length + 1)) = signed(resize(AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L114F13L163T14_AXI4RegisterModule_L116F17L120T23_CaseRhs, AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L114F13L163T14_AXI4RegisterModule_L116F17L120T23_CaseRhs'length + 1))) else '0';
    AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L114F13L163T14_AXI4RegisterModule_L121F17L151T23_Case <= '1' when (signed(resize(AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L114F13L163T14_AXI4RegisterModule_L121F17L151T23_CaseLhs, AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L114F13L163T14_AXI4RegisterModule_L121F17L151T23_CaseLhs'length + 1)) = signed(resize(AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L114F13L163T14_AXI4RegisterModule_L121F17L151T23_CaseRhs, AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L114F13L163T14_AXI4RegisterModule_L121F17L151T23_CaseRhs'length + 1))) else '0';
    AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L114F13L163T14_AXI4RegisterModule_L122F17L150T18_AXI4RegisterModule_L124F25T62_Expr <= '1' when (signed(resize(AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L114F13L163T14_AXI4RegisterModule_L122F17L150T18_AXI4RegisterModule_L124F25T62_ExprLhs, AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L114F13L163T14_AXI4RegisterModule_L122F17L150T18_AXI4RegisterModule_L124F25T62_ExprLhs'length + 1)) = signed(resize(AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L114F13L163T14_AXI4RegisterModule_L122F17L150T18_AXI4RegisterModule_L124F25T62_ExprRhs, AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L114F13L163T14_AXI4RegisterModule_L122F17L150T18_AXI4RegisterModule_L124F25T62_ExprRhs'length + 1))) else '0';
    AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L114F13L163T14_AXI4RegisterModule_L152F17L157T23_Case <= '1' when (signed(resize(AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L114F13L163T14_AXI4RegisterModule_L152F17L157T23_CaseLhs, AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L114F13L163T14_AXI4RegisterModule_L152F17L157T23_CaseLhs'length + 1)) = signed(resize(AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L114F13L163T14_AXI4RegisterModule_L152F17L157T23_CaseRhs, AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L114F13L163T14_AXI4RegisterModule_L152F17L157T23_CaseRhs'length + 1))) else '0';
    AXI4RegisterModule_L46F31T68_Expr <= '1' when (signed(resize(AXI4RegisterModule_L46F31T68_ExprLhs, AXI4RegisterModule_L46F31T68_ExprLhs'length + 1)) = signed(resize(AXI4RegisterModule_L46F31T68_ExprRhs, AXI4RegisterModule_L46F31T68_ExprRhs'length + 1))) else '0';
    AXI4RegisterModule_L52F27T64_Expr <= '1' when (signed(resize(AXI4RegisterModule_L52F27T64_ExprLhs, AXI4RegisterModule_L52F27T64_ExprLhs'length + 1)) = signed(resize(AXI4RegisterModule_L52F27T64_ExprRhs, AXI4RegisterModule_L52F27T64_ExprRhs'length + 1))) else '0';
    AXI4RegisterModule_L58F26T61_Expr <= '1' when (signed(resize(AXI4RegisterModule_L58F26T61_ExprLhs, AXI4RegisterModule_L58F26T61_ExprLhs'length + 1)) = signed(resize(AXI4RegisterModule_L58F26T61_ExprRhs, AXI4RegisterModule_L58F26T61_ExprRhs'length + 1))) else '0';
    AXI4RegisterModule_L64F27T66_Expr <= '1' when (signed(resize(AXI4RegisterModule_L64F27T66_ExprLhs, AXI4RegisterModule_L64F27T66_ExprLhs'length + 1)) = signed(resize(AXI4RegisterModule_L64F27T66_ExprRhs, AXI4RegisterModule_L64F27T66_ExprRhs'length + 1))) else '0';
    AXI4RegisterModule_L68F26T65_Expr <= '1' when (signed(resize(AXI4RegisterModule_L68F26T65_ExprLhs, AXI4RegisterModule_L68F26T65_ExprLhs'length + 1)) = signed(resize(AXI4RegisterModule_L68F26T65_ExprRhs, AXI4RegisterModule_L68F26T65_ExprRhs'length + 1))) else '0';
    AXI4RegisterModule_L75F26T63_Expr <= '1' when (signed(resize(AXI4RegisterModule_L75F26T63_ExprLhs, AXI4RegisterModule_L75F26T63_ExprLhs'length + 1)) = signed(resize(AXI4RegisterModule_L75F26T63_ExprRhs, AXI4RegisterModule_L75F26T63_ExprRhs'length + 1))) else '0';

process(AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L114F13L163T14_AXI4RegisterModule_L122F17L150T18_AXI4RegisterModule_L125F21L149T22_AXI4RegisterModule_L126F37T81_Expr_1, AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L114F13L163T14_AXI4RegisterModule_L122F17L150T18_AXI4RegisterModule_L125F21L149T22_AXI4RegisterModule_L126F37T81_Expr_2)
begin
AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L114F13L163T14_AXI4RegisterModule_L122F17L150T18_AXI4RegisterModule_L125F21L149T22_AXI4RegisterModule_L126F37T81_Expr <= AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L114F13L163T14_AXI4RegisterModule_L122F17L150T18_AXI4RegisterModule_L125F21L149T22_AXI4RegisterModule_L126F37T81_Expr_1 AND AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L114F13L163T14_AXI4RegisterModule_L122F17L150T18_AXI4RegisterModule_L125F21L149T22_AXI4RegisterModule_L126F37T81_Expr_2;

    end process;

process(AXI4RegisterModule_L46F31T81_Expr_1, AXI4RegisterModule_L46F31T81_Expr_2)
begin
AXI4RegisterModule_L46F31T81_Expr <= AXI4RegisterModule_L46F31T81_Expr_1 AND AXI4RegisterModule_L46F31T81_Expr_2;

    end process;
process(AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L114F13L163T14_AXI4RegisterModule_L116F17L120T23_Case, AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L114F13L163T14_AXI4RegisterModule_L121F17L151T23_Case, AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L114F13L163T14_AXI4RegisterModule_L122F17L150T18_AXI4RegisterModule_L124F25T62_Expr, AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L114F13L163T14_AXI4RegisterModule_L122F17L150T18_AXI4RegisterModule_L125F21L149T22_AXI4RegisterModule_L126F37T81_Expr, AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L114F13L163T14_AXI4RegisterModule_L122F17L150T18_AXI4RegisterModule_L125F21L149T22_AXI4RegisterModule_L142F25L148T26_AXI4RegisterModule_L143F29L147T30_0_AXI4RegisterModule_L144F29L147T30_AXI4RegisterModule_L145F37T58_Index, AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L114F13L163T14_AXI4RegisterModule_L122F17L150T18_AXI4RegisterModule_L125F21L149T22_AXI4RegisterModule_L142F25L148T26_AXI4RegisterModule_L143F29L147T30_1_AXI4RegisterModule_L144F29L147T30_AXI4RegisterModule_L145F37T58_Index, AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L114F13L163T14_AXI4RegisterModule_L122F17L150T18_AXI4RegisterModule_L125F21L149T22_AXI4RegisterModule_L142F25L148T26_AXI4RegisterModule_L143F29L147T30_2_AXI4RegisterModule_L144F29L147T30_AXI4RegisterModule_L145F37T58_Index, AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L114F13L163T14_AXI4RegisterModule_L122F17L150T18_AXI4RegisterModule_L125F21L149T22_AXI4RegisterModule_L142F25L148T26_AXI4RegisterModule_L143F29L147T30_3_AXI4RegisterModule_L144F29L147T30_AXI4RegisterModule_L145F37T58_Index, AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L114F13L163T14_AXI4RegisterModule_L122F17L150T18_AXI4RegisterModule_L125F21L149T22_axiWE, AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L114F13L163T14_AXI4RegisterModule_L152F17L157T23_Case, AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L86F13L112T14_AXI4RegisterModule_L101F17L106T23_Case, AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L86F13L112T14_AXI4RegisterModule_L88F17L92T23_Case, AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L86F13L112T14_AXI4RegisterModule_L93F17L100T23_Case, Inputs_M2S_AR_ARVALID, Inputs_M2S_B_BREADY, Inputs_M2S_R_RREADY, Inputs_M2S_W_WDATA0, Inputs_M2S_W_WDATA1, Inputs_M2S_W_WDATA2, Inputs_M2S_W_WDATA3, Inputs_WDATA0, Inputs_WDATA1, Inputs_WDATA2, Inputs_WDATA3, Inputs_WE, State_bytes, State_readFSM, State_writeFSM)
begin
for NextState_bytes_Iterator in 0 to 3 loop
NextState_bytes(NextState_bytes_Iterator) <= State_bytes(NextState_bytes_Iterator);
end loop;
NextState_readFSM <= State_readFSM;
NextState_writeFSM <= State_writeFSM;
AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L114F13L163T14_AXI4RegisterModule_L122F17L150T18_AXI4RegisterModule_L125F21L149T22_axiWE <= Zero;
if ( AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L86F13L112T14_AXI4RegisterModule_L88F17L92T23_Case = '1' ) then
NextState_readFSM <= (0 => AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L86F13L112T14_AXI4RegisterModule_L89F17L91T18_AXI4RegisterModule_L90F41T61_Expr, others => '0');
elsif ( AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L86F13L112T14_AXI4RegisterModule_L93F17L100T23_Case = '1' ) then
if ( Inputs_M2S_AR_ARVALID = '1' ) then
NextState_readFSM <= AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L86F13L112T14_AXI4RegisterModule_L94F17L99T18_AXI4RegisterModule_L96F21L98T22_AXI4RegisterModule_L97F45T63_Expr;
end if;
elsif ( AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L86F13L112T14_AXI4RegisterModule_L101F17L106T23_Case = '1' ) then
if ( Inputs_M2S_R_RREADY = '1' ) then
NextState_readFSM <= (0 => AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L86F13L112T14_AXI4RegisterModule_L102F17L105T18_AXI4RegisterModule_L104F45T65_Expr, others => '0');
end if;
else
NextState_readFSM <= (0 => AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L86F13L112T14_AXI4RegisterModule_L108F17L110T18_AXI4RegisterModule_L109F41T61_Expr, others => '0');
end if;
if ( AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L114F13L163T14_AXI4RegisterModule_L116F17L120T23_Case = '1' ) then
NextState_writeFSM <= (0 => AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L114F13L163T14_AXI4RegisterModule_L117F17L119T18_AXI4RegisterModule_L118F42T63_Expr, others => '0');
elsif ( AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L114F13L163T14_AXI4RegisterModule_L121F17L151T23_Case = '1' ) then
if ( AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L114F13L163T14_AXI4RegisterModule_L122F17L150T18_AXI4RegisterModule_L124F25T62_Expr = '1' ) then
AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L114F13L163T14_AXI4RegisterModule_L122F17L150T18_AXI4RegisterModule_L125F21L149T22_axiWE <= AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L114F13L163T14_AXI4RegisterModule_L122F17L150T18_AXI4RegisterModule_L125F21L149T22_AXI4RegisterModule_L126F37T81_Expr;
if ( AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L114F13L163T14_AXI4RegisterModule_L122F17L150T18_AXI4RegisterModule_L125F21L149T22_axiWE = '1' ) then
NextState_writeFSM <= AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L114F13L163T14_AXI4RegisterModule_L122F17L150T18_AXI4RegisterModule_L125F21L149T22_AXI4RegisterModule_L130F50T69_Expr;
end if;
if ( Inputs_WE = '1' ) then
NextState_bytes(bit_to_integer(AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L114F13L163T14_AXI4RegisterModule_L122F17L150T18_AXI4RegisterModule_L125F21L149T22_AXI4RegisterModule_L135F25L140T26_AXI4RegisterModule_L136F29L139T30_0_w)) <= Inputs_WDATA0;
NextState_bytes(bit_to_integer(AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L114F13L163T14_AXI4RegisterModule_L122F17L150T18_AXI4RegisterModule_L125F21L149T22_AXI4RegisterModule_L135F25L140T26_AXI4RegisterModule_L136F29L139T30_1_w)) <= Inputs_WDATA1;
NextState_bytes(TO_INTEGER(UNSIGNED(AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L114F13L163T14_AXI4RegisterModule_L122F17L150T18_AXI4RegisterModule_L125F21L149T22_AXI4RegisterModule_L135F25L140T26_AXI4RegisterModule_L136F29L139T30_2_w))) <= Inputs_WDATA2;
NextState_bytes(TO_INTEGER(UNSIGNED(AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L114F13L163T14_AXI4RegisterModule_L122F17L150T18_AXI4RegisterModule_L125F21L149T22_AXI4RegisterModule_L135F25L140T26_AXI4RegisterModule_L136F29L139T30_3_w))) <= Inputs_WDATA3;
elsif ( AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L114F13L163T14_AXI4RegisterModule_L122F17L150T18_AXI4RegisterModule_L125F21L149T22_axiWE = '1' ) then
if ( AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L114F13L163T14_AXI4RegisterModule_L122F17L150T18_AXI4RegisterModule_L125F21L149T22_AXI4RegisterModule_L142F25L148T26_AXI4RegisterModule_L143F29L147T30_0_AXI4RegisterModule_L144F29L147T30_AXI4RegisterModule_L145F37T58_Index = '1' ) then
NextState_bytes(bit_to_integer(AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L114F13L163T14_AXI4RegisterModule_L122F17L150T18_AXI4RegisterModule_L125F21L149T22_AXI4RegisterModule_L142F25L148T26_AXI4RegisterModule_L143F29L147T30_0_w)) <= Inputs_M2S_W_WDATA0;
end if;
if ( AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L114F13L163T14_AXI4RegisterModule_L122F17L150T18_AXI4RegisterModule_L125F21L149T22_AXI4RegisterModule_L142F25L148T26_AXI4RegisterModule_L143F29L147T30_1_AXI4RegisterModule_L144F29L147T30_AXI4RegisterModule_L145F37T58_Index = '1' ) then
NextState_bytes(bit_to_integer(AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L114F13L163T14_AXI4RegisterModule_L122F17L150T18_AXI4RegisterModule_L125F21L149T22_AXI4RegisterModule_L142F25L148T26_AXI4RegisterModule_L143F29L147T30_1_w)) <= Inputs_M2S_W_WDATA1;
end if;
if ( AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L114F13L163T14_AXI4RegisterModule_L122F17L150T18_AXI4RegisterModule_L125F21L149T22_AXI4RegisterModule_L142F25L148T26_AXI4RegisterModule_L143F29L147T30_2_AXI4RegisterModule_L144F29L147T30_AXI4RegisterModule_L145F37T58_Index = '1' ) then
NextState_bytes(TO_INTEGER(UNSIGNED(AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L114F13L163T14_AXI4RegisterModule_L122F17L150T18_AXI4RegisterModule_L125F21L149T22_AXI4RegisterModule_L142F25L148T26_AXI4RegisterModule_L143F29L147T30_2_w))) <= Inputs_M2S_W_WDATA2;
end if;
if ( AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L114F13L163T14_AXI4RegisterModule_L122F17L150T18_AXI4RegisterModule_L125F21L149T22_AXI4RegisterModule_L142F25L148T26_AXI4RegisterModule_L143F29L147T30_3_AXI4RegisterModule_L144F29L147T30_AXI4RegisterModule_L145F37T58_Index = '1' ) then
NextState_bytes(TO_INTEGER(UNSIGNED(AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L114F13L163T14_AXI4RegisterModule_L122F17L150T18_AXI4RegisterModule_L125F21L149T22_AXI4RegisterModule_L142F25L148T26_AXI4RegisterModule_L143F29L147T30_3_w))) <= Inputs_M2S_W_WDATA3;
end if;
end if;
end if;
elsif ( AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L114F13L163T14_AXI4RegisterModule_L152F17L157T23_Case = '1' ) then
if ( Inputs_M2S_B_BREADY = '1' ) then
NextState_writeFSM <= (0 => AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L114F13L163T14_AXI4RegisterModule_L153F17L156T18_AXI4RegisterModule_L155F46T67_Expr, others => '0');
end if;
else
NextState_writeFSM <= (0 => AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L114F13L163T14_AXI4RegisterModule_L159F17L161T18_AXI4RegisterModule_L160F42T63_Expr, others => '0');
end if;
end process;
process(AXI4RegisterModule_L46F31T68_Expr, AXI4RegisterModule_L46F31T81_Expr, AXI4RegisterModule_L52F27T64_Expr, AXI4RegisterModule_L58F26T61_Expr, AXI4RegisterModule_L64F27T66_Expr, AXI4RegisterModule_L68F26T65_Expr, AXI4RegisterModule_L75F26T63_Expr, Inputs_M2S_AR_ARID, Inputs_M2S_AR_ARUSER, Inputs_M2S_AW_AWVALID, Inputs_M2S_W_WID, Inputs_M2S_W_WSTRB, Inputs_M2S_W_WUSER, Inputs_M2S_W_WVALID, Inputs_WE, M2S_AR_ARADDR, M2S_AR_ARBURST, M2S_AR_ARCACHE, M2S_AR_ARID, M2S_AR_ARLEN, M2S_AR_ARLOCK, M2S_AR_ARPROT, M2S_AR_ARQOS, M2S_AR_ARREGION, M2S_AR_ARSIZE, M2S_AR_ARUSER, M2S_AR_ARVALID, M2S_AW_AWADDR, M2S_AW_AWBURST, M2S_AW_AWCACHE, M2S_AW_AWID, M2S_AW_AWLEN, M2S_AW_AWLOCK, M2S_AW_AWPROT, M2S_AW_AWQOS, M2S_AW_AWREGION, M2S_AW_AWSIZE, M2S_AW_AWUSER, M2S_AW_AWVALID, M2S_B_BREADY, M2S_R_RREADY, M2S_W_WDATA0, M2S_W_WDATA1, M2S_W_WDATA2, M2S_W_WDATA3, M2S_W_WID, M2S_W_WLAST, M2S_W_WSTRB, M2S_W_WUSER, M2S_W_WVALID, State_bytes, State_readFSM, State_writeFSM, WDATA0, WDATA1, WDATA2, WDATA3, WE)
begin
AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L86F13L112T14_AXI4RegisterModule_L88F17L92T23_CaseLhs <= signed(resize(unsigned(State_readFSM), AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L86F13L112T14_AXI4RegisterModule_L88F17L92T23_CaseLhs'length));
AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L86F13L112T14_AXI4RegisterModule_L88F17L92T23_CaseRhs <= (0 => AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L86F13L112T14_AXI4RegisterModule_L88F22T43_Expr, others => '0');
AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L86F13L112T14_AXI4RegisterModule_L93F17L100T23_CaseLhs <= signed(resize(unsigned(State_readFSM), AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L86F13L112T14_AXI4RegisterModule_L93F17L100T23_CaseLhs'length));
AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L86F13L112T14_AXI4RegisterModule_L93F17L100T23_CaseRhs <= (0 => AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L86F13L112T14_AXI4RegisterModule_L93F22T42_Expr, others => '0');
AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L86F13L112T14_AXI4RegisterModule_L101F17L106T23_CaseLhs <= signed(resize(unsigned(State_readFSM), AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L86F13L112T14_AXI4RegisterModule_L101F17L106T23_CaseLhs'length));
AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L86F13L112T14_AXI4RegisterModule_L101F17L106T23_CaseRhs <= signed(resize(unsigned(AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L86F13L112T14_AXI4RegisterModule_L101F22T40_Expr), AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L86F13L112T14_AXI4RegisterModule_L101F17L106T23_CaseRhs'length));
AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L114F13L163T14_AXI4RegisterModule_L116F17L120T23_CaseLhs <= signed(resize(unsigned(State_writeFSM), AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L114F13L163T14_AXI4RegisterModule_L116F17L120T23_CaseLhs'length));
AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L114F13L163T14_AXI4RegisterModule_L116F17L120T23_CaseRhs <= (0 => AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L114F13L163T14_AXI4RegisterModule_L116F22T44_Expr, others => '0');
AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L114F13L163T14_AXI4RegisterModule_L121F17L151T23_CaseLhs <= signed(resize(unsigned(State_writeFSM), AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L114F13L163T14_AXI4RegisterModule_L121F17L151T23_CaseLhs'length));
AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L114F13L163T14_AXI4RegisterModule_L121F17L151T23_CaseRhs <= (0 => AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L114F13L163T14_AXI4RegisterModule_L121F22T43_Expr, others => '0');
AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L114F13L163T14_AXI4RegisterModule_L122F17L150T18_AXI4RegisterModule_L124F25T62_ExprLhs <= signed(resize(unsigned(State_readFSM), AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L114F13L163T14_AXI4RegisterModule_L122F17L150T18_AXI4RegisterModule_L124F25T62_ExprLhs'length));
AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L114F13L163T14_AXI4RegisterModule_L122F17L150T18_AXI4RegisterModule_L124F25T62_ExprRhs <= (0 => AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L114F13L163T14_AXI4RegisterModule_L122F17L150T18_AXI4RegisterModule_L124F42T62_Expr, others => '0');
AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L114F13L163T14_AXI4RegisterModule_L152F17L157T23_CaseLhs <= signed(resize(unsigned(State_writeFSM), AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L114F13L163T14_AXI4RegisterModule_L152F17L157T23_CaseLhs'length));
AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L114F13L163T14_AXI4RegisterModule_L152F17L157T23_CaseRhs <= signed(resize(unsigned(AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L114F13L163T14_AXI4RegisterModule_L152F22T41_Expr), AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L114F13L163T14_AXI4RegisterModule_L152F17L157T23_CaseRhs'length));
AXI4RegisterModule_L46F31T68_ExprLhs <= signed(resize(unsigned(State_readFSM), AXI4RegisterModule_L46F31T68_ExprLhs'length));
AXI4RegisterModule_L46F31T68_ExprRhs <= (0 => AXI4RegisterModule_L46F48T68_Expr, others => '0');
AXI4RegisterModule_L52F27T64_ExprLhs <= signed(resize(unsigned(State_readFSM), AXI4RegisterModule_L52F27T64_ExprLhs'length));
AXI4RegisterModule_L52F27T64_ExprRhs <= (0 => AXI4RegisterModule_L52F44T64_Expr, others => '0');
AXI4RegisterModule_L58F26T61_ExprLhs <= signed(resize(unsigned(State_readFSM), AXI4RegisterModule_L58F26T61_ExprLhs'length));
AXI4RegisterModule_L58F26T61_ExprRhs <= signed(resize(unsigned(AXI4RegisterModule_L58F43T61_Expr), AXI4RegisterModule_L58F26T61_ExprRhs'length));
AXI4RegisterModule_L64F27T66_ExprLhs <= signed(resize(unsigned(State_writeFSM), AXI4RegisterModule_L64F27T66_ExprLhs'length));
AXI4RegisterModule_L64F27T66_ExprRhs <= (0 => AXI4RegisterModule_L64F45T66_Expr, others => '0');
AXI4RegisterModule_L68F26T65_ExprLhs <= signed(resize(unsigned(State_writeFSM), AXI4RegisterModule_L68F26T65_ExprLhs'length));
AXI4RegisterModule_L68F26T65_ExprRhs <= (0 => AXI4RegisterModule_L68F44T65_Expr, others => '0');
AXI4RegisterModule_L75F26T63_ExprLhs <= signed(resize(unsigned(State_writeFSM), AXI4RegisterModule_L75F26T63_ExprLhs'length));
AXI4RegisterModule_L75F26T63_ExprRhs <= signed(resize(unsigned(AXI4RegisterModule_L75F44T63_Expr), AXI4RegisterModule_L75F26T63_ExprRhs'length));
AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L114F13L163T14_AXI4RegisterModule_L122F17L150T18_AXI4RegisterModule_L125F21L149T22_AXI4RegisterModule_L126F37T81_Expr_1 <= Inputs_M2S_AW_AWVALID;
AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L114F13L163T14_AXI4RegisterModule_L122F17L150T18_AXI4RegisterModule_L125F21L149T22_AXI4RegisterModule_L126F37T81_Expr_2 <= Inputs_M2S_W_WVALID;
AXI4RegisterModule_L46F31T81_Expr_1 <= AXI4RegisterModule_L46F31T68_Expr;
AXI4RegisterModule_L46F31T81_Expr_2 <= Inputs_WE;
Inputs_M2S_AR_ARID <= M2S_AR_ARID;
Inputs_M2S_AR_ARADDR <= M2S_AR_ARADDR;
Inputs_M2S_AR_ARLEN <= M2S_AR_ARLEN;
Inputs_M2S_AR_ARSIZE <= M2S_AR_ARSIZE;
Inputs_M2S_AR_ARBURST <= M2S_AR_ARBURST;
Inputs_M2S_AR_ARLOCK <= M2S_AR_ARLOCK;
Inputs_M2S_AR_ARCACHE <= M2S_AR_ARCACHE;
Inputs_M2S_AR_ARPROT <= M2S_AR_ARPROT;
Inputs_M2S_AR_ARQOS <= M2S_AR_ARQOS;
Inputs_M2S_AR_ARREGION <= M2S_AR_ARREGION;
Inputs_M2S_AR_ARUSER <= M2S_AR_ARUSER;
Inputs_M2S_AR_ARVALID <= M2S_AR_ARVALID;
Inputs_M2S_R_RREADY <= M2S_R_RREADY;
Inputs_M2S_AW_AWID <= M2S_AW_AWID;
Inputs_M2S_AW_AWADDR <= M2S_AW_AWADDR;
Inputs_M2S_AW_AWLEN <= M2S_AW_AWLEN;
Inputs_M2S_AW_AWSIZE <= M2S_AW_AWSIZE;
Inputs_M2S_AW_AWBURST <= M2S_AW_AWBURST;
Inputs_M2S_AW_AWLOCK <= M2S_AW_AWLOCK;
Inputs_M2S_AW_AWCACHE <= M2S_AW_AWCACHE;
Inputs_M2S_AW_AWPROT <= M2S_AW_AWPROT;
Inputs_M2S_AW_AWQOS <= M2S_AW_AWQOS;
Inputs_M2S_AW_AWREGION <= M2S_AW_AWREGION;
Inputs_M2S_AW_AWUSER <= M2S_AW_AWUSER;
Inputs_M2S_AW_AWVALID <= M2S_AW_AWVALID;
Inputs_M2S_W_WID <= M2S_W_WID;
Inputs_M2S_W_WDATA0 <= M2S_W_WDATA0;
Inputs_M2S_W_WDATA1 <= M2S_W_WDATA1;
Inputs_M2S_W_WDATA2 <= M2S_W_WDATA2;
Inputs_M2S_W_WDATA3 <= M2S_W_WDATA3;
Inputs_M2S_W_WSTRB <= M2S_W_WSTRB;
Inputs_M2S_W_WLAST <= M2S_W_WLAST;
Inputs_M2S_W_WUSER <= M2S_W_WUSER;
Inputs_M2S_W_WVALID <= M2S_W_WVALID;
Inputs_M2S_B_BREADY <= M2S_B_BREADY;
Inputs_WE <= WE;
Inputs_WDATA0 <= WDATA0;
Inputs_WDATA1 <= WDATA1;
Inputs_WDATA2 <= WDATA2;
Inputs_WDATA3 <= WDATA3;
AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L114F13L163T14_AXI4RegisterModule_L122F17L150T18_AXI4RegisterModule_L125F21L149T22_AXI4RegisterModule_L142F25L148T26_AXI4RegisterModule_L143F29L147T30_0_AXI4RegisterModule_L144F29L147T30_AXI4RegisterModule_L145F37T58_Index <= Inputs_M2S_W_WSTRB(bit_to_integer(AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L114F13L163T14_AXI4RegisterModule_L122F17L150T18_AXI4RegisterModule_L125F21L149T22_AXI4RegisterModule_L142F25L148T26_AXI4RegisterModule_L143F29L147T30_0_w));
AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L114F13L163T14_AXI4RegisterModule_L122F17L150T18_AXI4RegisterModule_L125F21L149T22_AXI4RegisterModule_L142F25L148T26_AXI4RegisterModule_L143F29L147T30_1_AXI4RegisterModule_L144F29L147T30_AXI4RegisterModule_L145F37T58_Index <= Inputs_M2S_W_WSTRB(bit_to_integer(AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L114F13L163T14_AXI4RegisterModule_L122F17L150T18_AXI4RegisterModule_L125F21L149T22_AXI4RegisterModule_L142F25L148T26_AXI4RegisterModule_L143F29L147T30_1_w));
AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L114F13L163T14_AXI4RegisterModule_L122F17L150T18_AXI4RegisterModule_L125F21L149T22_AXI4RegisterModule_L142F25L148T26_AXI4RegisterModule_L143F29L147T30_2_AXI4RegisterModule_L144F29L147T30_AXI4RegisterModule_L145F37T58_Index <= Inputs_M2S_W_WSTRB(TO_INTEGER(AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L114F13L163T14_AXI4RegisterModule_L122F17L150T18_AXI4RegisterModule_L125F21L149T22_AXI4RegisterModule_L142F25L148T26_AXI4RegisterModule_L143F29L147T30_2_w));
AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L114F13L163T14_AXI4RegisterModule_L122F17L150T18_AXI4RegisterModule_L125F21L149T22_AXI4RegisterModule_L142F25L148T26_AXI4RegisterModule_L143F29L147T30_3_AXI4RegisterModule_L144F29L147T30_AXI4RegisterModule_L145F37T58_Index <= Inputs_M2S_W_WSTRB(TO_INTEGER(AXI4RegisterModule_L80F9L164T10_AXI4RegisterModule_L114F13L163T14_AXI4RegisterModule_L122F17L150T18_AXI4RegisterModule_L125F21L149T22_AXI4RegisterModule_L142F25L148T26_AXI4RegisterModule_L143F29L147T30_3_w));
OutData0 <= State_bytes(0);
OutData1 <= State_bytes(1);
OutData2 <= State_bytes(2);
OutData3 <= State_bytes(3);
OutACK <= AXI4RegisterModule_L46F31T81_Expr;
S2M_AR_ARREADY <= AXI4RegisterModule_L52F27T64_Expr;
S2M_AW_AWREADY <= AXI4RegisterModule_L64F27T66_Expr;
S2M_B_BID <= Inputs_M2S_W_WID;
S2M_B_BRESP <= (1 => AXI4RegisterModule_L73F25T37_Expr, others => '0');
S2M_B_BUSER <= Inputs_M2S_W_WUSER;
S2M_B_BVALID <= AXI4RegisterModule_L75F26T63_Expr;
S2M_R_RID <= Inputs_M2S_AR_ARID;
S2M_R_RDATA0 <= State_bytes(0);
S2M_R_RDATA1 <= State_bytes(1);
S2M_R_RDATA2 <= State_bytes(2);
S2M_R_RDATA3 <= State_bytes(3);
S2M_R_RRESP <= (1 => AXI4RegisterModule_L60F25T37_Expr, others => '0');
S2M_R_RLAST <= AXI4_S_R_L18F29T33_Expr;
S2M_R_RUSER <= Inputs_M2S_AR_ARUSER;
S2M_R_RVALID <= AXI4RegisterModule_L58F26T61_Expr;
S2M_W_WREADY <= AXI4RegisterModule_L68F26T65_Expr;
end process;
-- [BEGIN USER ARCHITECTURE]
-- [END USER ARCHITECTURE]
end architecture;
