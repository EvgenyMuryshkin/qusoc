-- PLEASE READ THIS, IT MAY SAVE YOU SOME TIME AND MONEY, THANK YOU!
-- * This file was generated by Quokka FPGA Toolkit.
-- * Generated code is your property, do whatever you want with it
-- * Place custom code between [BEGIN USER ***] and [END USER ***].
-- * CAUTION: All code outside of [USER] scope is subject to regeneration.
-- * Bad things happen sometimes in developer's life,
--   it is recommended to use source control management software (e.g. git, bzr etc) to keep your custom code safe'n'sound.
-- * Internal structure of code is subject to change.
--   You can use some of signals in custom code, but most likely they will not exist in future (e.g. will get shorter or gone completely)
-- * Please send your feedback, comments, improvement ideas etc. to evmuryshkin@gmail.com
-- * Visit https://github.com/EvgenyMuryshkin/QuokkaEvaluation to access latest version of playground
--
-- DISCLAIMER:
--   Code comes AS-IS, it is your responsibility to make sure it is working as expected
--   no responsibility will be taken for any loss or damage caused by use of Quokka toolkit.
--
-- System configuration name is StructCompositionParentModule_TopLevel_child, clock frequency is 1Hz, Embedded
library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;
use work.Quokka.all;
entity StructCompositionParentModule_TopLevel_child is
	port
	(
		-- [BEGIN USER PORTS]
		-- [END USER PORTS]
		iValue : in unsigned (75 downto 0);
		Output : out unsigned (75 downto 0)
	);
end entity;
-- FSM summary
-- Packages
architecture rtl of StructCompositionParentModule_TopLevel_child is
	-- [BEGIN USER SIGNALS]
	-- [END USER SIGNALS]
	constant HiSignal : std_logic := '1';
	constant LoSignal : std_logic := '0';
	constant Zero : std_logic := '0';
	constant One : std_logic := '1';
	-- true is a reserved name, declaration skipped
	-- false is a reserved name, declaration skipped
	signal Inputs_iValue_intValue : unsigned(15 downto 0) := (others => '0');
	signal Inputs_iValue_l1_byteValue : unsigned(7 downto 0) := (others => '0');
	signal Inputs_iValue_l1_l2_bitArray : unsigned(1 downto 0) := (others => '0');
	type Inputs_iValue_l1_l2_boolValueArray is array (0 to 1) of std_logic;
	signal Inputs_iValue_l1_l2_boolValue : Inputs_iValue_l1_l2_boolValueArray := (others => '0');
	type Inputs_iValue_l1_l2ArrayArray is array (0 to 1) of unsigned (3 downto 0);
	signal Inputs_iValue_l1_l2Array : Inputs_iValue_l1_l2ArrayArray := (others => (others => '0'));
	type Inputs_iValue_l1ArrayArray is array (0 to 1) of unsigned (19 downto 0);
	signal Inputs_iValue_l1Array : Inputs_iValue_l1ArrayArray := (others => (others => '0'));
begin
	process (iValue)
	begin
		Inputs_iValue_l1Array(1) <= iValue(75 downto 56);
		Inputs_iValue_l1Array(0) <= iValue(55 downto 36);
		Inputs_iValue_l1_l2Array(1) <= iValue(35 downto 32);
		Inputs_iValue_l1_l2Array(0) <= iValue(31 downto 28);
		Inputs_iValue_l1_l2_boolValue(1) <= iValue(27);
		Inputs_iValue_l1_l2_boolValue(0) <= iValue(26);
		Inputs_iValue_l1_l2_bitArray <= iValue(25 downto 24);
		Inputs_iValue_l1_byteValue <= iValue(23 downto 16);
		Inputs_iValue_intValue <= iValue(15 downto 0);
		Output <= iValue;
	end process;
	-- [BEGIN USER ARCHITECTURE]
	-- [END USER ARCHITECTURE]
end architecture;
