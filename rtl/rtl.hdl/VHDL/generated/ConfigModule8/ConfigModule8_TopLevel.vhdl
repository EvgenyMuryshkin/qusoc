-- PLEASE READ THIS, IT MAY SAVE YOU SOME TIME AND MONEY, THANK YOU!
-- * This file was generated by Quokka FPGA Toolkit.
-- * Generated code is your property, do whatever you want with it
-- * Place custom code between [BEGIN USER ***] and [END USER ***].
-- * CAUTION: All code outside of [USER] scope is subject to regeneration.
-- * Bad things happen sometimes in developer's life,
--   it is recommended to use source control management software (e.g. git, bzr etc) to keep your custom code safe'n'sound.
-- * Internal structure of code is subject to change.
--   You can use some of signals in custom code, but most likely they will not exist in future (e.g. will get shorter or gone completely)
-- * Please send your feedback, comments, improvement ideas etc. to evmuryshkin@gmail.com
-- * Visit https://github.com/EvgenyMuryshkin/QuokkaEvaluation to access latest version of playground
--
-- DISCLAIMER:
--   Code comes AS-IS, it is your responsibility to make sure it is working as expected
--   no responsibility will be taken for any loss or damage caused by use of Quokka toolkit.
--
-- System configuration name is ConfigModule8_TopLevel, clock frequency is 1Hz, Top-level
library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;
use work.Quokka.all;
entity ConfigModule8_TopLevel is
	port
	(
		-- [BEGIN USER PORTS]
		-- [END USER PORTS]
		i1 : in unsigned (7 downto 0);
		i2 : in unsigned (7 downto 0);
		oResult : out unsigned (8 downto 0)
	);
end entity;
-- FSM summary
-- Packages
architecture rtl of ConfigModule8_TopLevel is
	-- [BEGIN USER SIGNALS]
	-- [END USER SIGNALS]
	constant HiSignal : std_logic := '1';
	constant LoSignal : std_logic := '0';
	constant Zero : std_logic := '0';
	constant One : std_logic := '1';
	constant true : std_logic := '1';
	constant false : std_logic := '0';
	constant configParams_inputWidth : unsigned(3 downto 0) := "1000";
	constant configParams_resultWidth : unsigned(3 downto 0) := "1001";
	signal Inputs_i1 : unsigned(7 downto 0) := (others => '0');
	signal Inputs_i2 : unsigned(7 downto 0) := (others => '0');
	signal ConfigModule_L39F39T95_Index : unsigned(8 downto 0) := (others => '0');
	signal ConfigModule_L39F40T61_Expr : unsigned(9 downto 0) := "0000000000";
	signal ConfigModule_L39F40T61_Expr_1 : signed(9 downto 0) := "0000000000";
	signal ConfigModule_L39F40T61_Expr_2 : signed(9 downto 0) := "0000000000";
begin
	process (ConfigModule_L39F40T61_Expr_1, ConfigModule_L39F40T61_Expr_2)
	begin
		ConfigModule_L39F40T61_Expr <= resize(unsigned(signed(resize(ConfigModule_L39F40T61_Expr_1, ConfigModule_L39F40T61_Expr_1'length + 1)) + signed(resize(ConfigModule_L39F40T61_Expr_2, ConfigModule_L39F40T61_Expr_2'length + 1))), ConfigModule_L39F40T61_Expr'length);
	end process;
	process (ConfigModule_L39F39T95_Index, ConfigModule_L39F40T61_Expr, i1, i2, Inputs_i1, Inputs_i2)
	begin
		ConfigModule_L39F40T61_Expr_1(9 downto 8) <= (others => '0');
		ConfigModule_L39F40T61_Expr_1(7 downto 0) <= signed(Inputs_i1);
		ConfigModule_L39F40T61_Expr_2(9 downto 8) <= (others => '0');
		ConfigModule_L39F40T61_Expr_2(7 downto 0) <= signed(Inputs_i2);
		Inputs_i1 <= i1;
		Inputs_i2 <= i2;
		ConfigModule_L39F39T95_Index <= ConfigModule_L39F40T61_Expr(8 downto 0);
		oResult <= ConfigModule_L39F39T95_Index;
	end process;
	-- [BEGIN USER ARCHITECTURE]
	-- [END USER ARCHITECTURE]
end architecture;
