-- PLEASE READ THIS, IT MAY SAVE YOU SOME TIME AND MONEY, THANK YOU!
-- * This file was generated by Quokka FPGA Toolkit.
-- * Generated code is your property, do whatever you want with it
-- * Place custom code between [BEGIN USER ***] and [END USER ***].
-- * CAUTION: All code outside of [USER] scope is subject to regeneration.
-- * Bad things happen sometimes in developer's life,
--   it is recommended to use source control management software (e.g. git, bzr etc) to keep your custom code safe'n'sound.
-- * Internal structure of code is subject to change.
--   You can use some of signals in custom code, but most likely they will not exist in future (e.g. will get shorter or gone completely)
-- * Please send your feedback, comments, improvement ideas etc. to evmuryshkin@gmail.com
-- * Visit https://github.com/EvgenyMuryshkin/QuokkaEvaluation to access latest version of playground
--
-- DISCLAIMER:
--   Code comes AS-IS, it is your responsibility to make sure it is working as expected
--   no responsibility will be taken for any loss or damage caused by use of Quokka toolkit.
--
-- System configuration name is AXI4SoC2x2_TopLevel_interconnect_writeInterconnect_DuplexMux, clock frequency is 1Hz, Embedded
library ieee;
use ieee.std_logic_1164.all;
use ieee.numeric_std.all;
use work.Quokka.all;
entity AXI4SoC2x2_TopLevel_interconnect_writeInterconnect_DuplexMux is
	port
	(
		-- [BEGIN USER PORTS]
		-- [END USER PORTS]
		iLeft0 : in unsigned (137 downto 0);
		iLeft1 : in unsigned (137 downto 0);
		iLeftAddr : in unsigned (0 downto 0);
		iLeftAddrValid : in std_logic;
		iRight0 : in unsigned (20 downto 0);
		iRight1 : in unsigned (20 downto 0);
		iRightAddr : in unsigned (0 downto 0);
		iRightAddrValid : in std_logic;
		oLeft0 : out unsigned (137 downto 0);
		oLeft1 : out unsigned (137 downto 0);
		oMuxLeftData : out unsigned (137 downto 0);
		oMuxRightData : out unsigned (20 downto 0);
		oRight0 : out unsigned (20 downto 0);
		oRight1 : out unsigned (20 downto 0)
	);
end entity;
-- FSM summary
-- Packages
architecture rtl of AXI4SoC2x2_TopLevel_interconnect_writeInterconnect_DuplexMux is
	-- [BEGIN USER SIGNALS]
	-- [END USER SIGNALS]
	constant HiSignal : std_logic := '1';
	constant LoSignal : std_logic := '0';
	constant Zero : std_logic := '0';
	constant One : std_logic := '1';
	-- true is a reserved name, declaration skipped
	-- false is a reserved name, declaration skipped
	constant leftCount : signed(2 downto 0) := "010";
	constant rightCount : signed(2 downto 0) := "010";
	constant Prefilled0 : unsigned(0 downto 0) := "0";
	constant Prefilled1 : unsigned(0 downto 0) := "1";
	signal Inputs_iLeftAddr : unsigned(0 downto 0) := (others => '0');
	signal Inputs_iLeftAddrValid : std_logic := '0';
	signal Inputs_iRightAddr : unsigned(0 downto 0) := (others => '0');
	signal Inputs_iRightAddrValid : std_logic := '0';
	signal mEmptyLeftData_AW_AWID : unsigned(7 downto 0) := (others => '0');
	signal mEmptyLeftData_AW_AWADDR : unsigned(31 downto 0) := (others => '0');
	signal mEmptyLeftData_AW_AWLEN : unsigned(7 downto 0) := (others => '0');
	signal mEmptyLeftData_AW_AWSIZE : unsigned(2 downto 0) := (others => '0');
	signal mEmptyLeftData_AW_AWBURST : unsigned(1 downto 0) := (others => '0');
	signal mEmptyLeftData_AW_AWLOCK : unsigned(1 downto 0) := (others => '0');
	signal mEmptyLeftData_AW_AWCACHE : unsigned(3 downto 0) := (others => '0');
	signal mEmptyLeftData_AW_AWPROT : unsigned(2 downto 0) := (others => '0');
	signal mEmptyLeftData_AW_AWQOS : unsigned(3 downto 0) := (others => '0');
	signal mEmptyLeftData_AW_AWREGION : unsigned(7 downto 0) := (others => '0');
	signal mEmptyLeftData_AW_AWUSER : unsigned(7 downto 0) := (others => '0');
	signal mEmptyLeftData_AW_AWVALID : std_logic := '0';
	signal mEmptyLeftData_W_WID : unsigned(7 downto 0) := (others => '0');
	signal mEmptyLeftData_W_WSTRB : unsigned(3 downto 0) := (others => '0');
	signal mEmptyLeftData_W_WLAST : std_logic := '0';
	signal mEmptyLeftData_W_WUSER : unsigned(7 downto 0) := (others => '0');
	signal mEmptyLeftData_W_WVALID : std_logic := '0';
	signal mEmptyLeftData_B_BREADY : std_logic := '0';
	signal mEmptyRightData_AW_AWREADY : std_logic := '0';
	signal mEmptyRightData_B_BID : unsigned(7 downto 0) := (others => '0');
	signal mEmptyRightData_B_BRESP : unsigned(1 downto 0) := (others => '0');
	signal mEmptyRightData_B_BUSER : unsigned(7 downto 0) := (others => '0');
	signal mEmptyRightData_B_BVALID : std_logic := '0';
	signal mEmptyRightData_W_WREADY : std_logic := '0';
	signal mMuxLeftData_AW_AWID : unsigned(7 downto 0) := (others => '0');
	signal mMuxLeftData_AW_AWADDR : unsigned(31 downto 0) := (others => '0');
	signal mMuxLeftData_AW_AWLEN : unsigned(7 downto 0) := (others => '0');
	signal mMuxLeftData_AW_AWSIZE : unsigned(2 downto 0) := (others => '0');
	signal mMuxLeftData_AW_AWBURST : unsigned(1 downto 0) := (others => '0');
	signal mMuxLeftData_AW_AWLOCK : unsigned(1 downto 0) := (others => '0');
	signal mMuxLeftData_AW_AWCACHE : unsigned(3 downto 0) := (others => '0');
	signal mMuxLeftData_AW_AWPROT : unsigned(2 downto 0) := (others => '0');
	signal mMuxLeftData_AW_AWQOS : unsigned(3 downto 0) := (others => '0');
	signal mMuxLeftData_AW_AWREGION : unsigned(7 downto 0) := (others => '0');
	signal mMuxLeftData_AW_AWUSER : unsigned(7 downto 0) := (others => '0');
	signal mMuxLeftData_AW_AWVALID : std_logic := '0';
	signal mMuxLeftData_W_WID : unsigned(7 downto 0) := (others => '0');
	signal mMuxLeftData_W_WSTRB : unsigned(3 downto 0) := (others => '0');
	signal mMuxLeftData_W_WLAST : std_logic := '0';
	signal mMuxLeftData_W_WUSER : unsigned(7 downto 0) := (others => '0');
	signal mMuxLeftData_W_WVALID : std_logic := '0';
	signal mMuxLeftData_B_BREADY : std_logic := '0';
	signal mMuxRightData_AW_AWREADY : std_logic := '0';
	signal mMuxRightData_B_BID : unsigned(7 downto 0) := (others => '0');
	signal mMuxRightData_B_BRESP : unsigned(1 downto 0) := (others => '0');
	signal mMuxRightData_B_BUSER : unsigned(7 downto 0) := (others => '0');
	signal mMuxRightData_B_BVALID : std_logic := '0';
	signal mMuxRightData_W_WREADY : std_logic := '0';
	signal FullDuplexMuxModule_L94F13L104T14_0_FullDuplexMuxModule_L96F21T78_Expr : std_logic := '0';
	signal FullDuplexMuxModule_L94F13L104T14_0_FullDuplexMuxModule_L96F21T78_Expr_1 : std_logic := '0';
	signal FullDuplexMuxModule_L94F13L104T14_0_FullDuplexMuxModule_L96F21T78_Expr_2 : std_logic := '0';
	signal FullDuplexMuxModule_L94F13L104T14_1_FullDuplexMuxModule_L96F21T78_Expr : std_logic := '0';
	signal FullDuplexMuxModule_L94F13L104T14_1_FullDuplexMuxModule_L96F21T78_Expr_1 : std_logic := '0';
	signal FullDuplexMuxModule_L94F13L104T14_1_FullDuplexMuxModule_L96F21T78_Expr_2 : std_logic := '0';
	signal FullDuplexMuxModule_L118F13L128T14_0_FullDuplexMuxModule_L120F21T75_Expr : std_logic := '0';
	signal FullDuplexMuxModule_L118F13L128T14_0_FullDuplexMuxModule_L120F21T75_Expr_1 : std_logic := '0';
	signal FullDuplexMuxModule_L118F13L128T14_0_FullDuplexMuxModule_L120F21T75_Expr_2 : std_logic := '0';
	signal FullDuplexMuxModule_L118F13L128T14_1_FullDuplexMuxModule_L120F21T75_Expr : std_logic := '0';
	signal FullDuplexMuxModule_L118F13L128T14_1_FullDuplexMuxModule_L120F21T75_Expr_1 : std_logic := '0';
	signal FullDuplexMuxModule_L118F13L128T14_1_FullDuplexMuxModule_L120F21T75_Expr_2 : std_logic := '0';
	signal FullDuplexMuxModule_L94F13L104T14_0_FullDuplexMuxModule_L96F47T78_Expr : std_logic := '0';
	signal FullDuplexMuxModule_L94F13L104T14_0_FullDuplexMuxModule_L96F47T78_ExprLhs : signed(1 downto 0) := "00";
	signal FullDuplexMuxModule_L94F13L104T14_0_FullDuplexMuxModule_L96F47T78_ExprRhs : signed(1 downto 0) := "00";
	signal FullDuplexMuxModule_L94F13L104T14_1_FullDuplexMuxModule_L96F47T78_Expr : std_logic := '0';
	signal FullDuplexMuxModule_L94F13L104T14_1_FullDuplexMuxModule_L96F47T78_ExprLhs : signed(1 downto 0) := "00";
	signal FullDuplexMuxModule_L94F13L104T14_1_FullDuplexMuxModule_L96F47T78_ExprRhs : signed(1 downto 0) := "00";
	signal FullDuplexMuxModule_L118F13L128T14_0_FullDuplexMuxModule_L120F46T75_Expr : std_logic := '0';
	signal FullDuplexMuxModule_L118F13L128T14_0_FullDuplexMuxModule_L120F46T75_ExprLhs : signed(1 downto 0) := "00";
	signal FullDuplexMuxModule_L118F13L128T14_0_FullDuplexMuxModule_L120F46T75_ExprRhs : signed(1 downto 0) := "00";
	signal FullDuplexMuxModule_L118F13L128T14_1_FullDuplexMuxModule_L120F46T75_Expr : std_logic := '0';
	signal FullDuplexMuxModule_L118F13L128T14_1_FullDuplexMuxModule_L120F46T75_ExprLhs : signed(1 downto 0) := "00";
	signal FullDuplexMuxModule_L118F13L128T14_1_FullDuplexMuxModule_L120F46T75_ExprRhs : signed(1 downto 0) := "00";
	type Inputs_iLeftArray is array (0 to 1) of unsigned (137 downto 0);
	signal Inputs_iLeft : Inputs_iLeftArray := (others => (others => '0'));
	type Inputs_iRightArray is array (0 to 1) of unsigned (20 downto 0);
	signal Inputs_iRight : Inputs_iRightArray := (others => (others => '0'));
	type mEmptyLeftData_W_WDATAArray is array (0 to 3) of unsigned (7 downto 0);
	signal mEmptyLeftData_W_WDATA : mEmptyLeftData_W_WDATAArray := (others => (others => '0'));
	type mMuxLeftData_W_WDATAArray is array (0 to 3) of unsigned (7 downto 0);
	signal mMuxLeftData_W_WDATA : mMuxLeftData_W_WDATAArray := (others => (others => '0'));
	type mOutLeftDataArray is array (0 to 1) of unsigned (137 downto 0);
	signal mOutLeftData : mOutLeftDataArray := (others => (others => '0'));
	type mOutRightDataArray is array (0 to 1) of unsigned (20 downto 0);
	signal mOutRightData : mOutRightDataArray := (others => (others => '0'));
begin
	FullDuplexMuxModule_L94F13L104T14_0_FullDuplexMuxModule_L96F47T78_Expr <= '1' when (signed(resize(FullDuplexMuxModule_L94F13L104T14_0_FullDuplexMuxModule_L96F47T78_ExprLhs, FullDuplexMuxModule_L94F13L104T14_0_FullDuplexMuxModule_L96F47T78_ExprLhs'length + 1)) = signed(resize(FullDuplexMuxModule_L94F13L104T14_0_FullDuplexMuxModule_L96F47T78_ExprRhs, FullDuplexMuxModule_L94F13L104T14_0_FullDuplexMuxModule_L96F47T78_ExprRhs'length + 1))) else '0';
	FullDuplexMuxModule_L94F13L104T14_1_FullDuplexMuxModule_L96F47T78_Expr <= '1' when (signed(resize(FullDuplexMuxModule_L94F13L104T14_1_FullDuplexMuxModule_L96F47T78_ExprLhs, FullDuplexMuxModule_L94F13L104T14_1_FullDuplexMuxModule_L96F47T78_ExprLhs'length + 1)) = signed(resize(FullDuplexMuxModule_L94F13L104T14_1_FullDuplexMuxModule_L96F47T78_ExprRhs, FullDuplexMuxModule_L94F13L104T14_1_FullDuplexMuxModule_L96F47T78_ExprRhs'length + 1))) else '0';
	FullDuplexMuxModule_L118F13L128T14_0_FullDuplexMuxModule_L120F46T75_Expr <= '1' when (signed(resize(FullDuplexMuxModule_L118F13L128T14_0_FullDuplexMuxModule_L120F46T75_ExprLhs, FullDuplexMuxModule_L118F13L128T14_0_FullDuplexMuxModule_L120F46T75_ExprLhs'length + 1)) = signed(resize(FullDuplexMuxModule_L118F13L128T14_0_FullDuplexMuxModule_L120F46T75_ExprRhs, FullDuplexMuxModule_L118F13L128T14_0_FullDuplexMuxModule_L120F46T75_ExprRhs'length + 1))) else '0';
	FullDuplexMuxModule_L118F13L128T14_1_FullDuplexMuxModule_L120F46T75_Expr <= '1' when (signed(resize(FullDuplexMuxModule_L118F13L128T14_1_FullDuplexMuxModule_L120F46T75_ExprLhs, FullDuplexMuxModule_L118F13L128T14_1_FullDuplexMuxModule_L120F46T75_ExprLhs'length + 1)) = signed(resize(FullDuplexMuxModule_L118F13L128T14_1_FullDuplexMuxModule_L120F46T75_ExprRhs, FullDuplexMuxModule_L118F13L128T14_1_FullDuplexMuxModule_L120F46T75_ExprRhs'length + 1))) else '0';
	process (FullDuplexMuxModule_L94F13L104T14_0_FullDuplexMuxModule_L96F21T78_Expr_1, FullDuplexMuxModule_L94F13L104T14_0_FullDuplexMuxModule_L96F21T78_Expr_2)
	begin
		FullDuplexMuxModule_L94F13L104T14_0_FullDuplexMuxModule_L96F21T78_Expr <= FullDuplexMuxModule_L94F13L104T14_0_FullDuplexMuxModule_L96F21T78_Expr_1 AND FullDuplexMuxModule_L94F13L104T14_0_FullDuplexMuxModule_L96F21T78_Expr_2;
	end process;
	process (FullDuplexMuxModule_L94F13L104T14_1_FullDuplexMuxModule_L96F21T78_Expr_1, FullDuplexMuxModule_L94F13L104T14_1_FullDuplexMuxModule_L96F21T78_Expr_2)
	begin
		FullDuplexMuxModule_L94F13L104T14_1_FullDuplexMuxModule_L96F21T78_Expr <= FullDuplexMuxModule_L94F13L104T14_1_FullDuplexMuxModule_L96F21T78_Expr_1 AND FullDuplexMuxModule_L94F13L104T14_1_FullDuplexMuxModule_L96F21T78_Expr_2;
	end process;
	process (FullDuplexMuxModule_L118F13L128T14_0_FullDuplexMuxModule_L120F21T75_Expr_1, FullDuplexMuxModule_L118F13L128T14_0_FullDuplexMuxModule_L120F21T75_Expr_2)
	begin
		FullDuplexMuxModule_L118F13L128T14_0_FullDuplexMuxModule_L120F21T75_Expr <= FullDuplexMuxModule_L118F13L128T14_0_FullDuplexMuxModule_L120F21T75_Expr_1 AND FullDuplexMuxModule_L118F13L128T14_0_FullDuplexMuxModule_L120F21T75_Expr_2;
	end process;
	process (FullDuplexMuxModule_L118F13L128T14_1_FullDuplexMuxModule_L120F21T75_Expr_1, FullDuplexMuxModule_L118F13L128T14_1_FullDuplexMuxModule_L120F21T75_Expr_2)
	begin
		FullDuplexMuxModule_L118F13L128T14_1_FullDuplexMuxModule_L120F21T75_Expr <= FullDuplexMuxModule_L118F13L128T14_1_FullDuplexMuxModule_L120F21T75_Expr_1 AND FullDuplexMuxModule_L118F13L128T14_1_FullDuplexMuxModule_L120F21T75_Expr_2;
	end process;
	process (Inputs_iLeft, Inputs_iLeftAddrValid, mEmptyLeftData_AW_AWADDR, mEmptyLeftData_AW_AWBURST, mEmptyLeftData_AW_AWCACHE, mEmptyLeftData_AW_AWID, mEmptyLeftData_AW_AWLEN, mEmptyLeftData_AW_AWLOCK, mEmptyLeftData_AW_AWPROT, mEmptyLeftData_AW_AWQOS, mEmptyLeftData_AW_AWREGION, mEmptyLeftData_AW_AWSIZE, mEmptyLeftData_AW_AWUSER, mEmptyLeftData_AW_AWVALID, mEmptyLeftData_B_BREADY, mEmptyLeftData_W_WDATA, mEmptyLeftData_W_WID, mEmptyLeftData_W_WLAST, mEmptyLeftData_W_WSTRB, mEmptyLeftData_W_WUSER, mEmptyLeftData_W_WVALID)
	begin
		if Inputs_iLeftAddrValid = '1' then
			mMuxLeftData_B_BREADY <= Inputs_iLeft(TO_INTEGER(Inputs_iLeftAddr))(137);
			mMuxLeftData_W_WVALID <= Inputs_iLeft(TO_INTEGER(Inputs_iLeftAddr))(136);
			mMuxLeftData_W_WUSER <= Inputs_iLeft(TO_INTEGER(Inputs_iLeftAddr))(135 downto 128);
			mMuxLeftData_W_WLAST <= Inputs_iLeft(TO_INTEGER(Inputs_iLeftAddr))(127);
			mMuxLeftData_W_WSTRB <= Inputs_iLeft(TO_INTEGER(Inputs_iLeftAddr))(126 downto 123);
			mMuxLeftData_W_WDATA(3) <= Inputs_iLeft(TO_INTEGER(Inputs_iLeftAddr))(122 downto 115);
			mMuxLeftData_W_WDATA(2) <= Inputs_iLeft(TO_INTEGER(Inputs_iLeftAddr))(114 downto 107);
			mMuxLeftData_W_WDATA(1) <= Inputs_iLeft(TO_INTEGER(Inputs_iLeftAddr))(106 downto 99);
			mMuxLeftData_W_WDATA(0) <= Inputs_iLeft(TO_INTEGER(Inputs_iLeftAddr))(98 downto 91);
			mMuxLeftData_W_WID <= Inputs_iLeft(TO_INTEGER(Inputs_iLeftAddr))(90 downto 83);
			mMuxLeftData_AW_AWVALID <= Inputs_iLeft(TO_INTEGER(Inputs_iLeftAddr))(82);
			mMuxLeftData_AW_AWUSER <= Inputs_iLeft(TO_INTEGER(Inputs_iLeftAddr))(81 downto 74);
			mMuxLeftData_AW_AWREGION <= Inputs_iLeft(TO_INTEGER(Inputs_iLeftAddr))(73 downto 66);
			mMuxLeftData_AW_AWQOS <= Inputs_iLeft(TO_INTEGER(Inputs_iLeftAddr))(65 downto 62);
			mMuxLeftData_AW_AWPROT <= Inputs_iLeft(TO_INTEGER(Inputs_iLeftAddr))(61 downto 59);
			mMuxLeftData_AW_AWCACHE <= Inputs_iLeft(TO_INTEGER(Inputs_iLeftAddr))(58 downto 55);
			mMuxLeftData_AW_AWLOCK <= Inputs_iLeft(TO_INTEGER(Inputs_iLeftAddr))(54 downto 53);
			mMuxLeftData_AW_AWBURST <= Inputs_iLeft(TO_INTEGER(Inputs_iLeftAddr))(52 downto 51);
			mMuxLeftData_AW_AWSIZE <= Inputs_iLeft(TO_INTEGER(Inputs_iLeftAddr))(50 downto 48);
			mMuxLeftData_AW_AWLEN <= Inputs_iLeft(TO_INTEGER(Inputs_iLeftAddr))(47 downto 40);
			mMuxLeftData_AW_AWADDR <= Inputs_iLeft(TO_INTEGER(Inputs_iLeftAddr))(39 downto 8);
			mMuxLeftData_AW_AWID <= Inputs_iLeft(TO_INTEGER(Inputs_iLeftAddr))(7 downto 0);
		else
			mMuxLeftData_AW_AWID <= mEmptyLeftData_AW_AWID;
			mMuxLeftData_AW_AWADDR <= mEmptyLeftData_AW_AWADDR;
			mMuxLeftData_AW_AWLEN <= mEmptyLeftData_AW_AWLEN;
			mMuxLeftData_AW_AWSIZE <= mEmptyLeftData_AW_AWSIZE;
			mMuxLeftData_AW_AWBURST <= mEmptyLeftData_AW_AWBURST;
			mMuxLeftData_AW_AWLOCK <= mEmptyLeftData_AW_AWLOCK;
			mMuxLeftData_AW_AWCACHE <= mEmptyLeftData_AW_AWCACHE;
			mMuxLeftData_AW_AWPROT <= mEmptyLeftData_AW_AWPROT;
			mMuxLeftData_AW_AWQOS <= mEmptyLeftData_AW_AWQOS;
			mMuxLeftData_AW_AWREGION <= mEmptyLeftData_AW_AWREGION;
			mMuxLeftData_AW_AWUSER <= mEmptyLeftData_AW_AWUSER;
			mMuxLeftData_AW_AWVALID <= mEmptyLeftData_AW_AWVALID;
			mMuxLeftData_W_WID <= mEmptyLeftData_W_WID;
			mMuxLeftData_W_WDATA(0) <= mEmptyLeftData_W_WDATA(0);
			mMuxLeftData_W_WDATA(1) <= mEmptyLeftData_W_WDATA(1);
			mMuxLeftData_W_WDATA(2) <= mEmptyLeftData_W_WDATA(2);
			mMuxLeftData_W_WDATA(3) <= mEmptyLeftData_W_WDATA(3);
			mMuxLeftData_W_WSTRB <= mEmptyLeftData_W_WSTRB;
			mMuxLeftData_W_WLAST <= mEmptyLeftData_W_WLAST;
			mMuxLeftData_W_WUSER <= mEmptyLeftData_W_WUSER;
			mMuxLeftData_W_WVALID <= mEmptyLeftData_W_WVALID;
			mMuxLeftData_B_BREADY <= mEmptyLeftData_B_BREADY;
		end if;
	end process;
	process (FullDuplexMuxModule_L94F13L104T14_0_FullDuplexMuxModule_L96F21T78_Expr, mEmptyLeftData_AW_AWADDR, mEmptyLeftData_AW_AWBURST, mEmptyLeftData_AW_AWCACHE, mEmptyLeftData_AW_AWID, mEmptyLeftData_AW_AWLEN, mEmptyLeftData_AW_AWLOCK, mEmptyLeftData_AW_AWPROT, mEmptyLeftData_AW_AWQOS, mEmptyLeftData_AW_AWREGION, mEmptyLeftData_AW_AWSIZE, mEmptyLeftData_AW_AWUSER, mEmptyLeftData_AW_AWVALID, mEmptyLeftData_B_BREADY, mEmptyLeftData_W_WDATA, mEmptyLeftData_W_WID, mEmptyLeftData_W_WLAST, mEmptyLeftData_W_WSTRB, mEmptyLeftData_W_WUSER, mEmptyLeftData_W_WVALID, mMuxLeftData_AW_AWADDR, mMuxLeftData_AW_AWBURST, mMuxLeftData_AW_AWCACHE, mMuxLeftData_AW_AWID, mMuxLeftData_AW_AWLEN, mMuxLeftData_AW_AWLOCK, mMuxLeftData_AW_AWPROT, mMuxLeftData_AW_AWQOS, mMuxLeftData_AW_AWREGION, mMuxLeftData_AW_AWSIZE, mMuxLeftData_AW_AWUSER, mMuxLeftData_AW_AWVALID, mMuxLeftData_B_BREADY, mMuxLeftData_W_WDATA, mMuxLeftData_W_WID, mMuxLeftData_W_WLAST, mMuxLeftData_W_WSTRB, mMuxLeftData_W_WUSER, mMuxLeftData_W_WVALID)
	begin
		if FullDuplexMuxModule_L94F13L104T14_0_FullDuplexMuxModule_L96F21T78_Expr = '1' then
			mOutLeftData(0)(137) <= mMuxLeftData_B_BREADY;
			mOutLeftData(0)(136) <= mMuxLeftData_W_WVALID;
			mOutLeftData(0)(135 downto 128) <= mMuxLeftData_W_WUSER;
			mOutLeftData(0)(127) <= mMuxLeftData_W_WLAST;
			mOutLeftData(0)(126 downto 123) <= mMuxLeftData_W_WSTRB;
			mOutLeftData(0)(122 downto 115) <= mMuxLeftData_W_WDATA(3);
			mOutLeftData(0)(114 downto 107) <= mMuxLeftData_W_WDATA(2);
			mOutLeftData(0)(106 downto 99) <= mMuxLeftData_W_WDATA(1);
			mOutLeftData(0)(98 downto 91) <= mMuxLeftData_W_WDATA(0);
			mOutLeftData(0)(90 downto 83) <= mMuxLeftData_W_WID;
			mOutLeftData(0)(82) <= mMuxLeftData_AW_AWVALID;
			mOutLeftData(0)(81 downto 74) <= mMuxLeftData_AW_AWUSER;
			mOutLeftData(0)(73 downto 66) <= mMuxLeftData_AW_AWREGION;
			mOutLeftData(0)(65 downto 62) <= mMuxLeftData_AW_AWQOS;
			mOutLeftData(0)(61 downto 59) <= mMuxLeftData_AW_AWPROT;
			mOutLeftData(0)(58 downto 55) <= mMuxLeftData_AW_AWCACHE;
			mOutLeftData(0)(54 downto 53) <= mMuxLeftData_AW_AWLOCK;
			mOutLeftData(0)(52 downto 51) <= mMuxLeftData_AW_AWBURST;
			mOutLeftData(0)(50 downto 48) <= mMuxLeftData_AW_AWSIZE;
			mOutLeftData(0)(47 downto 40) <= mMuxLeftData_AW_AWLEN;
			mOutLeftData(0)(39 downto 8) <= mMuxLeftData_AW_AWADDR;
			mOutLeftData(0)(7 downto 0) <= mMuxLeftData_AW_AWID;
		else
			mOutLeftData(0)(137) <= mEmptyLeftData_B_BREADY;
			mOutLeftData(0)(136) <= mEmptyLeftData_W_WVALID;
			mOutLeftData(0)(135 downto 128) <= mEmptyLeftData_W_WUSER;
			mOutLeftData(0)(127) <= mEmptyLeftData_W_WLAST;
			mOutLeftData(0)(126 downto 123) <= mEmptyLeftData_W_WSTRB;
			mOutLeftData(0)(122 downto 115) <= mEmptyLeftData_W_WDATA(3);
			mOutLeftData(0)(114 downto 107) <= mEmptyLeftData_W_WDATA(2);
			mOutLeftData(0)(106 downto 99) <= mEmptyLeftData_W_WDATA(1);
			mOutLeftData(0)(98 downto 91) <= mEmptyLeftData_W_WDATA(0);
			mOutLeftData(0)(90 downto 83) <= mEmptyLeftData_W_WID;
			mOutLeftData(0)(82) <= mEmptyLeftData_AW_AWVALID;
			mOutLeftData(0)(81 downto 74) <= mEmptyLeftData_AW_AWUSER;
			mOutLeftData(0)(73 downto 66) <= mEmptyLeftData_AW_AWREGION;
			mOutLeftData(0)(65 downto 62) <= mEmptyLeftData_AW_AWQOS;
			mOutLeftData(0)(61 downto 59) <= mEmptyLeftData_AW_AWPROT;
			mOutLeftData(0)(58 downto 55) <= mEmptyLeftData_AW_AWCACHE;
			mOutLeftData(0)(54 downto 53) <= mEmptyLeftData_AW_AWLOCK;
			mOutLeftData(0)(52 downto 51) <= mEmptyLeftData_AW_AWBURST;
			mOutLeftData(0)(50 downto 48) <= mEmptyLeftData_AW_AWSIZE;
			mOutLeftData(0)(47 downto 40) <= mEmptyLeftData_AW_AWLEN;
			mOutLeftData(0)(39 downto 8) <= mEmptyLeftData_AW_AWADDR;
			mOutLeftData(0)(7 downto 0) <= mEmptyLeftData_AW_AWID;
		end if;
	end process;
	process (FullDuplexMuxModule_L94F13L104T14_1_FullDuplexMuxModule_L96F21T78_Expr, mEmptyLeftData_AW_AWADDR, mEmptyLeftData_AW_AWBURST, mEmptyLeftData_AW_AWCACHE, mEmptyLeftData_AW_AWID, mEmptyLeftData_AW_AWLEN, mEmptyLeftData_AW_AWLOCK, mEmptyLeftData_AW_AWPROT, mEmptyLeftData_AW_AWQOS, mEmptyLeftData_AW_AWREGION, mEmptyLeftData_AW_AWSIZE, mEmptyLeftData_AW_AWUSER, mEmptyLeftData_AW_AWVALID, mEmptyLeftData_B_BREADY, mEmptyLeftData_W_WDATA, mEmptyLeftData_W_WID, mEmptyLeftData_W_WLAST, mEmptyLeftData_W_WSTRB, mEmptyLeftData_W_WUSER, mEmptyLeftData_W_WVALID, mMuxLeftData_AW_AWADDR, mMuxLeftData_AW_AWBURST, mMuxLeftData_AW_AWCACHE, mMuxLeftData_AW_AWID, mMuxLeftData_AW_AWLEN, mMuxLeftData_AW_AWLOCK, mMuxLeftData_AW_AWPROT, mMuxLeftData_AW_AWQOS, mMuxLeftData_AW_AWREGION, mMuxLeftData_AW_AWSIZE, mMuxLeftData_AW_AWUSER, mMuxLeftData_AW_AWVALID, mMuxLeftData_B_BREADY, mMuxLeftData_W_WDATA, mMuxLeftData_W_WID, mMuxLeftData_W_WLAST, mMuxLeftData_W_WSTRB, mMuxLeftData_W_WUSER, mMuxLeftData_W_WVALID)
	begin
		if FullDuplexMuxModule_L94F13L104T14_1_FullDuplexMuxModule_L96F21T78_Expr = '1' then
			mOutLeftData(1)(137) <= mMuxLeftData_B_BREADY;
			mOutLeftData(1)(136) <= mMuxLeftData_W_WVALID;
			mOutLeftData(1)(135 downto 128) <= mMuxLeftData_W_WUSER;
			mOutLeftData(1)(127) <= mMuxLeftData_W_WLAST;
			mOutLeftData(1)(126 downto 123) <= mMuxLeftData_W_WSTRB;
			mOutLeftData(1)(122 downto 115) <= mMuxLeftData_W_WDATA(3);
			mOutLeftData(1)(114 downto 107) <= mMuxLeftData_W_WDATA(2);
			mOutLeftData(1)(106 downto 99) <= mMuxLeftData_W_WDATA(1);
			mOutLeftData(1)(98 downto 91) <= mMuxLeftData_W_WDATA(0);
			mOutLeftData(1)(90 downto 83) <= mMuxLeftData_W_WID;
			mOutLeftData(1)(82) <= mMuxLeftData_AW_AWVALID;
			mOutLeftData(1)(81 downto 74) <= mMuxLeftData_AW_AWUSER;
			mOutLeftData(1)(73 downto 66) <= mMuxLeftData_AW_AWREGION;
			mOutLeftData(1)(65 downto 62) <= mMuxLeftData_AW_AWQOS;
			mOutLeftData(1)(61 downto 59) <= mMuxLeftData_AW_AWPROT;
			mOutLeftData(1)(58 downto 55) <= mMuxLeftData_AW_AWCACHE;
			mOutLeftData(1)(54 downto 53) <= mMuxLeftData_AW_AWLOCK;
			mOutLeftData(1)(52 downto 51) <= mMuxLeftData_AW_AWBURST;
			mOutLeftData(1)(50 downto 48) <= mMuxLeftData_AW_AWSIZE;
			mOutLeftData(1)(47 downto 40) <= mMuxLeftData_AW_AWLEN;
			mOutLeftData(1)(39 downto 8) <= mMuxLeftData_AW_AWADDR;
			mOutLeftData(1)(7 downto 0) <= mMuxLeftData_AW_AWID;
		else
			mOutLeftData(1)(137) <= mEmptyLeftData_B_BREADY;
			mOutLeftData(1)(136) <= mEmptyLeftData_W_WVALID;
			mOutLeftData(1)(135 downto 128) <= mEmptyLeftData_W_WUSER;
			mOutLeftData(1)(127) <= mEmptyLeftData_W_WLAST;
			mOutLeftData(1)(126 downto 123) <= mEmptyLeftData_W_WSTRB;
			mOutLeftData(1)(122 downto 115) <= mEmptyLeftData_W_WDATA(3);
			mOutLeftData(1)(114 downto 107) <= mEmptyLeftData_W_WDATA(2);
			mOutLeftData(1)(106 downto 99) <= mEmptyLeftData_W_WDATA(1);
			mOutLeftData(1)(98 downto 91) <= mEmptyLeftData_W_WDATA(0);
			mOutLeftData(1)(90 downto 83) <= mEmptyLeftData_W_WID;
			mOutLeftData(1)(82) <= mEmptyLeftData_AW_AWVALID;
			mOutLeftData(1)(81 downto 74) <= mEmptyLeftData_AW_AWUSER;
			mOutLeftData(1)(73 downto 66) <= mEmptyLeftData_AW_AWREGION;
			mOutLeftData(1)(65 downto 62) <= mEmptyLeftData_AW_AWQOS;
			mOutLeftData(1)(61 downto 59) <= mEmptyLeftData_AW_AWPROT;
			mOutLeftData(1)(58 downto 55) <= mEmptyLeftData_AW_AWCACHE;
			mOutLeftData(1)(54 downto 53) <= mEmptyLeftData_AW_AWLOCK;
			mOutLeftData(1)(52 downto 51) <= mEmptyLeftData_AW_AWBURST;
			mOutLeftData(1)(50 downto 48) <= mEmptyLeftData_AW_AWSIZE;
			mOutLeftData(1)(47 downto 40) <= mEmptyLeftData_AW_AWLEN;
			mOutLeftData(1)(39 downto 8) <= mEmptyLeftData_AW_AWADDR;
			mOutLeftData(1)(7 downto 0) <= mEmptyLeftData_AW_AWID;
		end if;
	end process;
	process (Inputs_iRight, Inputs_iRightAddrValid, mEmptyRightData_AW_AWREADY, mEmptyRightData_B_BID, mEmptyRightData_B_BRESP, mEmptyRightData_B_BUSER, mEmptyRightData_B_BVALID, mEmptyRightData_W_WREADY)
	begin
		if Inputs_iRightAddrValid = '1' then
			mMuxRightData_W_WREADY <= Inputs_iRight(TO_INTEGER(Inputs_iRightAddr))(20);
			mMuxRightData_B_BVALID <= Inputs_iRight(TO_INTEGER(Inputs_iRightAddr))(19);
			mMuxRightData_B_BUSER <= Inputs_iRight(TO_INTEGER(Inputs_iRightAddr))(18 downto 11);
			mMuxRightData_B_BRESP <= Inputs_iRight(TO_INTEGER(Inputs_iRightAddr))(10 downto 9);
			mMuxRightData_B_BID <= Inputs_iRight(TO_INTEGER(Inputs_iRightAddr))(8 downto 1);
			mMuxRightData_AW_AWREADY <= Inputs_iRight(TO_INTEGER(Inputs_iRightAddr))(0);
		else
			mMuxRightData_AW_AWREADY <= mEmptyRightData_AW_AWREADY;
			mMuxRightData_B_BID <= mEmptyRightData_B_BID;
			mMuxRightData_B_BRESP <= mEmptyRightData_B_BRESP;
			mMuxRightData_B_BUSER <= mEmptyRightData_B_BUSER;
			mMuxRightData_B_BVALID <= mEmptyRightData_B_BVALID;
			mMuxRightData_W_WREADY <= mEmptyRightData_W_WREADY;
		end if;
	end process;
	process (FullDuplexMuxModule_L118F13L128T14_0_FullDuplexMuxModule_L120F21T75_Expr, mEmptyRightData_AW_AWREADY, mEmptyRightData_B_BID, mEmptyRightData_B_BRESP, mEmptyRightData_B_BUSER, mEmptyRightData_B_BVALID, mEmptyRightData_W_WREADY, mMuxRightData_AW_AWREADY, mMuxRightData_B_BID, mMuxRightData_B_BRESP, mMuxRightData_B_BUSER, mMuxRightData_B_BVALID, mMuxRightData_W_WREADY)
	begin
		if FullDuplexMuxModule_L118F13L128T14_0_FullDuplexMuxModule_L120F21T75_Expr = '1' then
			mOutRightData(0)(20) <= mMuxRightData_W_WREADY;
			mOutRightData(0)(19) <= mMuxRightData_B_BVALID;
			mOutRightData(0)(18 downto 11) <= mMuxRightData_B_BUSER;
			mOutRightData(0)(10 downto 9) <= mMuxRightData_B_BRESP;
			mOutRightData(0)(8 downto 1) <= mMuxRightData_B_BID;
			mOutRightData(0)(0) <= mMuxRightData_AW_AWREADY;
		else
			mOutRightData(0)(20) <= mEmptyRightData_W_WREADY;
			mOutRightData(0)(19) <= mEmptyRightData_B_BVALID;
			mOutRightData(0)(18 downto 11) <= mEmptyRightData_B_BUSER;
			mOutRightData(0)(10 downto 9) <= mEmptyRightData_B_BRESP;
			mOutRightData(0)(8 downto 1) <= mEmptyRightData_B_BID;
			mOutRightData(0)(0) <= mEmptyRightData_AW_AWREADY;
		end if;
	end process;
	process (FullDuplexMuxModule_L118F13L128T14_1_FullDuplexMuxModule_L120F21T75_Expr, mEmptyRightData_AW_AWREADY, mEmptyRightData_B_BID, mEmptyRightData_B_BRESP, mEmptyRightData_B_BUSER, mEmptyRightData_B_BVALID, mEmptyRightData_W_WREADY, mMuxRightData_AW_AWREADY, mMuxRightData_B_BID, mMuxRightData_B_BRESP, mMuxRightData_B_BUSER, mMuxRightData_B_BVALID, mMuxRightData_W_WREADY)
	begin
		if FullDuplexMuxModule_L118F13L128T14_1_FullDuplexMuxModule_L120F21T75_Expr = '1' then
			mOutRightData(1)(20) <= mMuxRightData_W_WREADY;
			mOutRightData(1)(19) <= mMuxRightData_B_BVALID;
			mOutRightData(1)(18 downto 11) <= mMuxRightData_B_BUSER;
			mOutRightData(1)(10 downto 9) <= mMuxRightData_B_BRESP;
			mOutRightData(1)(8 downto 1) <= mMuxRightData_B_BID;
			mOutRightData(1)(0) <= mMuxRightData_AW_AWREADY;
		else
			mOutRightData(1)(20) <= mEmptyRightData_W_WREADY;
			mOutRightData(1)(19) <= mEmptyRightData_B_BVALID;
			mOutRightData(1)(18 downto 11) <= mEmptyRightData_B_BUSER;
			mOutRightData(1)(10 downto 9) <= mEmptyRightData_B_BRESP;
			mOutRightData(1)(8 downto 1) <= mEmptyRightData_B_BID;
			mOutRightData(1)(0) <= mEmptyRightData_AW_AWREADY;
		end if;
	end process;
	process (FullDuplexMuxModule_L118F13L128T14_0_FullDuplexMuxModule_L120F46T75_Expr, FullDuplexMuxModule_L118F13L128T14_1_FullDuplexMuxModule_L120F46T75_Expr, FullDuplexMuxModule_L94F13L104T14_0_FullDuplexMuxModule_L96F47T78_Expr, FullDuplexMuxModule_L94F13L104T14_1_FullDuplexMuxModule_L96F47T78_Expr, iLeft0, iLeft1, iLeftAddr, iLeftAddrValid, Inputs_iLeftAddr, Inputs_iLeftAddrValid, Inputs_iRightAddr, Inputs_iRightAddrValid, iRight0, iRight1, iRightAddr, iRightAddrValid, mMuxLeftData_AW_AWADDR, mMuxLeftData_AW_AWBURST, mMuxLeftData_AW_AWCACHE, mMuxLeftData_AW_AWID, mMuxLeftData_AW_AWLEN, mMuxLeftData_AW_AWLOCK, mMuxLeftData_AW_AWPROT, mMuxLeftData_AW_AWQOS, mMuxLeftData_AW_AWREGION, mMuxLeftData_AW_AWSIZE, mMuxLeftData_AW_AWUSER, mMuxLeftData_AW_AWVALID, mMuxLeftData_B_BREADY, mMuxLeftData_W_WDATA, mMuxLeftData_W_WID, mMuxLeftData_W_WLAST, mMuxLeftData_W_WSTRB, mMuxLeftData_W_WUSER, mMuxLeftData_W_WVALID, mMuxRightData_AW_AWREADY, mMuxRightData_B_BID, mMuxRightData_B_BRESP, mMuxRightData_B_BUSER, mMuxRightData_B_BVALID, mMuxRightData_W_WREADY, mOutLeftData, mOutRightData)
	begin
		FullDuplexMuxModule_L94F13L104T14_0_FullDuplexMuxModule_L96F47T78_ExprLhs(1) <= '0';
		FullDuplexMuxModule_L94F13L104T14_0_FullDuplexMuxModule_L96F47T78_ExprLhs(0) <= Inputs_iRightAddr(0);
		FullDuplexMuxModule_L94F13L104T14_0_FullDuplexMuxModule_L96F47T78_ExprRhs(1) <= '0';
		FullDuplexMuxModule_L94F13L104T14_0_FullDuplexMuxModule_L96F47T78_ExprRhs(0) <= Prefilled0(0);
		FullDuplexMuxModule_L94F13L104T14_1_FullDuplexMuxModule_L96F47T78_ExprLhs(1) <= '0';
		FullDuplexMuxModule_L94F13L104T14_1_FullDuplexMuxModule_L96F47T78_ExprLhs(0) <= Inputs_iRightAddr(0);
		FullDuplexMuxModule_L94F13L104T14_1_FullDuplexMuxModule_L96F47T78_ExprRhs(1) <= '0';
		FullDuplexMuxModule_L94F13L104T14_1_FullDuplexMuxModule_L96F47T78_ExprRhs(0) <= Prefilled1(0);
		FullDuplexMuxModule_L118F13L128T14_0_FullDuplexMuxModule_L120F46T75_ExprLhs(1) <= '0';
		FullDuplexMuxModule_L118F13L128T14_0_FullDuplexMuxModule_L120F46T75_ExprLhs(0) <= Inputs_iLeftAddr(0);
		FullDuplexMuxModule_L118F13L128T14_0_FullDuplexMuxModule_L120F46T75_ExprRhs(1) <= '0';
		FullDuplexMuxModule_L118F13L128T14_0_FullDuplexMuxModule_L120F46T75_ExprRhs(0) <= Prefilled0(0);
		FullDuplexMuxModule_L118F13L128T14_1_FullDuplexMuxModule_L120F46T75_ExprLhs(1) <= '0';
		FullDuplexMuxModule_L118F13L128T14_1_FullDuplexMuxModule_L120F46T75_ExprLhs(0) <= Inputs_iLeftAddr(0);
		FullDuplexMuxModule_L118F13L128T14_1_FullDuplexMuxModule_L120F46T75_ExprRhs(1) <= '0';
		FullDuplexMuxModule_L118F13L128T14_1_FullDuplexMuxModule_L120F46T75_ExprRhs(0) <= Prefilled1(0);
		FullDuplexMuxModule_L94F13L104T14_0_FullDuplexMuxModule_L96F21T78_Expr_1 <= Inputs_iRightAddrValid;
		FullDuplexMuxModule_L94F13L104T14_0_FullDuplexMuxModule_L96F21T78_Expr_2 <= FullDuplexMuxModule_L94F13L104T14_0_FullDuplexMuxModule_L96F47T78_Expr;
		FullDuplexMuxModule_L94F13L104T14_1_FullDuplexMuxModule_L96F21T78_Expr_1 <= Inputs_iRightAddrValid;
		FullDuplexMuxModule_L94F13L104T14_1_FullDuplexMuxModule_L96F21T78_Expr_2 <= FullDuplexMuxModule_L94F13L104T14_1_FullDuplexMuxModule_L96F47T78_Expr;
		FullDuplexMuxModule_L118F13L128T14_0_FullDuplexMuxModule_L120F21T75_Expr_1 <= Inputs_iLeftAddrValid;
		FullDuplexMuxModule_L118F13L128T14_0_FullDuplexMuxModule_L120F21T75_Expr_2 <= FullDuplexMuxModule_L118F13L128T14_0_FullDuplexMuxModule_L120F46T75_Expr;
		FullDuplexMuxModule_L118F13L128T14_1_FullDuplexMuxModule_L120F21T75_Expr_1 <= Inputs_iLeftAddrValid;
		FullDuplexMuxModule_L118F13L128T14_1_FullDuplexMuxModule_L120F21T75_Expr_2 <= FullDuplexMuxModule_L118F13L128T14_1_FullDuplexMuxModule_L120F46T75_Expr;
		Inputs_iLeft(0) <= iLeft0;
		Inputs_iLeft(1) <= iLeft1;
		Inputs_iLeftAddr <= iLeftAddr;
		Inputs_iLeftAddrValid <= iLeftAddrValid;
		Inputs_iRight(0) <= iRight0;
		Inputs_iRight(1) <= iRight1;
		Inputs_iRightAddr <= iRightAddr;
		Inputs_iRightAddrValid <= iRightAddrValid;
		oLeft0 <= mOutLeftData(0);
		oLeft1 <= mOutLeftData(1);
		oMuxLeftData(137) <= mMuxLeftData_B_BREADY;
		oMuxLeftData(136) <= mMuxLeftData_W_WVALID;
		oMuxLeftData(135 downto 128) <= mMuxLeftData_W_WUSER;
		oMuxLeftData(127) <= mMuxLeftData_W_WLAST;
		oMuxLeftData(126 downto 123) <= mMuxLeftData_W_WSTRB;
		oMuxLeftData(122 downto 115) <= mMuxLeftData_W_WDATA(3);
		oMuxLeftData(114 downto 107) <= mMuxLeftData_W_WDATA(2);
		oMuxLeftData(106 downto 99) <= mMuxLeftData_W_WDATA(1);
		oMuxLeftData(98 downto 91) <= mMuxLeftData_W_WDATA(0);
		oMuxLeftData(90 downto 83) <= mMuxLeftData_W_WID;
		oMuxLeftData(82) <= mMuxLeftData_AW_AWVALID;
		oMuxLeftData(81 downto 74) <= mMuxLeftData_AW_AWUSER;
		oMuxLeftData(73 downto 66) <= mMuxLeftData_AW_AWREGION;
		oMuxLeftData(65 downto 62) <= mMuxLeftData_AW_AWQOS;
		oMuxLeftData(61 downto 59) <= mMuxLeftData_AW_AWPROT;
		oMuxLeftData(58 downto 55) <= mMuxLeftData_AW_AWCACHE;
		oMuxLeftData(54 downto 53) <= mMuxLeftData_AW_AWLOCK;
		oMuxLeftData(52 downto 51) <= mMuxLeftData_AW_AWBURST;
		oMuxLeftData(50 downto 48) <= mMuxLeftData_AW_AWSIZE;
		oMuxLeftData(47 downto 40) <= mMuxLeftData_AW_AWLEN;
		oMuxLeftData(39 downto 8) <= mMuxLeftData_AW_AWADDR;
		oMuxLeftData(7 downto 0) <= mMuxLeftData_AW_AWID;
		oMuxRightData(20) <= mMuxRightData_W_WREADY;
		oMuxRightData(19) <= mMuxRightData_B_BVALID;
		oMuxRightData(18 downto 11) <= mMuxRightData_B_BUSER;
		oMuxRightData(10 downto 9) <= mMuxRightData_B_BRESP;
		oMuxRightData(8 downto 1) <= mMuxRightData_B_BID;
		oMuxRightData(0) <= mMuxRightData_AW_AWREADY;
		oRight0 <= mOutRightData(0);
		oRight1 <= mOutRightData(1);
	end process;
	-- [BEGIN USER ARCHITECTURE]
	-- [END USER ARCHITECTURE]
end architecture;
