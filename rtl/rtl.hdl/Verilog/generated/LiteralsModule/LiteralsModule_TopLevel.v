`timescale 1ns/1ps
`default_nettype none
// PLEASE READ THIS, IT MAY SAVE YOU SOME TIME AND MONEY, THANK YOU!
// * This file was generated by Quokka FPGA Toolkit.
// * Generated code is your property, do whatever you want with it
// * Place custom code between [BEGIN USER ***] and [END USER ***].
// * CAUTION: All code outside of [USER] scope is subject to regeneration.
// * Bad things happen sometimes in developer's life,
//   it is recommended to use source control management software (e.g. git, bzr etc) to keep your custom code safe'n'sound.
// * Internal structure of code is subject to change.
//   You can use some of signals in custom code, but most likely they will not exist in future (e.g. will get shorter or gone completely)
// * Please send your feedback, comments, improvement ideas etc. to evmuryshkin@gmail.com
// * Visit https://github.com/EvgenyMuryshkin/QuokkaEvaluation to access latest version of playground
//
// DISCLAIMER:
//   Code comes AS-IS, it is your responsibility to make sure it is working as expected
//   no responsibility will be taken for any loss or damage caused by use of Quokka toolkit.
//
// System configuration name is LiteralsModule_TopLevel, clock frequency is 1Hz, Top-level
// FSM summary
// -- Packages
module LiteralsModule_TopLevel
(
	// [BEGIN USER PORTS]
	// [END USER PORTS]
	output wire [7:0] BinaryByte,
	output wire signed [31:0] BinaryInt,
	output wire signed [15:0] BinaryShort,
	output wire [7:0] Byte,
	output wire signed [31:0] Int,
	output wire signed [63:0] Long,
	output wire signed [63:0] LongHex,
	output wire signed [7:0] SByte,
	output wire signed [15:0] Short,
	output wire [31:0] UInt,
	output wire [63:0] ULong,
	output wire [63:0] ULongHex,
	output wire [15:0] UShort
);
	// [BEGIN USER SIGNALS]
	// [END USER SIGNALS]
	localparam HiSignal = 1'b1;
	localparam LoSignal = 1'b0;
	wire Zero = 1'b0;
	wire One = 1'b1;
	wire true = 1'b1;
	wire false = 1'b0;
	wire [7: 0] LiteralsModule_L20F35T47_Expr = 8'b10010110;
	wire [19: 0] LiteralsModule_L22F33T60_Expr = 20'b10010110101011110000;
	wire [11: 0] LiteralsModule_L21F37T54_Expr = 12'b100101101010;
	wire [5: 0] LiteralsModule_L10F29T31_Expr = 6'b101010;
	wire signed [1: 0] LiteralsModule_L14F27T29_Expr = 2'b11;
	wire signed [63: 0] LiteralsModule_L16F29T50_Expr = 64'b1000000000000000000000000000000000000000000000000000000000000000;
	wire [62: 0] LiteralsModule_L18F32T53_Expr = 63'b111000000000000111111111111111111111111111111111111111111111111;
	wire signed [1: 0] LiteralsModule_L11F31T33_Expr = 2'b11;
	wire signed [1: 0] LiteralsModule_L12F31T33_Expr = 2'b11;
	wire [5: 0] LiteralsModule_L15F29T31_Expr = 6'b101110;
	wire [5: 0] LiteralsModule_L17F31T35_Expr = 6'b110000;
	wire [63: 0] LiteralsModule_L19F34T55_Expr = 64'b1000000000000000111111111111111111111111111111111111111111111111;
	wire [5: 0] LiteralsModule_L13F33T35_Expr = 6'b101100;
	assign BinaryByte = LiteralsModule_L20F35T47_Expr;
	assign BinaryInt = {
		{12{1'b0}},
		LiteralsModule_L22F33T60_Expr
	}
	;
	assign BinaryShort = {
		{4{1'b0}},
		LiteralsModule_L21F37T54_Expr
	}
	;
	assign Byte = {
		{2{1'b0}},
		LiteralsModule_L10F29T31_Expr
	}
	;
	assign Int = {
		{30{LiteralsModule_L14F27T29_Expr[1]}},
		LiteralsModule_L14F27T29_Expr
	}
	;
	assign Long = LiteralsModule_L16F29T50_Expr;
	assign LongHex = {
		1'b0,
		LiteralsModule_L18F32T53_Expr
	}
	;
	assign SByte = {
		{6{LiteralsModule_L11F31T33_Expr[1]}},
		LiteralsModule_L11F31T33_Expr
	}
	;
	assign Short = {
		{14{LiteralsModule_L12F31T33_Expr[1]}},
		LiteralsModule_L12F31T33_Expr
	}
	;
	assign UInt = {
		{26{1'b0}},
		LiteralsModule_L15F29T31_Expr
	}
	;
	assign ULong = {
		{58{1'b0}},
		LiteralsModule_L17F31T35_Expr
	}
	;
	assign ULongHex = LiteralsModule_L19F34T55_Expr;
	assign UShort = {
		{10{1'b0}},
		LiteralsModule_L13F33T35_Expr
	}
	;
	// [BEGIN USER ARCHITECTURE]
	// [END USER ARCHITECTURE]
endmodule
