`timescale 1ns/1ps
`default_nettype none
// PLEASE READ THIS, IT MAY SAVE YOU SOME TIME AND MONEY, THANK YOU!
// * This file was generated by Quokka FPGA Toolkit.
// * Generated code is your property, do whatever you want with it
// * Place custom code between [BEGIN USER ***] and [END USER ***].
// * CAUTION: All code outside of [USER] scope is subject to regeneration.
// * Bad things happen sometimes in developer's life,
//   it is recommended to use source control management software (e.g. git, bzr etc) to keep your custom code safe'n'sound.
// * Internal structure of code is subject to change.
//   You can use some of signals in custom code, but most likely they will not exist in future (e.g. will get shorter or gone completely)
// * Please send your feedback, comments, improvement ideas etc. to evmuryshkin@gmail.com
// * Visit https://github.com/EvgenyMuryshkin/QuokkaEvaluation to access latest version of playground
// 
// DISCLAIMER:
//   Code comes AS-IS, it is your responsibility to make sure it is working as expected
//   no responsibility will be taken for any loss or damage caused by use of Quokka toolkit.
// 
// System configuration name is AXI4RegisterModuleB4_TopLevel, clock frequency is 1Hz, Top-level
// FSM summary
// -- Packages
module AXI4RegisterModuleB4_TopLevel (
// [BEGIN USER PORTS]
// [END USER PORTS]

	input wire  Clock,
	input wire  Reset,
	input wire  [7: 0] M2S_AR_ARID,
	input wire  [31: 0] M2S_AR_ARADDR,
	input wire  [7: 0] M2S_AR_ARLEN,
	input wire  [2: 0] M2S_AR_ARSIZE,
	input wire  [1: 0] M2S_AR_ARBURST,
	input wire  [1: 0] M2S_AR_ARLOCK,
	input wire  [3: 0] M2S_AR_ARCACHE,
	input wire  [2: 0] M2S_AR_ARPROT,
	input wire  [3: 0] M2S_AR_ARQOS,
	input wire  [7: 0] M2S_AR_ARREGION,
	input wire  [7: 0] M2S_AR_ARUSER,
	input wire  M2S_AR_ARVALID,
	input wire  M2S_R_RREADY,
	input wire  [7: 0] M2S_AW_AWID,
	input wire  [31: 0] M2S_AW_AWADDR,
	input wire  [7: 0] M2S_AW_AWLEN,
	input wire  [2: 0] M2S_AW_AWSIZE,
	input wire  [1: 0] M2S_AW_AWBURST,
	input wire  [1: 0] M2S_AW_AWLOCK,
	input wire  [3: 0] M2S_AW_AWCACHE,
	input wire  [2: 0] M2S_AW_AWPROT,
	input wire  [3: 0] M2S_AW_AWQOS,
	input wire  [7: 0] M2S_AW_AWREGION,
	input wire  [7: 0] M2S_AW_AWUSER,
	input wire  M2S_AW_AWVALID,
	input wire  [7: 0] M2S_W_WID,
	input wire  [7: 0] M2S_W_WDATA0,
	input wire  [7: 0] M2S_W_WDATA1,
	input wire  [7: 0] M2S_W_WDATA2,
	input wire  [7: 0] M2S_W_WDATA3,
	input wire  [3: 0] M2S_W_WSTRB,
	input wire  M2S_W_WLAST,
	input wire  [7: 0] M2S_W_WUSER,
	input wire  M2S_W_WVALID,
	input wire  M2S_B_BREADY,
	input wire  WE,
	input wire  [7: 0] WDATA0,
	input wire  [7: 0] WDATA1,
	input wire  [7: 0] WDATA2,
	input wire  [7: 0] WDATA3,
	output wire [7: 0] OutData0,
	output wire [7: 0] OutData1,
	output wire [7: 0] OutData2,
	output wire [7: 0] OutData3,
	output wire OutACK,
	output wire S2M_AR_ARREADY,
	output wire S2M_AW_AWREADY,
	output wire [7: 0] S2M_B_BID,
	output wire [1: 0] S2M_B_BRESP,
	output wire [7: 0] S2M_B_BUSER,
	output wire S2M_B_BVALID,
	output wire [7: 0] S2M_R_RID,
	output wire [7: 0] S2M_R_RDATA0,
	output wire [7: 0] S2M_R_RDATA1,
	output wire [7: 0] S2M_R_RDATA2,
	output wire [7: 0] S2M_R_RDATA3,
	output wire [1: 0] S2M_R_RRESP,
	output wire S2M_R_RLAST,
	output wire [7: 0] S2M_R_RUSER,
	output wire S2M_R_RVALID,
	output wire S2M_W_WREADY
    );

// [BEGIN USER SIGNALS]
// [END USER SIGNALS]
localparam HiSignal = 1'b1;
localparam LoSignal = 1'b0;
wire  Zero = 1'b0;
wire  One = 1'b1;
wire  true = 1'b1;
wire  false = 1'b0;
wire  [1:0] size = 2'b10;
wire  AXI4Register_L80F9L155T10_AXI4Register_L86F13L107T14_AXI4Register_L88F22T43_Expr = 1'b0;
wire  AXI4Register_L80F9L155T10_AXI4Register_L86F13L107T14_AXI4Register_L89F17L91T18_AXI4Register_L90F41T61_Expr = 1'b1;
wire  AXI4Register_L80F9L155T10_AXI4Register_L86F13L107T14_AXI4Register_L93F22T42_Expr = 1'b1;
wire  [1:0] AXI4Register_L80F9L155T10_AXI4Register_L86F13L107T14_AXI4Register_L94F17L99T18_AXI4Register_L96F21L98T22_AXI4Register_L97F45T63_Expr = 2'b10;
wire  [1:0] AXI4Register_L80F9L155T10_AXI4Register_L86F13L107T14_AXI4Register_L101F22T40_Expr = 2'b10;
wire  AXI4Register_L80F9L155T10_AXI4Register_L86F13L107T14_AXI4Register_L102F17L105T18_AXI4Register_L104F45T65_Expr = 1'b1;
wire  AXI4Register_L80F9L155T10_AXI4Register_L109F13L153T14_AXI4Register_L111F22T44_Expr = 1'b0;
wire  AXI4Register_L80F9L155T10_AXI4Register_L109F13L153T14_AXI4Register_L112F17L114T18_AXI4Register_L113F42T63_Expr = 1'b1;
wire  AXI4Register_L80F9L155T10_AXI4Register_L109F13L153T14_AXI4Register_L116F22T43_Expr = 1'b1;
wire  AXI4Register_L80F9L155T10_AXI4Register_L109F13L153T14_AXI4Register_L117F17L145T18_AXI4Register_L119F42T62_Expr = 1'b1;
wire  [1:0] AXI4Register_L80F9L155T10_AXI4Register_L109F13L153T14_AXI4Register_L117F17L145T18_AXI4Register_L120F21L144T22_AXI4Register_L125F50T69_Expr = 2'b10;
wire  AXI4Register_L80F9L155T10_AXI4Register_L109F13L153T14_AXI4Register_L117F17L145T18_AXI4Register_L120F21L144T22_AXI4Register_L130F25L135T26_AXI4Register_L131F29L134T30_0_w = 1'b0;
wire  AXI4Register_L80F9L155T10_AXI4Register_L109F13L153T14_AXI4Register_L117F17L145T18_AXI4Register_L120F21L144T22_AXI4Register_L130F25L135T26_AXI4Register_L131F29L134T30_1_w = 1'b1;
wire  [1:0] AXI4Register_L80F9L155T10_AXI4Register_L109F13L153T14_AXI4Register_L117F17L145T18_AXI4Register_L120F21L144T22_AXI4Register_L130F25L135T26_AXI4Register_L131F29L134T30_2_w = 2'b10;
wire  [1:0] AXI4Register_L80F9L155T10_AXI4Register_L109F13L153T14_AXI4Register_L117F17L145T18_AXI4Register_L120F21L144T22_AXI4Register_L130F25L135T26_AXI4Register_L131F29L134T30_3_w = 2'b11;
wire  AXI4Register_L80F9L155T10_AXI4Register_L109F13L153T14_AXI4Register_L117F17L145T18_AXI4Register_L120F21L144T22_AXI4Register_L137F25L143T26_AXI4Register_L138F29L142T30_0_w = 1'b0;
wire  AXI4Register_L80F9L155T10_AXI4Register_L109F13L153T14_AXI4Register_L117F17L145T18_AXI4Register_L120F21L144T22_AXI4Register_L137F25L143T26_AXI4Register_L138F29L142T30_1_w = 1'b1;
wire  [1:0] AXI4Register_L80F9L155T10_AXI4Register_L109F13L153T14_AXI4Register_L117F17L145T18_AXI4Register_L120F21L144T22_AXI4Register_L137F25L143T26_AXI4Register_L138F29L142T30_2_w = 2'b10;
wire  [1:0] AXI4Register_L80F9L155T10_AXI4Register_L109F13L153T14_AXI4Register_L117F17L145T18_AXI4Register_L120F21L144T22_AXI4Register_L137F25L143T26_AXI4Register_L138F29L142T30_3_w = 2'b11;
wire  [1:0] AXI4Register_L80F9L155T10_AXI4Register_L109F13L153T14_AXI4Register_L147F22T41_Expr = 2'b10;
wire  AXI4Register_L80F9L155T10_AXI4Register_L109F13L153T14_AXI4Register_L148F17L151T18_AXI4Register_L150F46T67_Expr = 1'b1;
wire  AXI4Register_L46F48T68_Expr = 1'b1;
wire  AXI4Register_L52F44T64_Expr = 1'b1;
wire  [1:0] AXI4Register_L58F43T61_Expr = 2'b10;
wire  AXI4Register_L60F25T37_Expr = 1'b0;
wire  AXI4_S_R_L12F29T33_Expr = 1'b1;
wire  AXI4Register_L64F45T66_Expr = 1'b1;
wire  AXI4Register_L68F44T65_Expr = 1'b1;
wire  AXI4Register_L73F25T37_Expr = 1'b0;
wire  [1:0] AXI4Register_L75F44T63_Expr = 2'b10;
wire  [7:0] Inputs_M2S_AR_ARID;
wire  [31:0] Inputs_M2S_AR_ARADDR;
wire  [7:0] Inputs_M2S_AR_ARLEN;
wire  [2:0] Inputs_M2S_AR_ARSIZE;
wire  [1:0] Inputs_M2S_AR_ARBURST;
wire  [1:0] Inputs_M2S_AR_ARLOCK;
wire  [3:0] Inputs_M2S_AR_ARCACHE;
wire  [2:0] Inputs_M2S_AR_ARPROT;
wire  [3:0] Inputs_M2S_AR_ARQOS;
wire  [7:0] Inputs_M2S_AR_ARREGION;
wire  [7:0] Inputs_M2S_AR_ARUSER;
wire  Inputs_M2S_AR_ARVALID;
wire  Inputs_M2S_R_RREADY;
wire  [7:0] Inputs_M2S_AW_AWID;
wire  [31:0] Inputs_M2S_AW_AWADDR;
wire  [7:0] Inputs_M2S_AW_AWLEN;
wire  [2:0] Inputs_M2S_AW_AWSIZE;
wire  [1:0] Inputs_M2S_AW_AWBURST;
wire  [1:0] Inputs_M2S_AW_AWLOCK;
wire  [3:0] Inputs_M2S_AW_AWCACHE;
wire  [2:0] Inputs_M2S_AW_AWPROT;
wire  [3:0] Inputs_M2S_AW_AWQOS;
wire  [7:0] Inputs_M2S_AW_AWREGION;
wire  [7:0] Inputs_M2S_AW_AWUSER;
wire  Inputs_M2S_AW_AWVALID;
wire  [7:0] Inputs_M2S_W_WID;
wire  [7:0] Inputs_M2S_W_WDATA0;
wire  [7:0] Inputs_M2S_W_WDATA1;
wire  [7:0] Inputs_M2S_W_WDATA2;
wire  [7:0] Inputs_M2S_W_WDATA3;
wire  [3:0] Inputs_M2S_W_WSTRB;
wire  Inputs_M2S_W_WLAST;
wire  [7:0] Inputs_M2S_W_WUSER;
wire  Inputs_M2S_W_WVALID;
wire  Inputs_M2S_B_BREADY;
wire  Inputs_WE;
wire  [7:0] Inputs_WDATA0;
wire  [7:0] Inputs_WDATA1;
wire  [7:0] Inputs_WDATA2;
wire  [7:0] Inputs_WDATA3;
reg  [1:0] NextState_readFSM;
reg  [1:0] NextState_writeFSM;
reg  AXI4Register_L80F9L155T10_AXI4Register_L109F13L153T14_AXI4Register_L117F17L145T18_AXI4Register_L120F21L144T22_axiWE;
wire  AXI4Register_L80F9L155T10_AXI4Register_L109F13L153T14_AXI4Register_L117F17L145T18_AXI4Register_L120F21L144T22_AXI4Register_L137F25L143T26_AXI4Register_L138F29L142T30_0_AXI4Register_L139F29L142T30_AXI4Register_L140F37T58_Index;
wire  AXI4Register_L80F9L155T10_AXI4Register_L109F13L153T14_AXI4Register_L117F17L145T18_AXI4Register_L120F21L144T22_AXI4Register_L137F25L143T26_AXI4Register_L138F29L142T30_1_AXI4Register_L139F29L142T30_AXI4Register_L140F37T58_Index;
wire  AXI4Register_L80F9L155T10_AXI4Register_L109F13L153T14_AXI4Register_L117F17L145T18_AXI4Register_L120F21L144T22_AXI4Register_L137F25L143T26_AXI4Register_L138F29L142T30_2_AXI4Register_L139F29L142T30_AXI4Register_L140F37T58_Index;
wire  AXI4Register_L80F9L155T10_AXI4Register_L109F13L153T14_AXI4Register_L117F17L145T18_AXI4Register_L120F21L144T22_AXI4Register_L137F25L143T26_AXI4Register_L138F29L142T30_3_AXI4Register_L139F29L142T30_AXI4Register_L140F37T58_Index;
reg  [7:0] State_bytesDefault = 8'b00000000;
reg  [1:0] State_readFSM = 2'b00;
wire  [1:0] State_readFSMDefault = 2'b00;
reg  [1:0] State_writeFSM = 2'b00;
wire  [1:0] State_writeFSMDefault = 2'b00;
wire  AXI4Register_L80F9L155T10_AXI4Register_L109F13L153T14_AXI4Register_L117F17L145T18_AXI4Register_L120F21L144T22_AXI4Register_L121F37T81_Expr;
wire  AXI4Register_L80F9L155T10_AXI4Register_L109F13L153T14_AXI4Register_L117F17L145T18_AXI4Register_L120F21L144T22_AXI4Register_L121F37T81_Expr_1;
wire  AXI4Register_L80F9L155T10_AXI4Register_L109F13L153T14_AXI4Register_L117F17L145T18_AXI4Register_L120F21L144T22_AXI4Register_L121F37T81_Expr_2;
wire  AXI4Register_L46F31T81_Expr;
wire  AXI4Register_L46F31T81_Expr_1;
wire  AXI4Register_L46F31T81_Expr_2;
wire  AXI4Register_L80F9L155T10_AXI4Register_L86F13L107T14_AXI4Register_L88F17L92T23_Case;
wire signed  [2:0] AXI4Register_L80F9L155T10_AXI4Register_L86F13L107T14_AXI4Register_L88F17L92T23_CaseLhs;
wire signed  [2:0] AXI4Register_L80F9L155T10_AXI4Register_L86F13L107T14_AXI4Register_L88F17L92T23_CaseRhs;
wire  AXI4Register_L80F9L155T10_AXI4Register_L86F13L107T14_AXI4Register_L93F17L100T23_Case;
wire signed  [2:0] AXI4Register_L80F9L155T10_AXI4Register_L86F13L107T14_AXI4Register_L93F17L100T23_CaseLhs;
wire signed  [2:0] AXI4Register_L80F9L155T10_AXI4Register_L86F13L107T14_AXI4Register_L93F17L100T23_CaseRhs;
wire  AXI4Register_L80F9L155T10_AXI4Register_L86F13L107T14_AXI4Register_L101F17L106T23_Case;
wire signed  [2:0] AXI4Register_L80F9L155T10_AXI4Register_L86F13L107T14_AXI4Register_L101F17L106T23_CaseLhs;
wire signed  [2:0] AXI4Register_L80F9L155T10_AXI4Register_L86F13L107T14_AXI4Register_L101F17L106T23_CaseRhs;
wire  AXI4Register_L80F9L155T10_AXI4Register_L109F13L153T14_AXI4Register_L111F17L115T23_Case;
wire signed  [2:0] AXI4Register_L80F9L155T10_AXI4Register_L109F13L153T14_AXI4Register_L111F17L115T23_CaseLhs;
wire signed  [2:0] AXI4Register_L80F9L155T10_AXI4Register_L109F13L153T14_AXI4Register_L111F17L115T23_CaseRhs;
wire  AXI4Register_L80F9L155T10_AXI4Register_L109F13L153T14_AXI4Register_L116F17L146T23_Case;
wire signed  [2:0] AXI4Register_L80F9L155T10_AXI4Register_L109F13L153T14_AXI4Register_L116F17L146T23_CaseLhs;
wire signed  [2:0] AXI4Register_L80F9L155T10_AXI4Register_L109F13L153T14_AXI4Register_L116F17L146T23_CaseRhs;
wire  AXI4Register_L80F9L155T10_AXI4Register_L109F13L153T14_AXI4Register_L117F17L145T18_AXI4Register_L119F25T62_Expr;
wire signed  [2:0] AXI4Register_L80F9L155T10_AXI4Register_L109F13L153T14_AXI4Register_L117F17L145T18_AXI4Register_L119F25T62_ExprLhs;
wire signed  [2:0] AXI4Register_L80F9L155T10_AXI4Register_L109F13L153T14_AXI4Register_L117F17L145T18_AXI4Register_L119F25T62_ExprRhs;
wire  AXI4Register_L80F9L155T10_AXI4Register_L109F13L153T14_AXI4Register_L147F17L152T23_Case;
wire signed  [2:0] AXI4Register_L80F9L155T10_AXI4Register_L109F13L153T14_AXI4Register_L147F17L152T23_CaseLhs;
wire signed  [2:0] AXI4Register_L80F9L155T10_AXI4Register_L109F13L153T14_AXI4Register_L147F17L152T23_CaseRhs;
wire  AXI4Register_L46F31T68_Expr;
wire signed  [2:0] AXI4Register_L46F31T68_ExprLhs;
wire signed  [2:0] AXI4Register_L46F31T68_ExprRhs;
wire  AXI4Register_L52F27T64_Expr;
wire signed  [2:0] AXI4Register_L52F27T64_ExprLhs;
wire signed  [2:0] AXI4Register_L52F27T64_ExprRhs;
wire  AXI4Register_L58F26T61_Expr;
wire signed  [2:0] AXI4Register_L58F26T61_ExprLhs;
wire signed  [2:0] AXI4Register_L58F26T61_ExprRhs;
wire  AXI4Register_L64F27T66_Expr;
wire signed  [2:0] AXI4Register_L64F27T66_ExprLhs;
wire signed  [2:0] AXI4Register_L64F27T66_ExprRhs;
wire  AXI4Register_L68F26T65_Expr;
wire signed  [2:0] AXI4Register_L68F26T65_ExprLhs;
wire signed  [2:0] AXI4Register_L68F26T65_ExprRhs;
wire  AXI4Register_L75F26T63_Expr;
wire signed  [2:0] AXI4Register_L75F26T63_ExprLhs;
wire signed  [2:0] AXI4Register_L75F26T63_ExprRhs;
integer State_bytes_Iterator;
reg [7:0] State_bytes [0 : 3];
initial
begin : Init_State_bytes
	for (State_bytes_Iterator = 0; State_bytes_Iterator < 4; State_bytes_Iterator = State_bytes_Iterator + 1)
		State_bytes[State_bytes_Iterator] = 0;
end
integer NextState_bytes_Iterator;
reg [7:0] NextState_bytes [0 : 3];
initial
begin : Init_NextState_bytes
	for (NextState_bytes_Iterator = 0; NextState_bytes_Iterator < 4; NextState_bytes_Iterator = NextState_bytes_Iterator + 1)
		NextState_bytes[NextState_bytes_Iterator] = 0;
end
always @(posedge Clock)
begin
if ( Reset == 1 ) begin
State_readFSM <= State_readFSMDefault;
State_writeFSM <= State_writeFSMDefault;
end
else begin
State_readFSM <= NextState_readFSM;
State_writeFSM <= NextState_writeFSM;
end
end
always @(posedge Clock)
begin
if ( Reset == 1 ) begin
for (State_bytes_Iterator = 0; State_bytes_Iterator < 4; State_bytes_Iterator = State_bytes_Iterator + 1)
begin
State_bytes[State_bytes_Iterator] <= State_bytesDefault;
end
end
else begin
for (State_bytes_Iterator = 0; State_bytes_Iterator < 4; State_bytes_Iterator = State_bytes_Iterator + 1)
begin
State_bytes[State_bytes_Iterator] <= NextState_bytes[State_bytes_Iterator];
end
end
end
assign AXI4Register_L80F9L155T10_AXI4Register_L86F13L107T14_AXI4Register_L88F17L92T23_Case = AXI4Register_L80F9L155T10_AXI4Register_L86F13L107T14_AXI4Register_L88F17L92T23_CaseLhs == AXI4Register_L80F9L155T10_AXI4Register_L86F13L107T14_AXI4Register_L88F17L92T23_CaseRhs ? 1'b1 : 1'b0;
assign AXI4Register_L80F9L155T10_AXI4Register_L86F13L107T14_AXI4Register_L93F17L100T23_Case = AXI4Register_L80F9L155T10_AXI4Register_L86F13L107T14_AXI4Register_L93F17L100T23_CaseLhs == AXI4Register_L80F9L155T10_AXI4Register_L86F13L107T14_AXI4Register_L93F17L100T23_CaseRhs ? 1'b1 : 1'b0;
assign AXI4Register_L80F9L155T10_AXI4Register_L86F13L107T14_AXI4Register_L101F17L106T23_Case = AXI4Register_L80F9L155T10_AXI4Register_L86F13L107T14_AXI4Register_L101F17L106T23_CaseLhs == AXI4Register_L80F9L155T10_AXI4Register_L86F13L107T14_AXI4Register_L101F17L106T23_CaseRhs ? 1'b1 : 1'b0;
assign AXI4Register_L80F9L155T10_AXI4Register_L109F13L153T14_AXI4Register_L111F17L115T23_Case = AXI4Register_L80F9L155T10_AXI4Register_L109F13L153T14_AXI4Register_L111F17L115T23_CaseLhs == AXI4Register_L80F9L155T10_AXI4Register_L109F13L153T14_AXI4Register_L111F17L115T23_CaseRhs ? 1'b1 : 1'b0;
assign AXI4Register_L80F9L155T10_AXI4Register_L109F13L153T14_AXI4Register_L116F17L146T23_Case = AXI4Register_L80F9L155T10_AXI4Register_L109F13L153T14_AXI4Register_L116F17L146T23_CaseLhs == AXI4Register_L80F9L155T10_AXI4Register_L109F13L153T14_AXI4Register_L116F17L146T23_CaseRhs ? 1'b1 : 1'b0;
assign AXI4Register_L80F9L155T10_AXI4Register_L109F13L153T14_AXI4Register_L117F17L145T18_AXI4Register_L119F25T62_Expr = AXI4Register_L80F9L155T10_AXI4Register_L109F13L153T14_AXI4Register_L117F17L145T18_AXI4Register_L119F25T62_ExprLhs == AXI4Register_L80F9L155T10_AXI4Register_L109F13L153T14_AXI4Register_L117F17L145T18_AXI4Register_L119F25T62_ExprRhs ? 1'b1 : 1'b0;
assign AXI4Register_L80F9L155T10_AXI4Register_L109F13L153T14_AXI4Register_L147F17L152T23_Case = AXI4Register_L80F9L155T10_AXI4Register_L109F13L153T14_AXI4Register_L147F17L152T23_CaseLhs == AXI4Register_L80F9L155T10_AXI4Register_L109F13L153T14_AXI4Register_L147F17L152T23_CaseRhs ? 1'b1 : 1'b0;
assign AXI4Register_L46F31T68_Expr = AXI4Register_L46F31T68_ExprLhs == AXI4Register_L46F31T68_ExprRhs ? 1'b1 : 1'b0;
assign AXI4Register_L52F27T64_Expr = AXI4Register_L52F27T64_ExprLhs == AXI4Register_L52F27T64_ExprRhs ? 1'b1 : 1'b0;
assign AXI4Register_L58F26T61_Expr = AXI4Register_L58F26T61_ExprLhs == AXI4Register_L58F26T61_ExprRhs ? 1'b1 : 1'b0;
assign AXI4Register_L64F27T66_Expr = AXI4Register_L64F27T66_ExprLhs == AXI4Register_L64F27T66_ExprRhs ? 1'b1 : 1'b0;
assign AXI4Register_L68F26T65_Expr = AXI4Register_L68F26T65_ExprLhs == AXI4Register_L68F26T65_ExprRhs ? 1'b1 : 1'b0;
assign AXI4Register_L75F26T63_Expr = AXI4Register_L75F26T63_ExprLhs == AXI4Register_L75F26T63_ExprRhs ? 1'b1 : 1'b0;
assign AXI4Register_L80F9L155T10_AXI4Register_L109F13L153T14_AXI4Register_L117F17L145T18_AXI4Register_L120F21L144T22_AXI4Register_L121F37T81_Expr = AXI4Register_L80F9L155T10_AXI4Register_L109F13L153T14_AXI4Register_L117F17L145T18_AXI4Register_L120F21L144T22_AXI4Register_L121F37T81_Expr_1 & AXI4Register_L80F9L155T10_AXI4Register_L109F13L153T14_AXI4Register_L117F17L145T18_AXI4Register_L120F21L144T22_AXI4Register_L121F37T81_Expr_2;
assign AXI4Register_L46F31T81_Expr = AXI4Register_L46F31T81_Expr_1 & AXI4Register_L46F31T81_Expr_2;
always @*
begin
for (NextState_bytes_Iterator = 0; NextState_bytes_Iterator < 4; NextState_bytes_Iterator = NextState_bytes_Iterator + 1)
begin
NextState_bytes[NextState_bytes_Iterator] = State_bytes[NextState_bytes_Iterator];
end
NextState_readFSM = State_readFSM;
NextState_writeFSM = State_writeFSM;
AXI4Register_L80F9L155T10_AXI4Register_L109F13L153T14_AXI4Register_L117F17L145T18_AXI4Register_L120F21L144T22_axiWE = Zero;
if ( AXI4Register_L80F9L155T10_AXI4Register_L86F13L107T14_AXI4Register_L88F17L92T23_Case == 1 ) begin
NextState_readFSM = { {1{1'b0}}, AXI4Register_L80F9L155T10_AXI4Register_L86F13L107T14_AXI4Register_L89F17L91T18_AXI4Register_L90F41T61_Expr }/*expand*/;
end
else if ( AXI4Register_L80F9L155T10_AXI4Register_L86F13L107T14_AXI4Register_L93F17L100T23_Case == 1 ) begin
if ( Inputs_M2S_AR_ARVALID == 1 ) begin
NextState_readFSM = AXI4Register_L80F9L155T10_AXI4Register_L86F13L107T14_AXI4Register_L94F17L99T18_AXI4Register_L96F21L98T22_AXI4Register_L97F45T63_Expr;
end
end
else if ( AXI4Register_L80F9L155T10_AXI4Register_L86F13L107T14_AXI4Register_L101F17L106T23_Case == 1 ) begin
if ( Inputs_M2S_R_RREADY == 1 ) begin
NextState_readFSM = { {1{1'b0}}, AXI4Register_L80F9L155T10_AXI4Register_L86F13L107T14_AXI4Register_L102F17L105T18_AXI4Register_L104F45T65_Expr }/*expand*/;
end
end
if ( AXI4Register_L80F9L155T10_AXI4Register_L109F13L153T14_AXI4Register_L111F17L115T23_Case == 1 ) begin
NextState_writeFSM = { {1{1'b0}}, AXI4Register_L80F9L155T10_AXI4Register_L109F13L153T14_AXI4Register_L112F17L114T18_AXI4Register_L113F42T63_Expr }/*expand*/;
end
else if ( AXI4Register_L80F9L155T10_AXI4Register_L109F13L153T14_AXI4Register_L116F17L146T23_Case == 1 ) begin
if ( AXI4Register_L80F9L155T10_AXI4Register_L109F13L153T14_AXI4Register_L117F17L145T18_AXI4Register_L119F25T62_Expr == 1 ) begin
AXI4Register_L80F9L155T10_AXI4Register_L109F13L153T14_AXI4Register_L117F17L145T18_AXI4Register_L120F21L144T22_axiWE = AXI4Register_L80F9L155T10_AXI4Register_L109F13L153T14_AXI4Register_L117F17L145T18_AXI4Register_L120F21L144T22_AXI4Register_L121F37T81_Expr;
if ( AXI4Register_L80F9L155T10_AXI4Register_L109F13L153T14_AXI4Register_L117F17L145T18_AXI4Register_L120F21L144T22_axiWE == 1 ) begin
NextState_writeFSM = AXI4Register_L80F9L155T10_AXI4Register_L109F13L153T14_AXI4Register_L117F17L145T18_AXI4Register_L120F21L144T22_AXI4Register_L125F50T69_Expr;
end
if ( Inputs_WE == 1 ) begin
NextState_bytes[AXI4Register_L80F9L155T10_AXI4Register_L109F13L153T14_AXI4Register_L117F17L145T18_AXI4Register_L120F21L144T22_AXI4Register_L130F25L135T26_AXI4Register_L131F29L134T30_0_w] = Inputs_WDATA0;
NextState_bytes[AXI4Register_L80F9L155T10_AXI4Register_L109F13L153T14_AXI4Register_L117F17L145T18_AXI4Register_L120F21L144T22_AXI4Register_L130F25L135T26_AXI4Register_L131F29L134T30_1_w] = Inputs_WDATA1;
NextState_bytes[AXI4Register_L80F9L155T10_AXI4Register_L109F13L153T14_AXI4Register_L117F17L145T18_AXI4Register_L120F21L144T22_AXI4Register_L130F25L135T26_AXI4Register_L131F29L134T30_2_w] = Inputs_WDATA2;
NextState_bytes[AXI4Register_L80F9L155T10_AXI4Register_L109F13L153T14_AXI4Register_L117F17L145T18_AXI4Register_L120F21L144T22_AXI4Register_L130F25L135T26_AXI4Register_L131F29L134T30_3_w] = Inputs_WDATA3;
end
else if ( AXI4Register_L80F9L155T10_AXI4Register_L109F13L153T14_AXI4Register_L117F17L145T18_AXI4Register_L120F21L144T22_axiWE == 1 ) begin
if ( AXI4Register_L80F9L155T10_AXI4Register_L109F13L153T14_AXI4Register_L117F17L145T18_AXI4Register_L120F21L144T22_AXI4Register_L137F25L143T26_AXI4Register_L138F29L142T30_0_AXI4Register_L139F29L142T30_AXI4Register_L140F37T58_Index == 1 ) begin
NextState_bytes[AXI4Register_L80F9L155T10_AXI4Register_L109F13L153T14_AXI4Register_L117F17L145T18_AXI4Register_L120F21L144T22_AXI4Register_L137F25L143T26_AXI4Register_L138F29L142T30_0_w] = Inputs_M2S_W_WDATA0;
end
if ( AXI4Register_L80F9L155T10_AXI4Register_L109F13L153T14_AXI4Register_L117F17L145T18_AXI4Register_L120F21L144T22_AXI4Register_L137F25L143T26_AXI4Register_L138F29L142T30_1_AXI4Register_L139F29L142T30_AXI4Register_L140F37T58_Index == 1 ) begin
NextState_bytes[AXI4Register_L80F9L155T10_AXI4Register_L109F13L153T14_AXI4Register_L117F17L145T18_AXI4Register_L120F21L144T22_AXI4Register_L137F25L143T26_AXI4Register_L138F29L142T30_1_w] = Inputs_M2S_W_WDATA1;
end
if ( AXI4Register_L80F9L155T10_AXI4Register_L109F13L153T14_AXI4Register_L117F17L145T18_AXI4Register_L120F21L144T22_AXI4Register_L137F25L143T26_AXI4Register_L138F29L142T30_2_AXI4Register_L139F29L142T30_AXI4Register_L140F37T58_Index == 1 ) begin
NextState_bytes[AXI4Register_L80F9L155T10_AXI4Register_L109F13L153T14_AXI4Register_L117F17L145T18_AXI4Register_L120F21L144T22_AXI4Register_L137F25L143T26_AXI4Register_L138F29L142T30_2_w] = Inputs_M2S_W_WDATA2;
end
if ( AXI4Register_L80F9L155T10_AXI4Register_L109F13L153T14_AXI4Register_L117F17L145T18_AXI4Register_L120F21L144T22_AXI4Register_L137F25L143T26_AXI4Register_L138F29L142T30_3_AXI4Register_L139F29L142T30_AXI4Register_L140F37T58_Index == 1 ) begin
NextState_bytes[AXI4Register_L80F9L155T10_AXI4Register_L109F13L153T14_AXI4Register_L117F17L145T18_AXI4Register_L120F21L144T22_AXI4Register_L137F25L143T26_AXI4Register_L138F29L142T30_3_w] = Inputs_M2S_W_WDATA3;
end
end
end
end
else if ( AXI4Register_L80F9L155T10_AXI4Register_L109F13L153T14_AXI4Register_L147F17L152T23_Case == 1 ) begin
if ( Inputs_M2S_B_BREADY == 1 ) begin
NextState_writeFSM = { {1{1'b0}}, AXI4Register_L80F9L155T10_AXI4Register_L109F13L153T14_AXI4Register_L148F17L151T18_AXI4Register_L150F46T67_Expr }/*expand*/;
end
end

end
assign AXI4Register_L80F9L155T10_AXI4Register_L86F13L107T14_AXI4Register_L88F17L92T23_CaseLhs = { {1{1'b0}}, State_readFSM }/*expand*/;
assign AXI4Register_L80F9L155T10_AXI4Register_L86F13L107T14_AXI4Register_L88F17L92T23_CaseRhs = { {2{1'b0}}, AXI4Register_L80F9L155T10_AXI4Register_L86F13L107T14_AXI4Register_L88F22T43_Expr }/*expand*/;
assign AXI4Register_L80F9L155T10_AXI4Register_L86F13L107T14_AXI4Register_L93F17L100T23_CaseLhs = { {1{1'b0}}, State_readFSM }/*expand*/;
assign AXI4Register_L80F9L155T10_AXI4Register_L86F13L107T14_AXI4Register_L93F17L100T23_CaseRhs = { {2{1'b0}}, AXI4Register_L80F9L155T10_AXI4Register_L86F13L107T14_AXI4Register_L93F22T42_Expr }/*expand*/;
assign AXI4Register_L80F9L155T10_AXI4Register_L86F13L107T14_AXI4Register_L101F17L106T23_CaseLhs = { {1{1'b0}}, State_readFSM }/*expand*/;
assign AXI4Register_L80F9L155T10_AXI4Register_L86F13L107T14_AXI4Register_L101F17L106T23_CaseRhs = { {1{1'b0}}, AXI4Register_L80F9L155T10_AXI4Register_L86F13L107T14_AXI4Register_L101F22T40_Expr }/*expand*/;
assign AXI4Register_L80F9L155T10_AXI4Register_L109F13L153T14_AXI4Register_L111F17L115T23_CaseLhs = { {1{1'b0}}, State_writeFSM }/*expand*/;
assign AXI4Register_L80F9L155T10_AXI4Register_L109F13L153T14_AXI4Register_L111F17L115T23_CaseRhs = { {2{1'b0}}, AXI4Register_L80F9L155T10_AXI4Register_L109F13L153T14_AXI4Register_L111F22T44_Expr }/*expand*/;
assign AXI4Register_L80F9L155T10_AXI4Register_L109F13L153T14_AXI4Register_L116F17L146T23_CaseLhs = { {1{1'b0}}, State_writeFSM }/*expand*/;
assign AXI4Register_L80F9L155T10_AXI4Register_L109F13L153T14_AXI4Register_L116F17L146T23_CaseRhs = { {2{1'b0}}, AXI4Register_L80F9L155T10_AXI4Register_L109F13L153T14_AXI4Register_L116F22T43_Expr }/*expand*/;
assign AXI4Register_L80F9L155T10_AXI4Register_L109F13L153T14_AXI4Register_L117F17L145T18_AXI4Register_L119F25T62_ExprLhs = { {1{1'b0}}, State_readFSM }/*expand*/;
assign AXI4Register_L80F9L155T10_AXI4Register_L109F13L153T14_AXI4Register_L117F17L145T18_AXI4Register_L119F25T62_ExprRhs = { {2{1'b0}}, AXI4Register_L80F9L155T10_AXI4Register_L109F13L153T14_AXI4Register_L117F17L145T18_AXI4Register_L119F42T62_Expr }/*expand*/;
assign AXI4Register_L80F9L155T10_AXI4Register_L109F13L153T14_AXI4Register_L147F17L152T23_CaseLhs = { {1{1'b0}}, State_writeFSM }/*expand*/;
assign AXI4Register_L80F9L155T10_AXI4Register_L109F13L153T14_AXI4Register_L147F17L152T23_CaseRhs = { {1{1'b0}}, AXI4Register_L80F9L155T10_AXI4Register_L109F13L153T14_AXI4Register_L147F22T41_Expr }/*expand*/;
assign AXI4Register_L46F31T68_ExprLhs = { {1{1'b0}}, State_readFSM }/*expand*/;
assign AXI4Register_L46F31T68_ExprRhs = { {2{1'b0}}, AXI4Register_L46F48T68_Expr }/*expand*/;
assign AXI4Register_L52F27T64_ExprLhs = { {1{1'b0}}, State_readFSM }/*expand*/;
assign AXI4Register_L52F27T64_ExprRhs = { {2{1'b0}}, AXI4Register_L52F44T64_Expr }/*expand*/;
assign AXI4Register_L58F26T61_ExprLhs = { {1{1'b0}}, State_readFSM }/*expand*/;
assign AXI4Register_L58F26T61_ExprRhs = { {1{1'b0}}, AXI4Register_L58F43T61_Expr }/*expand*/;
assign AXI4Register_L64F27T66_ExprLhs = { {1{1'b0}}, State_writeFSM }/*expand*/;
assign AXI4Register_L64F27T66_ExprRhs = { {2{1'b0}}, AXI4Register_L64F45T66_Expr }/*expand*/;
assign AXI4Register_L68F26T65_ExprLhs = { {1{1'b0}}, State_writeFSM }/*expand*/;
assign AXI4Register_L68F26T65_ExprRhs = { {2{1'b0}}, AXI4Register_L68F44T65_Expr }/*expand*/;
assign AXI4Register_L75F26T63_ExprLhs = { {1{1'b0}}, State_writeFSM }/*expand*/;
assign AXI4Register_L75F26T63_ExprRhs = { {1{1'b0}}, AXI4Register_L75F44T63_Expr }/*expand*/;
assign AXI4Register_L80F9L155T10_AXI4Register_L109F13L153T14_AXI4Register_L117F17L145T18_AXI4Register_L120F21L144T22_AXI4Register_L121F37T81_Expr_1 = Inputs_M2S_AW_AWVALID;
assign AXI4Register_L80F9L155T10_AXI4Register_L109F13L153T14_AXI4Register_L117F17L145T18_AXI4Register_L120F21L144T22_AXI4Register_L121F37T81_Expr_2 = Inputs_M2S_W_WVALID;
assign AXI4Register_L46F31T81_Expr_1 = AXI4Register_L46F31T68_Expr;
assign AXI4Register_L46F31T81_Expr_2 = Inputs_WE;
assign Inputs_M2S_AR_ARID = M2S_AR_ARID;
assign Inputs_M2S_AR_ARADDR = M2S_AR_ARADDR;
assign Inputs_M2S_AR_ARLEN = M2S_AR_ARLEN;
assign Inputs_M2S_AR_ARSIZE = M2S_AR_ARSIZE;
assign Inputs_M2S_AR_ARBURST = M2S_AR_ARBURST;
assign Inputs_M2S_AR_ARLOCK = M2S_AR_ARLOCK;
assign Inputs_M2S_AR_ARCACHE = M2S_AR_ARCACHE;
assign Inputs_M2S_AR_ARPROT = M2S_AR_ARPROT;
assign Inputs_M2S_AR_ARQOS = M2S_AR_ARQOS;
assign Inputs_M2S_AR_ARREGION = M2S_AR_ARREGION;
assign Inputs_M2S_AR_ARUSER = M2S_AR_ARUSER;
assign Inputs_M2S_AR_ARVALID = M2S_AR_ARVALID;
assign Inputs_M2S_R_RREADY = M2S_R_RREADY;
assign Inputs_M2S_AW_AWID = M2S_AW_AWID;
assign Inputs_M2S_AW_AWADDR = M2S_AW_AWADDR;
assign Inputs_M2S_AW_AWLEN = M2S_AW_AWLEN;
assign Inputs_M2S_AW_AWSIZE = M2S_AW_AWSIZE;
assign Inputs_M2S_AW_AWBURST = M2S_AW_AWBURST;
assign Inputs_M2S_AW_AWLOCK = M2S_AW_AWLOCK;
assign Inputs_M2S_AW_AWCACHE = M2S_AW_AWCACHE;
assign Inputs_M2S_AW_AWPROT = M2S_AW_AWPROT;
assign Inputs_M2S_AW_AWQOS = M2S_AW_AWQOS;
assign Inputs_M2S_AW_AWREGION = M2S_AW_AWREGION;
assign Inputs_M2S_AW_AWUSER = M2S_AW_AWUSER;
assign Inputs_M2S_AW_AWVALID = M2S_AW_AWVALID;
assign Inputs_M2S_W_WID = M2S_W_WID;
assign Inputs_M2S_W_WDATA0 = M2S_W_WDATA0;
assign Inputs_M2S_W_WDATA1 = M2S_W_WDATA1;
assign Inputs_M2S_W_WDATA2 = M2S_W_WDATA2;
assign Inputs_M2S_W_WDATA3 = M2S_W_WDATA3;
assign Inputs_M2S_W_WSTRB = M2S_W_WSTRB;
assign Inputs_M2S_W_WLAST = M2S_W_WLAST;
assign Inputs_M2S_W_WUSER = M2S_W_WUSER;
assign Inputs_M2S_W_WVALID = M2S_W_WVALID;
assign Inputs_M2S_B_BREADY = M2S_B_BREADY;
assign Inputs_WE = WE;
assign Inputs_WDATA0 = WDATA0;
assign Inputs_WDATA1 = WDATA1;
assign Inputs_WDATA2 = WDATA2;
assign Inputs_WDATA3 = WDATA3;
assign AXI4Register_L80F9L155T10_AXI4Register_L109F13L153T14_AXI4Register_L117F17L145T18_AXI4Register_L120F21L144T22_AXI4Register_L137F25L143T26_AXI4Register_L138F29L142T30_0_AXI4Register_L139F29L142T30_AXI4Register_L140F37T58_Index = Inputs_M2S_W_WSTRB[AXI4Register_L80F9L155T10_AXI4Register_L109F13L153T14_AXI4Register_L117F17L145T18_AXI4Register_L120F21L144T22_AXI4Register_L137F25L143T26_AXI4Register_L138F29L142T30_0_w];
assign AXI4Register_L80F9L155T10_AXI4Register_L109F13L153T14_AXI4Register_L117F17L145T18_AXI4Register_L120F21L144T22_AXI4Register_L137F25L143T26_AXI4Register_L138F29L142T30_1_AXI4Register_L139F29L142T30_AXI4Register_L140F37T58_Index = Inputs_M2S_W_WSTRB[AXI4Register_L80F9L155T10_AXI4Register_L109F13L153T14_AXI4Register_L117F17L145T18_AXI4Register_L120F21L144T22_AXI4Register_L137F25L143T26_AXI4Register_L138F29L142T30_1_w];
assign AXI4Register_L80F9L155T10_AXI4Register_L109F13L153T14_AXI4Register_L117F17L145T18_AXI4Register_L120F21L144T22_AXI4Register_L137F25L143T26_AXI4Register_L138F29L142T30_2_AXI4Register_L139F29L142T30_AXI4Register_L140F37T58_Index = Inputs_M2S_W_WSTRB[AXI4Register_L80F9L155T10_AXI4Register_L109F13L153T14_AXI4Register_L117F17L145T18_AXI4Register_L120F21L144T22_AXI4Register_L137F25L143T26_AXI4Register_L138F29L142T30_2_w];
assign AXI4Register_L80F9L155T10_AXI4Register_L109F13L153T14_AXI4Register_L117F17L145T18_AXI4Register_L120F21L144T22_AXI4Register_L137F25L143T26_AXI4Register_L138F29L142T30_3_AXI4Register_L139F29L142T30_AXI4Register_L140F37T58_Index = Inputs_M2S_W_WSTRB[AXI4Register_L80F9L155T10_AXI4Register_L109F13L153T14_AXI4Register_L117F17L145T18_AXI4Register_L120F21L144T22_AXI4Register_L137F25L143T26_AXI4Register_L138F29L142T30_3_w];
assign OutACK = AXI4Register_L46F31T81_Expr;
assign S2M_AR_ARREADY = AXI4Register_L52F27T64_Expr;
assign S2M_AW_AWREADY = AXI4Register_L64F27T66_Expr;
assign S2M_B_BID = Inputs_M2S_W_WID;
assign S2M_B_BRESP = { {1{1'b0}}, AXI4Register_L73F25T37_Expr }/*expand*/;
assign S2M_B_BUSER = Inputs_M2S_W_WUSER;
assign S2M_B_BVALID = AXI4Register_L75F26T63_Expr;
assign S2M_R_RID = Inputs_M2S_AR_ARID;
assign S2M_R_RRESP = { {1{1'b0}}, AXI4Register_L60F25T37_Expr }/*expand*/;
assign S2M_R_RLAST = AXI4_S_R_L12F29T33_Expr;
assign S2M_R_RUSER = Inputs_M2S_AR_ARUSER;
assign S2M_R_RVALID = AXI4Register_L58F26T61_Expr;
assign S2M_W_WREADY = AXI4Register_L68F26T65_Expr;
// [BEGIN USER ARCHITECTURE]
// [END USER ARCHITECTURE]
endmodule
