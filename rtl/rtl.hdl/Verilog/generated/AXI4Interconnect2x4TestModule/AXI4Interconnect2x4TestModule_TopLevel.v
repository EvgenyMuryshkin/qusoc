`timescale 1ns/1ps
`default_nettype none
// PLEASE READ THIS, IT MAY SAVE YOU SOME TIME AND MONEY, THANK YOU!
// * This file was generated by Quokka FPGA Toolkit.
// * Generated code is your property, do whatever you want with it
// * Place custom code between [BEGIN USER ***] and [END USER ***].
// * CAUTION: All code outside of [USER] scope is subject to regeneration.
// * Bad things happen sometimes in developer's life,
//   it is recommended to use source control management software (e.g. git, bzr etc) to keep your custom code safe'n'sound.
// * Internal structure of code is subject to change.
//   You can use some of signals in custom code, but most likely they will not exist in future (e.g. will get shorter or gone completely)
// * Please send your feedback, comments, improvement ideas etc. to evmuryshkin@gmail.com
// * Visit https://github.com/EvgenyMuryshkin/QuokkaEvaluation to access latest version of playground
//
// DISCLAIMER:
//   Code comes AS-IS, it is your responsibility to make sure it is working as expected
//   no responsibility will be taken for any loss or damage caused by use of Quokka toolkit.
//
// System configuration name is AXI4Interconnect2x4TestModule_TopLevel, clock frequency is 1Hz, Top-level
// FSM summary
// -- Packages
module AXI4Interconnect2x4TestModule_TopLevel
(
	// [BEGIN USER PORTS]
	// [END USER PORTS]
	input wire Clock,
	input wire Reset,
	input wire [31:0] InData,
	input wire MRE0,
	input wire MRE1,
	input wire MWE0,
	input wire MWE1,
	input wire SWE0,
	input wire SWE1,
	input wire SWE2,
	input wire SWE3,
	input wire [3:0] WSTRB
);
	// [BEGIN USER SIGNALS]
	// [END USER SIGNALS]
	localparam HiSignal = 1'b1;
	localparam LoSignal = 1'b0;
	wire Zero = 1'b0;
	wire One = 1'b1;
	wire true = 1'b1;
	wire false = 1'b0;
	wire [1: 0] axiSize = 2'b10;
	wire signed [2: 0] mCount = 3'b010;
	wire signed [3: 0] sCount = 4'b0100;
	wire AXI4Interconnect2x4TestModule_L62F13L77T14_0_AXI4Interconnect2x4TestModule_L71F34T35_Expr = 1'b0;
	wire AXI4Interconnect2x4TestModule_L62F13L77T14_0_AXI4Interconnect2x4TestModule_L72F34T35_Expr = 1'b0;
	wire AXI4Interconnect2x4TestModule_L62F13L77T14_1_AXI4Interconnect2x4TestModule_L71F34T35_Expr = 1'b0;
	wire AXI4Interconnect2x4TestModule_L62F13L77T14_1_AXI4Interconnect2x4TestModule_L72F34T35_Expr = 1'b0;
	wire [31: 0] Inputs_InData;
	wire [3: 0] Inputs_WSTRB;
	reg [7: 0] notActiveM2S_R_AR_ARID;
	reg [31: 0] notActiveM2S_R_AR_ARADDR;
	reg [7: 0] notActiveM2S_R_AR_ARLEN;
	reg [2: 0] notActiveM2S_R_AR_ARSIZE;
	reg [1: 0] notActiveM2S_R_AR_ARBURST;
	reg [1: 0] notActiveM2S_R_AR_ARLOCK;
	reg [3: 0] notActiveM2S_R_AR_ARCACHE;
	reg [2: 0] notActiveM2S_R_AR_ARPROT;
	reg [3: 0] notActiveM2S_R_AR_ARQOS;
	reg [7: 0] notActiveM2S_R_AR_ARREGION;
	reg [7: 0] notActiveM2S_R_AR_ARUSER;
	reg notActiveM2S_R_AR_ARVALID;
	reg notActiveM2S_R_R_RREADY;
	reg [7: 0] notActiveM2S_W_AW_AWID;
	reg [31: 0] notActiveM2S_W_AW_AWADDR;
	reg [7: 0] notActiveM2S_W_AW_AWLEN;
	reg [2: 0] notActiveM2S_W_AW_AWSIZE;
	reg [1: 0] notActiveM2S_W_AW_AWBURST;
	reg [1: 0] notActiveM2S_W_AW_AWLOCK;
	reg [3: 0] notActiveM2S_W_AW_AWCACHE;
	reg [2: 0] notActiveM2S_W_AW_AWPROT;
	reg [3: 0] notActiveM2S_W_AW_AWQOS;
	reg [7: 0] notActiveM2S_W_AW_AWREGION;
	reg [7: 0] notActiveM2S_W_AW_AWUSER;
	reg notActiveM2S_W_AW_AWVALID;
	reg [7: 0] notActiveM2S_W_W_WID;
	reg [3: 0] notActiveM2S_W_W_WSTRB;
	reg notActiveM2S_W_W_WLAST;
	reg [7: 0] notActiveM2S_W_W_WUSER;
	reg notActiveM2S_W_W_WVALID;
	reg notActiveM2S_W_B_BREADY;
	reg notActiveS2M_R_AR_ARREADY;
	reg [7: 0] notActiveS2M_R_R_RID;
	reg [1: 0] notActiveS2M_R_R_RRESP;
	reg notActiveS2M_R_R_RLAST;
	reg [7: 0] notActiveS2M_R_R_RUSER;
	reg notActiveS2M_R_R_RVALID;
	reg notActiveS2M_W_AW_AWREADY;
	reg [7: 0] notActiveS2M_W_B_BID;
	reg [1: 0] notActiveS2M_W_B_BRESP;
	reg [7: 0] notActiveS2M_W_B_BUSER;
	reg notActiveS2M_W_B_BVALID;
	reg notActiveS2M_W_W_WREADY;
	wire [101: 0] masters0_Master;
	wire [73: 0] masters0_S2M;
	wire [221: 0] masters0_M2S;
	wire masters0_RACK;
	wire masters0_WACK;
	wire [101: 0] masters1_Master;
	wire [73: 0] masters1_S2M;
	wire [221: 0] masters1_M2S;
	wire masters1_RACK;
	wire masters1_WACK;
	wire registers0_inWE;
	wire [221: 0] registers0_M2S;
	wire registers0_outACK;
	wire registers0_outWritten;
	wire [73: 0] registers0_S2M;
	wire registers1_inWE;
	wire [221: 0] registers1_M2S;
	wire registers1_outACK;
	wire registers1_outWritten;
	wire [73: 0] registers1_S2M;
	wire registers2_inWE;
	wire [221: 0] registers2_M2S;
	wire registers2_outACK;
	wire registers2_outWritten;
	wire [73: 0] registers2_S2M;
	wire registers3_inWE;
	wire [221: 0] registers3_M2S;
	wire registers3_outACK;
	wire registers3_outWritten;
	wire [73: 0] registers3_S2M;
	wire [101: 0] masters0_Master_masters0_Master_HardLink;
	wire [73: 0] masters0_S2M_masters0_S2M_HardLink;
	wire [221: 0] masters0_M2S_masters0_M2S_HardLink;
	wire masters0_RACK_masters0_RACK_HardLink;
	wire [7: 0] masters0_RDATA0_masters0_RDATA_HardLink;
	wire [7: 0] masters0_RDATA1_masters0_RDATA_HardLink;
	wire [7: 0] masters0_RDATA2_masters0_RDATA_HardLink;
	wire [7: 0] masters0_RDATA3_masters0_RDATA_HardLink;
	wire masters0_WACK_masters0_WACK_HardLink;
	wire [101: 0] masters1_Master_masters1_Master_HardLink;
	wire [73: 0] masters1_S2M_masters1_S2M_HardLink;
	wire [221: 0] masters1_M2S_masters1_M2S_HardLink;
	wire masters1_RACK_masters1_RACK_HardLink;
	wire [7: 0] masters1_RDATA0_masters1_RDATA_HardLink;
	wire [7: 0] masters1_RDATA1_masters1_RDATA_HardLink;
	wire [7: 0] masters1_RDATA2_masters1_RDATA_HardLink;
	wire [7: 0] masters1_RDATA3_masters1_RDATA_HardLink;
	wire masters1_WACK_masters1_WACK_HardLink;
	wire [7: 0] registers0_inWDATA0_registers0_inWDATA_HardLink;
	wire [7: 0] registers0_inWDATA1_registers0_inWDATA_HardLink;
	wire [7: 0] registers0_inWDATA2_registers0_inWDATA_HardLink;
	wire [7: 0] registers0_inWDATA3_registers0_inWDATA_HardLink;
	wire registers0_inWE_registers0_inWE_HardLink;
	wire [221: 0] registers0_M2S_registers0_M2S_HardLink;
	wire registers0_outACK_registers0_outACK_HardLink;
	wire [7: 0] registers0_outData0_registers0_outData_HardLink;
	wire [7: 0] registers0_outData1_registers0_outData_HardLink;
	wire [7: 0] registers0_outData2_registers0_outData_HardLink;
	wire [7: 0] registers0_outData3_registers0_outData_HardLink;
	wire registers0_outWritten_registers0_outWritten_HardLink;
	wire [73: 0] registers0_S2M_registers0_S2M_HardLink;
	wire [7: 0] registers1_inWDATA0_registers1_inWDATA_HardLink;
	wire [7: 0] registers1_inWDATA1_registers1_inWDATA_HardLink;
	wire [7: 0] registers1_inWDATA2_registers1_inWDATA_HardLink;
	wire [7: 0] registers1_inWDATA3_registers1_inWDATA_HardLink;
	wire registers1_inWE_registers1_inWE_HardLink;
	wire [221: 0] registers1_M2S_registers1_M2S_HardLink;
	wire registers1_outACK_registers1_outACK_HardLink;
	wire [7: 0] registers1_outData0_registers1_outData_HardLink;
	wire [7: 0] registers1_outData1_registers1_outData_HardLink;
	wire [7: 0] registers1_outData2_registers1_outData_HardLink;
	wire [7: 0] registers1_outData3_registers1_outData_HardLink;
	wire registers1_outWritten_registers1_outWritten_HardLink;
	wire [73: 0] registers1_S2M_registers1_S2M_HardLink;
	wire [7: 0] registers2_inWDATA0_registers2_inWDATA_HardLink;
	wire [7: 0] registers2_inWDATA1_registers2_inWDATA_HardLink;
	wire [7: 0] registers2_inWDATA2_registers2_inWDATA_HardLink;
	wire [7: 0] registers2_inWDATA3_registers2_inWDATA_HardLink;
	wire registers2_inWE_registers2_inWE_HardLink;
	wire [221: 0] registers2_M2S_registers2_M2S_HardLink;
	wire registers2_outACK_registers2_outACK_HardLink;
	wire [7: 0] registers2_outData0_registers2_outData_HardLink;
	wire [7: 0] registers2_outData1_registers2_outData_HardLink;
	wire [7: 0] registers2_outData2_registers2_outData_HardLink;
	wire [7: 0] registers2_outData3_registers2_outData_HardLink;
	wire registers2_outWritten_registers2_outWritten_HardLink;
	wire [73: 0] registers2_S2M_registers2_S2M_HardLink;
	wire [7: 0] registers3_inWDATA0_registers3_inWDATA_HardLink;
	wire [7: 0] registers3_inWDATA1_registers3_inWDATA_HardLink;
	wire [7: 0] registers3_inWDATA2_registers3_inWDATA_HardLink;
	wire [7: 0] registers3_inWDATA3_registers3_inWDATA_HardLink;
	wire registers3_inWE_registers3_inWE_HardLink;
	wire [221: 0] registers3_M2S_registers3_M2S_HardLink;
	wire registers3_outACK_registers3_outACK_HardLink;
	wire [7: 0] registers3_outData0_registers3_outData_HardLink;
	wire [7: 0] registers3_outData1_registers3_outData_HardLink;
	wire [7: 0] registers3_outData2_registers3_outData_HardLink;
	wire [7: 0] registers3_outData3_registers3_outData_HardLink;
	wire registers3_outWritten_registers3_outWritten_HardLink;
	wire [73: 0] registers3_S2M_registers3_S2M_HardLink;
	wire Inputs_MRE [0 : 1];
	wire Inputs_MWE [0 : 1];
	wire Inputs_SWE [0 : 3];
	wire [221 : 0] interconnectM2S [0 : 1];
	reg [137 : 0] interconnectS2M [0 : 3];
	integer interconnectS2M_i;
	initial
	begin : Init_interconnectS2M
		for (interconnectS2M_i = 0; interconnectS2M_i < 4; interconnectS2M_i = interconnectS2M_i + 1)
			interconnectS2M[interconnectS2M_i] = 0;
	end
	reg [7 : 0] notActiveM2S_W_W_WDATA [0 : 3];
	integer notActiveM2S_W_W_WDATA_i;
	initial
	begin : Init_notActiveM2S_W_W_WDATA
		for (notActiveM2S_W_W_WDATA_i = 0; notActiveM2S_W_W_WDATA_i < 4; notActiveM2S_W_W_WDATA_i = notActiveM2S_W_W_WDATA_i + 1)
			notActiveM2S_W_W_WDATA[notActiveM2S_W_W_WDATA_i] = 0;
	end
	reg [7 : 0] notActiveS2M_R_R_RDATA [0 : 3];
	integer notActiveS2M_R_R_RDATA_i;
	initial
	begin : Init_notActiveS2M_R_R_RDATA
		for (notActiveS2M_R_R_RDATA_i = 0; notActiveS2M_R_R_RDATA_i < 4; notActiveS2M_R_R_RDATA_i = notActiveS2M_R_R_RDATA_i + 1)
			notActiveS2M_R_R_RDATA[notActiveS2M_R_R_RDATA_i] = 0;
	end
	wire [7 : 0] masters0_RDATA [0 : 3];
	wire [7 : 0] masters1_RDATA [0 : 3];
	wire [7 : 0] registers0_inWDATA [0 : 3];
	wire [7 : 0] registers0_outData [0 : 3];
	wire [7 : 0] registers1_inWDATA [0 : 3];
	wire [7 : 0] registers1_outData [0 : 3];
	wire [7 : 0] registers2_inWDATA [0 : 3];
	wire [7 : 0] registers2_outData [0 : 3];
	wire [7 : 0] registers3_inWDATA [0 : 3];
	wire [7 : 0] registers3_outData [0 : 3];
	wire [221 : 0] AXI4Interconnect2x4TestModule_L46F39T75_Enumerable [0 : 1];
	wire BoardSignals_Clock;
	wire BoardSignals_Reset;
	wire BoardSignals_Running;
	wire BoardSignals_Starting;
	wire BoardSignals_Started;
	reg InternalReset = 1'b0;
	work_Quokka_BoardSignalsProc BoardSignalsConnection(BoardSignals_Clock, BoardSignals_Reset, BoardSignals_Running, BoardSignals_Starting, BoardSignals_Started, Clock, Reset, InternalReset);
	AXI4Interconnect2x4TestModule_TopLevel_masters0
	AXI4Interconnect2x4TestModule_TopLevel_masters0
	(
		// [BEGIN USER MAP FOR masters0]
		// [END USER MAP FOR masters0]
		.BoardSignals_Clock (BoardSignals_Clock),
		.BoardSignals_Reset (BoardSignals_Reset),
		.BoardSignals_Running (BoardSignals_Running),
		.BoardSignals_Starting (BoardSignals_Starting),
		.BoardSignals_Started (BoardSignals_Started),
		.Master (masters0_Master_masters0_Master_HardLink),
		.S2M (masters0_S2M_masters0_S2M_HardLink),
		.M2S (masters0_M2S_masters0_M2S_HardLink),
		.RACK (masters0_RACK_masters0_RACK_HardLink),
		.RDATA0 (masters0_RDATA0_masters0_RDATA_HardLink),
		.RDATA1 (masters0_RDATA1_masters0_RDATA_HardLink),
		.RDATA2 (masters0_RDATA2_masters0_RDATA_HardLink),
		.RDATA3 (masters0_RDATA3_masters0_RDATA_HardLink),
		.WACK (masters0_WACK_masters0_WACK_HardLink)
	);
	AXI4Interconnect2x4TestModule_TopLevel_masters1
	AXI4Interconnect2x4TestModule_TopLevel_masters1
	(
		// [BEGIN USER MAP FOR masters1]
		// [END USER MAP FOR masters1]
		.BoardSignals_Clock (BoardSignals_Clock),
		.BoardSignals_Reset (BoardSignals_Reset),
		.BoardSignals_Running (BoardSignals_Running),
		.BoardSignals_Starting (BoardSignals_Starting),
		.BoardSignals_Started (BoardSignals_Started),
		.Master (masters1_Master_masters1_Master_HardLink),
		.S2M (masters1_S2M_masters1_S2M_HardLink),
		.M2S (masters1_M2S_masters1_M2S_HardLink),
		.RACK (masters1_RACK_masters1_RACK_HardLink),
		.RDATA0 (masters1_RDATA0_masters1_RDATA_HardLink),
		.RDATA1 (masters1_RDATA1_masters1_RDATA_HardLink),
		.RDATA2 (masters1_RDATA2_masters1_RDATA_HardLink),
		.RDATA3 (masters1_RDATA3_masters1_RDATA_HardLink),
		.WACK (masters1_WACK_masters1_WACK_HardLink)
	);
	AXI4Interconnect2x4TestModule_TopLevel_registers0
	AXI4Interconnect2x4TestModule_TopLevel_registers0
	(
		// [BEGIN USER MAP FOR registers0]
		// [END USER MAP FOR registers0]
		.BoardSignals_Clock (BoardSignals_Clock),
		.BoardSignals_Reset (BoardSignals_Reset),
		.BoardSignals_Running (BoardSignals_Running),
		.BoardSignals_Starting (BoardSignals_Starting),
		.BoardSignals_Started (BoardSignals_Started),
		.inWDATA0 (registers0_inWDATA0_registers0_inWDATA_HardLink),
		.inWDATA1 (registers0_inWDATA1_registers0_inWDATA_HardLink),
		.inWDATA2 (registers0_inWDATA2_registers0_inWDATA_HardLink),
		.inWDATA3 (registers0_inWDATA3_registers0_inWDATA_HardLink),
		.inWE (registers0_inWE_registers0_inWE_HardLink),
		.M2S (registers0_M2S_registers0_M2S_HardLink),
		.outACK (registers0_outACK_registers0_outACK_HardLink),
		.outData0 (registers0_outData0_registers0_outData_HardLink),
		.outData1 (registers0_outData1_registers0_outData_HardLink),
		.outData2 (registers0_outData2_registers0_outData_HardLink),
		.outData3 (registers0_outData3_registers0_outData_HardLink),
		.outWritten (registers0_outWritten_registers0_outWritten_HardLink),
		.S2M (registers0_S2M_registers0_S2M_HardLink)
	);
	AXI4Interconnect2x4TestModule_TopLevel_registers1
	AXI4Interconnect2x4TestModule_TopLevel_registers1
	(
		// [BEGIN USER MAP FOR registers1]
		// [END USER MAP FOR registers1]
		.BoardSignals_Clock (BoardSignals_Clock),
		.BoardSignals_Reset (BoardSignals_Reset),
		.BoardSignals_Running (BoardSignals_Running),
		.BoardSignals_Starting (BoardSignals_Starting),
		.BoardSignals_Started (BoardSignals_Started),
		.inWDATA0 (registers1_inWDATA0_registers1_inWDATA_HardLink),
		.inWDATA1 (registers1_inWDATA1_registers1_inWDATA_HardLink),
		.inWDATA2 (registers1_inWDATA2_registers1_inWDATA_HardLink),
		.inWDATA3 (registers1_inWDATA3_registers1_inWDATA_HardLink),
		.inWE (registers1_inWE_registers1_inWE_HardLink),
		.M2S (registers1_M2S_registers1_M2S_HardLink),
		.outACK (registers1_outACK_registers1_outACK_HardLink),
		.outData0 (registers1_outData0_registers1_outData_HardLink),
		.outData1 (registers1_outData1_registers1_outData_HardLink),
		.outData2 (registers1_outData2_registers1_outData_HardLink),
		.outData3 (registers1_outData3_registers1_outData_HardLink),
		.outWritten (registers1_outWritten_registers1_outWritten_HardLink),
		.S2M (registers1_S2M_registers1_S2M_HardLink)
	);
	AXI4Interconnect2x4TestModule_TopLevel_registers2
	AXI4Interconnect2x4TestModule_TopLevel_registers2
	(
		// [BEGIN USER MAP FOR registers2]
		// [END USER MAP FOR registers2]
		.BoardSignals_Clock (BoardSignals_Clock),
		.BoardSignals_Reset (BoardSignals_Reset),
		.BoardSignals_Running (BoardSignals_Running),
		.BoardSignals_Starting (BoardSignals_Starting),
		.BoardSignals_Started (BoardSignals_Started),
		.inWDATA0 (registers2_inWDATA0_registers2_inWDATA_HardLink),
		.inWDATA1 (registers2_inWDATA1_registers2_inWDATA_HardLink),
		.inWDATA2 (registers2_inWDATA2_registers2_inWDATA_HardLink),
		.inWDATA3 (registers2_inWDATA3_registers2_inWDATA_HardLink),
		.inWE (registers2_inWE_registers2_inWE_HardLink),
		.M2S (registers2_M2S_registers2_M2S_HardLink),
		.outACK (registers2_outACK_registers2_outACK_HardLink),
		.outData0 (registers2_outData0_registers2_outData_HardLink),
		.outData1 (registers2_outData1_registers2_outData_HardLink),
		.outData2 (registers2_outData2_registers2_outData_HardLink),
		.outData3 (registers2_outData3_registers2_outData_HardLink),
		.outWritten (registers2_outWritten_registers2_outWritten_HardLink),
		.S2M (registers2_S2M_registers2_S2M_HardLink)
	);
	AXI4Interconnect2x4TestModule_TopLevel_registers3
	AXI4Interconnect2x4TestModule_TopLevel_registers3
	(
		// [BEGIN USER MAP FOR registers3]
		// [END USER MAP FOR registers3]
		.BoardSignals_Clock (BoardSignals_Clock),
		.BoardSignals_Reset (BoardSignals_Reset),
		.BoardSignals_Running (BoardSignals_Running),
		.BoardSignals_Starting (BoardSignals_Starting),
		.BoardSignals_Started (BoardSignals_Started),
		.inWDATA0 (registers3_inWDATA0_registers3_inWDATA_HardLink),
		.inWDATA1 (registers3_inWDATA1_registers3_inWDATA_HardLink),
		.inWDATA2 (registers3_inWDATA2_registers3_inWDATA_HardLink),
		.inWDATA3 (registers3_inWDATA3_registers3_inWDATA_HardLink),
		.inWE (registers3_inWE_registers3_inWE_HardLink),
		.M2S (registers3_M2S_registers3_M2S_HardLink),
		.outACK (registers3_outACK_registers3_outACK_HardLink),
		.outData0 (registers3_outData0_registers3_outData_HardLink),
		.outData1 (registers3_outData1_registers3_outData_HardLink),
		.outData2 (registers3_outData2_registers3_outData_HardLink),
		.outData3 (registers3_outData3_registers3_outData_HardLink),
		.outWritten (registers3_outWritten_registers3_outWritten_HardLink),
		.S2M (registers3_S2M_registers3_S2M_HardLink)
	);
	assign Inputs_InData = InData;
	assign Inputs_MRE[0] = MRE0;
	assign Inputs_MRE[1] = MRE1;
	assign Inputs_MWE[0] = MWE0;
	assign Inputs_MWE[1] = MWE1;
	assign Inputs_SWE[0] = SWE0;
	assign Inputs_SWE[1] = SWE1;
	assign Inputs_SWE[2] = SWE2;
	assign Inputs_SWE[3] = SWE3;
	assign Inputs_WSTRB = WSTRB;
	assign AXI4Interconnect2x4TestModule_L46F39T75_Enumerable[0] = masters0_M2S;
	assign AXI4Interconnect2x4TestModule_L46F39T75_Enumerable[1] = masters1_M2S;
	assign interconnectM2S[0] = AXI4Interconnect2x4TestModule_L46F39T75_Enumerable[0];
	assign interconnectM2S[1] = AXI4Interconnect2x4TestModule_L46F39T75_Enumerable[1];
	assign masters0_Master[101:98] = Inputs_WSTRB;
	assign masters0_Master[97] = Inputs_MWE[0];
	assign masters0_Master[96:65] = Inputs_InData;
	assign masters0_Master[64] = Inputs_MRE[0];
	assign masters0_Master[63:32] = { {31{1'b0}}, AXI4Interconnect2x4TestModule_L62F13L77T14_0_AXI4Interconnect2x4TestModule_L72F34T35_Expr };
	assign masters0_Master[31:0] = { {31{1'b0}}, AXI4Interconnect2x4TestModule_L62F13L77T14_0_AXI4Interconnect2x4TestModule_L71F34T35_Expr };
	assign masters0_S2M[73] = notActiveS2M_W_W_WREADY;
	assign masters0_S2M[72] = notActiveS2M_W_B_BVALID;
	assign masters0_S2M[71:64] = notActiveS2M_W_B_BUSER;
	assign masters0_S2M[63:62] = notActiveS2M_W_B_BRESP;
	assign masters0_S2M[61:54] = notActiveS2M_W_B_BID;
	assign masters0_S2M[53] = notActiveS2M_W_AW_AWREADY;
	assign masters0_S2M[52] = notActiveS2M_R_R_RVALID;
	assign masters0_S2M[51:44] = notActiveS2M_R_R_RUSER;
	assign masters0_S2M[43] = notActiveS2M_R_R_RLAST;
	assign masters0_S2M[42:41] = notActiveS2M_R_R_RRESP;
	assign masters0_S2M[40:33] = notActiveS2M_R_R_RDATA[3];
	assign masters0_S2M[32:25] = notActiveS2M_R_R_RDATA[2];
	assign masters0_S2M[24:17] = notActiveS2M_R_R_RDATA[1];
	assign masters0_S2M[16:9] = notActiveS2M_R_R_RDATA[0];
	assign masters0_S2M[8:1] = notActiveS2M_R_R_RID;
	assign masters0_S2M[0] = notActiveS2M_R_AR_ARREADY;
	assign masters1_Master[101:98] = Inputs_WSTRB;
	assign masters1_Master[97] = Inputs_MWE[1];
	assign masters1_Master[96:65] = Inputs_InData;
	assign masters1_Master[64] = Inputs_MRE[1];
	assign masters1_Master[63:32] = { {31{1'b0}}, AXI4Interconnect2x4TestModule_L62F13L77T14_1_AXI4Interconnect2x4TestModule_L72F34T35_Expr };
	assign masters1_Master[31:0] = { {31{1'b0}}, AXI4Interconnect2x4TestModule_L62F13L77T14_1_AXI4Interconnect2x4TestModule_L71F34T35_Expr };
	assign masters1_S2M[73] = notActiveS2M_W_W_WREADY;
	assign masters1_S2M[72] = notActiveS2M_W_B_BVALID;
	assign masters1_S2M[71:64] = notActiveS2M_W_B_BUSER;
	assign masters1_S2M[63:62] = notActiveS2M_W_B_BRESP;
	assign masters1_S2M[61:54] = notActiveS2M_W_B_BID;
	assign masters1_S2M[53] = notActiveS2M_W_AW_AWREADY;
	assign masters1_S2M[52] = notActiveS2M_R_R_RVALID;
	assign masters1_S2M[51:44] = notActiveS2M_R_R_RUSER;
	assign masters1_S2M[43] = notActiveS2M_R_R_RLAST;
	assign masters1_S2M[42:41] = notActiveS2M_R_R_RRESP;
	assign masters1_S2M[40:33] = notActiveS2M_R_R_RDATA[3];
	assign masters1_S2M[32:25] = notActiveS2M_R_R_RDATA[2];
	assign masters1_S2M[24:17] = notActiveS2M_R_R_RDATA[1];
	assign masters1_S2M[16:9] = notActiveS2M_R_R_RDATA[0];
	assign masters1_S2M[8:1] = notActiveS2M_R_R_RID;
	assign masters1_S2M[0] = notActiveS2M_R_AR_ARREADY;
	assign registers0_inWDATA[3] = Inputs_InData[31:24];
	assign registers0_inWDATA[2] = Inputs_InData[23:16];
	assign registers0_inWDATA[1] = Inputs_InData[15:8];
	assign registers0_inWDATA[0] = Inputs_InData[7:0];
	assign registers0_inWE = Inputs_SWE[0];
	assign registers0_M2S[221] = notActiveM2S_W_B_BREADY;
	assign registers0_M2S[220] = notActiveM2S_W_W_WVALID;
	assign registers0_M2S[219:212] = notActiveM2S_W_W_WUSER;
	assign registers0_M2S[211] = notActiveM2S_W_W_WLAST;
	assign registers0_M2S[210:207] = notActiveM2S_W_W_WSTRB;
	assign registers0_M2S[206:199] = notActiveM2S_W_W_WDATA[3];
	assign registers0_M2S[198:191] = notActiveM2S_W_W_WDATA[2];
	assign registers0_M2S[190:183] = notActiveM2S_W_W_WDATA[1];
	assign registers0_M2S[182:175] = notActiveM2S_W_W_WDATA[0];
	assign registers0_M2S[174:167] = notActiveM2S_W_W_WID;
	assign registers0_M2S[166] = notActiveM2S_W_AW_AWVALID;
	assign registers0_M2S[165:158] = notActiveM2S_W_AW_AWUSER;
	assign registers0_M2S[157:150] = notActiveM2S_W_AW_AWREGION;
	assign registers0_M2S[149:146] = notActiveM2S_W_AW_AWQOS;
	assign registers0_M2S[145:143] = notActiveM2S_W_AW_AWPROT;
	assign registers0_M2S[142:139] = notActiveM2S_W_AW_AWCACHE;
	assign registers0_M2S[138:137] = notActiveM2S_W_AW_AWLOCK;
	assign registers0_M2S[136:135] = notActiveM2S_W_AW_AWBURST;
	assign registers0_M2S[134:132] = notActiveM2S_W_AW_AWSIZE;
	assign registers0_M2S[131:124] = notActiveM2S_W_AW_AWLEN;
	assign registers0_M2S[123:92] = notActiveM2S_W_AW_AWADDR;
	assign registers0_M2S[91:84] = notActiveM2S_W_AW_AWID;
	assign registers0_M2S[83] = notActiveM2S_R_R_RREADY;
	assign registers0_M2S[82] = notActiveM2S_R_AR_ARVALID;
	assign registers0_M2S[81:74] = notActiveM2S_R_AR_ARUSER;
	assign registers0_M2S[73:66] = notActiveM2S_R_AR_ARREGION;
	assign registers0_M2S[65:62] = notActiveM2S_R_AR_ARQOS;
	assign registers0_M2S[61:59] = notActiveM2S_R_AR_ARPROT;
	assign registers0_M2S[58:55] = notActiveM2S_R_AR_ARCACHE;
	assign registers0_M2S[54:53] = notActiveM2S_R_AR_ARLOCK;
	assign registers0_M2S[52:51] = notActiveM2S_R_AR_ARBURST;
	assign registers0_M2S[50:48] = notActiveM2S_R_AR_ARSIZE;
	assign registers0_M2S[47:40] = notActiveM2S_R_AR_ARLEN;
	assign registers0_M2S[39:8] = notActiveM2S_R_AR_ARADDR;
	assign registers0_M2S[7:0] = notActiveM2S_R_AR_ARID;
	assign registers1_inWDATA[3] = Inputs_InData[31:24];
	assign registers1_inWDATA[2] = Inputs_InData[23:16];
	assign registers1_inWDATA[1] = Inputs_InData[15:8];
	assign registers1_inWDATA[0] = Inputs_InData[7:0];
	assign registers1_inWE = Inputs_SWE[1];
	assign registers1_M2S[221] = notActiveM2S_W_B_BREADY;
	assign registers1_M2S[220] = notActiveM2S_W_W_WVALID;
	assign registers1_M2S[219:212] = notActiveM2S_W_W_WUSER;
	assign registers1_M2S[211] = notActiveM2S_W_W_WLAST;
	assign registers1_M2S[210:207] = notActiveM2S_W_W_WSTRB;
	assign registers1_M2S[206:199] = notActiveM2S_W_W_WDATA[3];
	assign registers1_M2S[198:191] = notActiveM2S_W_W_WDATA[2];
	assign registers1_M2S[190:183] = notActiveM2S_W_W_WDATA[1];
	assign registers1_M2S[182:175] = notActiveM2S_W_W_WDATA[0];
	assign registers1_M2S[174:167] = notActiveM2S_W_W_WID;
	assign registers1_M2S[166] = notActiveM2S_W_AW_AWVALID;
	assign registers1_M2S[165:158] = notActiveM2S_W_AW_AWUSER;
	assign registers1_M2S[157:150] = notActiveM2S_W_AW_AWREGION;
	assign registers1_M2S[149:146] = notActiveM2S_W_AW_AWQOS;
	assign registers1_M2S[145:143] = notActiveM2S_W_AW_AWPROT;
	assign registers1_M2S[142:139] = notActiveM2S_W_AW_AWCACHE;
	assign registers1_M2S[138:137] = notActiveM2S_W_AW_AWLOCK;
	assign registers1_M2S[136:135] = notActiveM2S_W_AW_AWBURST;
	assign registers1_M2S[134:132] = notActiveM2S_W_AW_AWSIZE;
	assign registers1_M2S[131:124] = notActiveM2S_W_AW_AWLEN;
	assign registers1_M2S[123:92] = notActiveM2S_W_AW_AWADDR;
	assign registers1_M2S[91:84] = notActiveM2S_W_AW_AWID;
	assign registers1_M2S[83] = notActiveM2S_R_R_RREADY;
	assign registers1_M2S[82] = notActiveM2S_R_AR_ARVALID;
	assign registers1_M2S[81:74] = notActiveM2S_R_AR_ARUSER;
	assign registers1_M2S[73:66] = notActiveM2S_R_AR_ARREGION;
	assign registers1_M2S[65:62] = notActiveM2S_R_AR_ARQOS;
	assign registers1_M2S[61:59] = notActiveM2S_R_AR_ARPROT;
	assign registers1_M2S[58:55] = notActiveM2S_R_AR_ARCACHE;
	assign registers1_M2S[54:53] = notActiveM2S_R_AR_ARLOCK;
	assign registers1_M2S[52:51] = notActiveM2S_R_AR_ARBURST;
	assign registers1_M2S[50:48] = notActiveM2S_R_AR_ARSIZE;
	assign registers1_M2S[47:40] = notActiveM2S_R_AR_ARLEN;
	assign registers1_M2S[39:8] = notActiveM2S_R_AR_ARADDR;
	assign registers1_M2S[7:0] = notActiveM2S_R_AR_ARID;
	assign registers2_inWDATA[3] = Inputs_InData[31:24];
	assign registers2_inWDATA[2] = Inputs_InData[23:16];
	assign registers2_inWDATA[1] = Inputs_InData[15:8];
	assign registers2_inWDATA[0] = Inputs_InData[7:0];
	assign registers2_inWE = Inputs_SWE[2];
	assign registers2_M2S[221] = notActiveM2S_W_B_BREADY;
	assign registers2_M2S[220] = notActiveM2S_W_W_WVALID;
	assign registers2_M2S[219:212] = notActiveM2S_W_W_WUSER;
	assign registers2_M2S[211] = notActiveM2S_W_W_WLAST;
	assign registers2_M2S[210:207] = notActiveM2S_W_W_WSTRB;
	assign registers2_M2S[206:199] = notActiveM2S_W_W_WDATA[3];
	assign registers2_M2S[198:191] = notActiveM2S_W_W_WDATA[2];
	assign registers2_M2S[190:183] = notActiveM2S_W_W_WDATA[1];
	assign registers2_M2S[182:175] = notActiveM2S_W_W_WDATA[0];
	assign registers2_M2S[174:167] = notActiveM2S_W_W_WID;
	assign registers2_M2S[166] = notActiveM2S_W_AW_AWVALID;
	assign registers2_M2S[165:158] = notActiveM2S_W_AW_AWUSER;
	assign registers2_M2S[157:150] = notActiveM2S_W_AW_AWREGION;
	assign registers2_M2S[149:146] = notActiveM2S_W_AW_AWQOS;
	assign registers2_M2S[145:143] = notActiveM2S_W_AW_AWPROT;
	assign registers2_M2S[142:139] = notActiveM2S_W_AW_AWCACHE;
	assign registers2_M2S[138:137] = notActiveM2S_W_AW_AWLOCK;
	assign registers2_M2S[136:135] = notActiveM2S_W_AW_AWBURST;
	assign registers2_M2S[134:132] = notActiveM2S_W_AW_AWSIZE;
	assign registers2_M2S[131:124] = notActiveM2S_W_AW_AWLEN;
	assign registers2_M2S[123:92] = notActiveM2S_W_AW_AWADDR;
	assign registers2_M2S[91:84] = notActiveM2S_W_AW_AWID;
	assign registers2_M2S[83] = notActiveM2S_R_R_RREADY;
	assign registers2_M2S[82] = notActiveM2S_R_AR_ARVALID;
	assign registers2_M2S[81:74] = notActiveM2S_R_AR_ARUSER;
	assign registers2_M2S[73:66] = notActiveM2S_R_AR_ARREGION;
	assign registers2_M2S[65:62] = notActiveM2S_R_AR_ARQOS;
	assign registers2_M2S[61:59] = notActiveM2S_R_AR_ARPROT;
	assign registers2_M2S[58:55] = notActiveM2S_R_AR_ARCACHE;
	assign registers2_M2S[54:53] = notActiveM2S_R_AR_ARLOCK;
	assign registers2_M2S[52:51] = notActiveM2S_R_AR_ARBURST;
	assign registers2_M2S[50:48] = notActiveM2S_R_AR_ARSIZE;
	assign registers2_M2S[47:40] = notActiveM2S_R_AR_ARLEN;
	assign registers2_M2S[39:8] = notActiveM2S_R_AR_ARADDR;
	assign registers2_M2S[7:0] = notActiveM2S_R_AR_ARID;
	assign registers3_inWDATA[3] = Inputs_InData[31:24];
	assign registers3_inWDATA[2] = Inputs_InData[23:16];
	assign registers3_inWDATA[1] = Inputs_InData[15:8];
	assign registers3_inWDATA[0] = Inputs_InData[7:0];
	assign registers3_inWE = Inputs_SWE[3];
	assign registers3_M2S[221] = notActiveM2S_W_B_BREADY;
	assign registers3_M2S[220] = notActiveM2S_W_W_WVALID;
	assign registers3_M2S[219:212] = notActiveM2S_W_W_WUSER;
	assign registers3_M2S[211] = notActiveM2S_W_W_WLAST;
	assign registers3_M2S[210:207] = notActiveM2S_W_W_WSTRB;
	assign registers3_M2S[206:199] = notActiveM2S_W_W_WDATA[3];
	assign registers3_M2S[198:191] = notActiveM2S_W_W_WDATA[2];
	assign registers3_M2S[190:183] = notActiveM2S_W_W_WDATA[1];
	assign registers3_M2S[182:175] = notActiveM2S_W_W_WDATA[0];
	assign registers3_M2S[174:167] = notActiveM2S_W_W_WID;
	assign registers3_M2S[166] = notActiveM2S_W_AW_AWVALID;
	assign registers3_M2S[165:158] = notActiveM2S_W_AW_AWUSER;
	assign registers3_M2S[157:150] = notActiveM2S_W_AW_AWREGION;
	assign registers3_M2S[149:146] = notActiveM2S_W_AW_AWQOS;
	assign registers3_M2S[145:143] = notActiveM2S_W_AW_AWPROT;
	assign registers3_M2S[142:139] = notActiveM2S_W_AW_AWCACHE;
	assign registers3_M2S[138:137] = notActiveM2S_W_AW_AWLOCK;
	assign registers3_M2S[136:135] = notActiveM2S_W_AW_AWBURST;
	assign registers3_M2S[134:132] = notActiveM2S_W_AW_AWSIZE;
	assign registers3_M2S[131:124] = notActiveM2S_W_AW_AWLEN;
	assign registers3_M2S[123:92] = notActiveM2S_W_AW_AWADDR;
	assign registers3_M2S[91:84] = notActiveM2S_W_AW_AWID;
	assign registers3_M2S[83] = notActiveM2S_R_R_RREADY;
	assign registers3_M2S[82] = notActiveM2S_R_AR_ARVALID;
	assign registers3_M2S[81:74] = notActiveM2S_R_AR_ARUSER;
	assign registers3_M2S[73:66] = notActiveM2S_R_AR_ARREGION;
	assign registers3_M2S[65:62] = notActiveM2S_R_AR_ARQOS;
	assign registers3_M2S[61:59] = notActiveM2S_R_AR_ARPROT;
	assign registers3_M2S[58:55] = notActiveM2S_R_AR_ARCACHE;
	assign registers3_M2S[54:53] = notActiveM2S_R_AR_ARLOCK;
	assign registers3_M2S[52:51] = notActiveM2S_R_AR_ARBURST;
	assign registers3_M2S[50:48] = notActiveM2S_R_AR_ARSIZE;
	assign registers3_M2S[47:40] = notActiveM2S_R_AR_ARLEN;
	assign registers3_M2S[39:8] = notActiveM2S_R_AR_ARADDR;
	assign registers3_M2S[7:0] = notActiveM2S_R_AR_ARID;
	assign masters0_Master_masters0_Master_HardLink = masters0_Master;
	assign masters0_S2M_masters0_S2M_HardLink = masters0_S2M;
	assign masters0_M2S = masters0_M2S_masters0_M2S_HardLink;
	assign masters0_RACK = masters0_RACK_masters0_RACK_HardLink;
	assign masters0_RDATA[0] = masters0_RDATA0_masters0_RDATA_HardLink;
	assign masters0_RDATA[1] = masters0_RDATA1_masters0_RDATA_HardLink;
	assign masters0_RDATA[2] = masters0_RDATA2_masters0_RDATA_HardLink;
	assign masters0_RDATA[3] = masters0_RDATA3_masters0_RDATA_HardLink;
	assign masters0_WACK = masters0_WACK_masters0_WACK_HardLink;
	assign masters1_Master_masters1_Master_HardLink = masters1_Master;
	assign masters1_S2M_masters1_S2M_HardLink = masters1_S2M;
	assign masters1_M2S = masters1_M2S_masters1_M2S_HardLink;
	assign masters1_RACK = masters1_RACK_masters1_RACK_HardLink;
	assign masters1_RDATA[0] = masters1_RDATA0_masters1_RDATA_HardLink;
	assign masters1_RDATA[1] = masters1_RDATA1_masters1_RDATA_HardLink;
	assign masters1_RDATA[2] = masters1_RDATA2_masters1_RDATA_HardLink;
	assign masters1_RDATA[3] = masters1_RDATA3_masters1_RDATA_HardLink;
	assign masters1_WACK = masters1_WACK_masters1_WACK_HardLink;
	assign registers0_inWDATA0_registers0_inWDATA_HardLink = registers0_inWDATA[0];
	assign registers0_inWDATA1_registers0_inWDATA_HardLink = registers0_inWDATA[1];
	assign registers0_inWDATA2_registers0_inWDATA_HardLink = registers0_inWDATA[2];
	assign registers0_inWDATA3_registers0_inWDATA_HardLink = registers0_inWDATA[3];
	assign registers0_inWE_registers0_inWE_HardLink = registers0_inWE;
	assign registers0_M2S_registers0_M2S_HardLink = registers0_M2S;
	assign registers0_outACK = registers0_outACK_registers0_outACK_HardLink;
	assign registers0_outData[0] = registers0_outData0_registers0_outData_HardLink;
	assign registers0_outData[1] = registers0_outData1_registers0_outData_HardLink;
	assign registers0_outData[2] = registers0_outData2_registers0_outData_HardLink;
	assign registers0_outData[3] = registers0_outData3_registers0_outData_HardLink;
	assign registers0_outWritten = registers0_outWritten_registers0_outWritten_HardLink;
	assign registers0_S2M = registers0_S2M_registers0_S2M_HardLink;
	assign registers1_inWDATA0_registers1_inWDATA_HardLink = registers1_inWDATA[0];
	assign registers1_inWDATA1_registers1_inWDATA_HardLink = registers1_inWDATA[1];
	assign registers1_inWDATA2_registers1_inWDATA_HardLink = registers1_inWDATA[2];
	assign registers1_inWDATA3_registers1_inWDATA_HardLink = registers1_inWDATA[3];
	assign registers1_inWE_registers1_inWE_HardLink = registers1_inWE;
	assign registers1_M2S_registers1_M2S_HardLink = registers1_M2S;
	assign registers1_outACK = registers1_outACK_registers1_outACK_HardLink;
	assign registers1_outData[0] = registers1_outData0_registers1_outData_HardLink;
	assign registers1_outData[1] = registers1_outData1_registers1_outData_HardLink;
	assign registers1_outData[2] = registers1_outData2_registers1_outData_HardLink;
	assign registers1_outData[3] = registers1_outData3_registers1_outData_HardLink;
	assign registers1_outWritten = registers1_outWritten_registers1_outWritten_HardLink;
	assign registers1_S2M = registers1_S2M_registers1_S2M_HardLink;
	assign registers2_inWDATA0_registers2_inWDATA_HardLink = registers2_inWDATA[0];
	assign registers2_inWDATA1_registers2_inWDATA_HardLink = registers2_inWDATA[1];
	assign registers2_inWDATA2_registers2_inWDATA_HardLink = registers2_inWDATA[2];
	assign registers2_inWDATA3_registers2_inWDATA_HardLink = registers2_inWDATA[3];
	assign registers2_inWE_registers2_inWE_HardLink = registers2_inWE;
	assign registers2_M2S_registers2_M2S_HardLink = registers2_M2S;
	assign registers2_outACK = registers2_outACK_registers2_outACK_HardLink;
	assign registers2_outData[0] = registers2_outData0_registers2_outData_HardLink;
	assign registers2_outData[1] = registers2_outData1_registers2_outData_HardLink;
	assign registers2_outData[2] = registers2_outData2_registers2_outData_HardLink;
	assign registers2_outData[3] = registers2_outData3_registers2_outData_HardLink;
	assign registers2_outWritten = registers2_outWritten_registers2_outWritten_HardLink;
	assign registers2_S2M = registers2_S2M_registers2_S2M_HardLink;
	assign registers3_inWDATA0_registers3_inWDATA_HardLink = registers3_inWDATA[0];
	assign registers3_inWDATA1_registers3_inWDATA_HardLink = registers3_inWDATA[1];
	assign registers3_inWDATA2_registers3_inWDATA_HardLink = registers3_inWDATA[2];
	assign registers3_inWDATA3_registers3_inWDATA_HardLink = registers3_inWDATA[3];
	assign registers3_inWE_registers3_inWE_HardLink = registers3_inWE;
	assign registers3_M2S_registers3_M2S_HardLink = registers3_M2S;
	assign registers3_outACK = registers3_outACK_registers3_outACK_HardLink;
	assign registers3_outData[0] = registers3_outData0_registers3_outData_HardLink;
	assign registers3_outData[1] = registers3_outData1_registers3_outData_HardLink;
	assign registers3_outData[2] = registers3_outData2_registers3_outData_HardLink;
	assign registers3_outData[3] = registers3_outData3_registers3_outData_HardLink;
	assign registers3_outWritten = registers3_outWritten_registers3_outWritten_HardLink;
	assign registers3_S2M = registers3_S2M_registers3_S2M_HardLink;
	// [BEGIN USER ARCHITECTURE]
	// [END USER ARCHITECTURE]
endmodule
