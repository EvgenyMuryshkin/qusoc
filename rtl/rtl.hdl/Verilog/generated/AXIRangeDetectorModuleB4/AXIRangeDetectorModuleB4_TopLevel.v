`timescale 1ns/1ps
`default_nettype none
// PLEASE READ THIS, IT MAY SAVE YOU SOME TIME AND MONEY, THANK YOU!
// * This file was generated by Quokka FPGA Toolkit.
// * Generated code is your property, do whatever you want with it
// * Place custom code between [BEGIN USER ***] and [END USER ***].
// * CAUTION: All code outside of [USER] scope is subject to regeneration.
// * Bad things happen sometimes in developer's life,
//   it is recommended to use source control management software (e.g. git, bzr etc) to keep your custom code safe'n'sound.
// * Internal structure of code is subject to change.
//   You can use some of signals in custom code, but most likely they will not exist in future (e.g. will get shorter or gone completely)
// * Please send your feedback, comments, improvement ideas etc. to evmuryshkin@gmail.com
// * Visit https://github.com/EvgenyMuryshkin/QuokkaEvaluation to access latest version of playground
//
// DISCLAIMER:
//   Code comes AS-IS, it is your responsibility to make sure it is working as expected
//   no responsibility will be taken for any loss or damage caused by use of Quokka toolkit.
//
// System configuration name is AXIRangeDetectorModuleB4_TopLevel, clock frequency is 1Hz, Top-level
// FSM summary
// -- Packages
module AXIRangeDetectorModuleB4_TopLevel
(
	// [BEGIN USER PORTS]
	// [END USER PORTS]
	input wire [31:0] RangeFrom,
	input wire [31:0] RangeTo,
	input wire [31:0] Value,
	output wire IsActive
);
	// [BEGIN USER SIGNALS]
	// [END USER SIGNALS]
	localparam HiSignal = 1'b1;
	localparam LoSignal = 1'b0;
	wire Zero = 1'b0;
	wire One = 1'b1;
	wire true = 1'b1;
	wire false = 1'b0;
	wire [31: 0] Inputs_RangeFrom;
	wire [31: 0] Inputs_RangeTo;
	wire [31: 0] Inputs_Value;
	wire AXIRangeDetectorModule_L28F33T99_Expr;
	wire AXIRangeDetectorModule_L28F33T99_Expr_1;
	wire AXIRangeDetectorModule_L28F33T99_Expr_2;
	wire AXIRangeDetectorModule_L28F33T65_Expr;
	wire signed [32: 0] AXIRangeDetectorModule_L28F33T65_ExprLhs;
	wire signed [32: 0] AXIRangeDetectorModule_L28F33T65_ExprRhs;
	wire AXIRangeDetectorModule_L28F69T99_Expr;
	wire signed [32: 0] AXIRangeDetectorModule_L28F69T99_ExprLhs;
	wire signed [32: 0] AXIRangeDetectorModule_L28F69T99_ExprRhs;
	assign AXIRangeDetectorModule_L28F33T65_Expr = AXIRangeDetectorModule_L28F33T65_ExprLhs >= AXIRangeDetectorModule_L28F33T65_ExprRhs ? 1'b1 : 1'b0;
	assign AXIRangeDetectorModule_L28F69T99_Expr = AXIRangeDetectorModule_L28F69T99_ExprLhs <= AXIRangeDetectorModule_L28F69T99_ExprRhs ? 1'b1 : 1'b0;
	assign AXIRangeDetectorModule_L28F33T99_Expr = AXIRangeDetectorModule_L28F33T99_Expr_1 & AXIRangeDetectorModule_L28F33T99_Expr_2;
	assign AXIRangeDetectorModule_L28F33T65_ExprLhs = { 1'b0, Inputs_Value };
	assign AXIRangeDetectorModule_L28F33T65_ExprRhs = { 1'b0, Inputs_RangeFrom };
	assign AXIRangeDetectorModule_L28F69T99_ExprLhs = { 1'b0, Inputs_Value };
	assign AXIRangeDetectorModule_L28F69T99_ExprRhs = { 1'b0, Inputs_RangeTo };
	assign AXIRangeDetectorModule_L28F33T99_Expr_1 = AXIRangeDetectorModule_L28F33T65_Expr;
	assign AXIRangeDetectorModule_L28F33T99_Expr_2 = AXIRangeDetectorModule_L28F69T99_Expr;
	assign Inputs_RangeFrom = RangeFrom;
	assign Inputs_RangeTo = RangeTo;
	assign Inputs_Value = Value;
	assign IsActive = AXIRangeDetectorModule_L28F33T99_Expr;
	// [BEGIN USER ARCHITECTURE]
	// [END USER ARCHITECTURE]
endmodule
