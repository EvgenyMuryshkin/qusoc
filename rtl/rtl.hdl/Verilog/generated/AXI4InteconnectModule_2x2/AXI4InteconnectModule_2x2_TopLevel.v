`timescale 1ns/1ps
`default_nettype none
// PLEASE READ THIS, IT MAY SAVE YOU SOME TIME AND MONEY, THANK YOU!
// * This file was generated by Quokka FPGA Toolkit.
// * Generated code is your property, do whatever you want with it
// * Place custom code between [BEGIN USER ***] and [END USER ***].
// * CAUTION: All code outside of [USER] scope is subject to regeneration.
// * Bad things happen sometimes in developer's life,
//   it is recommended to use source control management software (e.g. git, bzr etc) to keep your custom code safe'n'sound.
// * Internal structure of code is subject to change.
//   You can use some of signals in custom code, but most likely they will not exist in future (e.g. will get shorter or gone completely)
// * Please send your feedback, comments, improvement ideas etc. to evmuryshkin@gmail.com
// * Visit https://github.com/EvgenyMuryshkin/QuokkaEvaluation to access latest version of playground
//
// DISCLAIMER:
//   Code comes AS-IS, it is your responsibility to make sure it is working as expected
//   no responsibility will be taken for any loss or damage caused by use of Quokka toolkit.
//
// System configuration name is AXI4InteconnectModule_2x2_TopLevel, clock frequency is 1Hz, Top-level
// FSM summary
// -- Packages
module AXI4InteconnectModule_2x2_TopLevel
(
	// [BEGIN USER PORTS]
	// [END USER PORTS]
	input wire Clock,
	input wire Reset,
	input wire [7:0] iM2S0_R_AR_ARID,
	input wire [31:0] iM2S0_R_AR_ARADDR,
	input wire [7:0] iM2S0_R_AR_ARLEN,
	input wire [2:0] iM2S0_R_AR_ARSIZE,
	input wire [1:0] iM2S0_R_AR_ARBURST,
	input wire [1:0] iM2S0_R_AR_ARLOCK,
	input wire [3:0] iM2S0_R_AR_ARCACHE,
	input wire [2:0] iM2S0_R_AR_ARPROT,
	input wire [3:0] iM2S0_R_AR_ARQOS,
	input wire [7:0] iM2S0_R_AR_ARREGION,
	input wire [7:0] iM2S0_R_AR_ARUSER,
	input wire iM2S0_R_AR_ARVALID,
	input wire iM2S0_R_R_RREADY,
	input wire [7:0] iM2S0_W_AW_AWID,
	input wire [31:0] iM2S0_W_AW_AWADDR,
	input wire [7:0] iM2S0_W_AW_AWLEN,
	input wire [2:0] iM2S0_W_AW_AWSIZE,
	input wire [1:0] iM2S0_W_AW_AWBURST,
	input wire [1:0] iM2S0_W_AW_AWLOCK,
	input wire [3:0] iM2S0_W_AW_AWCACHE,
	input wire [2:0] iM2S0_W_AW_AWPROT,
	input wire [3:0] iM2S0_W_AW_AWQOS,
	input wire [7:0] iM2S0_W_AW_AWREGION,
	input wire [7:0] iM2S0_W_AW_AWUSER,
	input wire iM2S0_W_AW_AWVALID,
	input wire [7:0] iM2S0_W_W_WID,
	input wire [7:0] iM2S0_W_W_WDATA0,
	input wire [7:0] iM2S0_W_W_WDATA1,
	input wire [7:0] iM2S0_W_W_WDATA2,
	input wire [7:0] iM2S0_W_W_WDATA3,
	input wire [3:0] iM2S0_W_W_WSTRB,
	input wire iM2S0_W_W_WLAST,
	input wire [7:0] iM2S0_W_W_WUSER,
	input wire iM2S0_W_W_WVALID,
	input wire iM2S0_W_B_BREADY,
	input wire [7:0] iM2S1_R_AR_ARID,
	input wire [31:0] iM2S1_R_AR_ARADDR,
	input wire [7:0] iM2S1_R_AR_ARLEN,
	input wire [2:0] iM2S1_R_AR_ARSIZE,
	input wire [1:0] iM2S1_R_AR_ARBURST,
	input wire [1:0] iM2S1_R_AR_ARLOCK,
	input wire [3:0] iM2S1_R_AR_ARCACHE,
	input wire [2:0] iM2S1_R_AR_ARPROT,
	input wire [3:0] iM2S1_R_AR_ARQOS,
	input wire [7:0] iM2S1_R_AR_ARREGION,
	input wire [7:0] iM2S1_R_AR_ARUSER,
	input wire iM2S1_R_AR_ARVALID,
	input wire iM2S1_R_R_RREADY,
	input wire [7:0] iM2S1_W_AW_AWID,
	input wire [31:0] iM2S1_W_AW_AWADDR,
	input wire [7:0] iM2S1_W_AW_AWLEN,
	input wire [2:0] iM2S1_W_AW_AWSIZE,
	input wire [1:0] iM2S1_W_AW_AWBURST,
	input wire [1:0] iM2S1_W_AW_AWLOCK,
	input wire [3:0] iM2S1_W_AW_AWCACHE,
	input wire [2:0] iM2S1_W_AW_AWPROT,
	input wire [3:0] iM2S1_W_AW_AWQOS,
	input wire [7:0] iM2S1_W_AW_AWREGION,
	input wire [7:0] iM2S1_W_AW_AWUSER,
	input wire iM2S1_W_AW_AWVALID,
	input wire [7:0] iM2S1_W_W_WID,
	input wire [7:0] iM2S1_W_W_WDATA0,
	input wire [7:0] iM2S1_W_W_WDATA1,
	input wire [7:0] iM2S1_W_W_WDATA2,
	input wire [7:0] iM2S1_W_W_WDATA3,
	input wire [3:0] iM2S1_W_W_WSTRB,
	input wire iM2S1_W_W_WLAST,
	input wire [7:0] iM2S1_W_W_WUSER,
	input wire iM2S1_W_W_WVALID,
	input wire iM2S1_W_B_BREADY,
	input wire iS2M0_R_AR_ARREADY,
	input wire [7:0] iS2M0_R_R_RID,
	input wire [7:0] iS2M0_R_R_RDATA0,
	input wire [7:0] iS2M0_R_R_RDATA1,
	input wire [7:0] iS2M0_R_R_RDATA2,
	input wire [7:0] iS2M0_R_R_RDATA3,
	input wire [1:0] iS2M0_R_R_RRESP,
	input wire iS2M0_R_R_RLAST,
	input wire [7:0] iS2M0_R_R_RUSER,
	input wire iS2M0_R_R_RVALID,
	input wire iS2M0_W_AW_AWREADY,
	input wire [7:0] iS2M0_W_B_BID,
	input wire [1:0] iS2M0_W_B_BRESP,
	input wire [7:0] iS2M0_W_B_BUSER,
	input wire iS2M0_W_B_BVALID,
	input wire iS2M0_W_W_WREADY,
	input wire iS2M1_R_AR_ARREADY,
	input wire [7:0] iS2M1_R_R_RID,
	input wire [7:0] iS2M1_R_R_RDATA0,
	input wire [7:0] iS2M1_R_R_RDATA1,
	input wire [7:0] iS2M1_R_R_RDATA2,
	input wire [7:0] iS2M1_R_R_RDATA3,
	input wire [1:0] iS2M1_R_R_RRESP,
	input wire iS2M1_R_R_RLAST,
	input wire [7:0] iS2M1_R_R_RUSER,
	input wire iS2M1_R_R_RVALID,
	input wire iS2M1_W_AW_AWREADY,
	input wire [7:0] iS2M1_W_B_BID,
	input wire [1:0] iS2M1_W_B_BRESP,
	input wire [7:0] iS2M1_W_B_BUSER,
	input wire iS2M1_W_B_BVALID,
	input wire iS2M1_W_W_WREADY,
	output wire [7:0] oM2S0_R_AR_ARID,
	output wire [31:0] oM2S0_R_AR_ARADDR,
	output wire [7:0] oM2S0_R_AR_ARLEN,
	output wire [2:0] oM2S0_R_AR_ARSIZE,
	output wire [1:0] oM2S0_R_AR_ARBURST,
	output wire [1:0] oM2S0_R_AR_ARLOCK,
	output wire [3:0] oM2S0_R_AR_ARCACHE,
	output wire [2:0] oM2S0_R_AR_ARPROT,
	output wire [3:0] oM2S0_R_AR_ARQOS,
	output wire [7:0] oM2S0_R_AR_ARREGION,
	output wire [7:0] oM2S0_R_AR_ARUSER,
	output wire oM2S0_R_AR_ARVALID,
	output wire oM2S0_R_R_RREADY,
	output wire [7:0] oM2S0_W_AW_AWID,
	output wire [31:0] oM2S0_W_AW_AWADDR,
	output wire [7:0] oM2S0_W_AW_AWLEN,
	output wire [2:0] oM2S0_W_AW_AWSIZE,
	output wire [1:0] oM2S0_W_AW_AWBURST,
	output wire [1:0] oM2S0_W_AW_AWLOCK,
	output wire [3:0] oM2S0_W_AW_AWCACHE,
	output wire [2:0] oM2S0_W_AW_AWPROT,
	output wire [3:0] oM2S0_W_AW_AWQOS,
	output wire [7:0] oM2S0_W_AW_AWREGION,
	output wire [7:0] oM2S0_W_AW_AWUSER,
	output wire oM2S0_W_AW_AWVALID,
	output wire [7:0] oM2S0_W_W_WID,
	output wire [7:0] oM2S0_W_W_WDATA0,
	output wire [7:0] oM2S0_W_W_WDATA1,
	output wire [7:0] oM2S0_W_W_WDATA2,
	output wire [7:0] oM2S0_W_W_WDATA3,
	output wire [3:0] oM2S0_W_W_WSTRB,
	output wire oM2S0_W_W_WLAST,
	output wire [7:0] oM2S0_W_W_WUSER,
	output wire oM2S0_W_W_WVALID,
	output wire oM2S0_W_B_BREADY,
	output wire [7:0] oM2S1_R_AR_ARID,
	output wire [31:0] oM2S1_R_AR_ARADDR,
	output wire [7:0] oM2S1_R_AR_ARLEN,
	output wire [2:0] oM2S1_R_AR_ARSIZE,
	output wire [1:0] oM2S1_R_AR_ARBURST,
	output wire [1:0] oM2S1_R_AR_ARLOCK,
	output wire [3:0] oM2S1_R_AR_ARCACHE,
	output wire [2:0] oM2S1_R_AR_ARPROT,
	output wire [3:0] oM2S1_R_AR_ARQOS,
	output wire [7:0] oM2S1_R_AR_ARREGION,
	output wire [7:0] oM2S1_R_AR_ARUSER,
	output wire oM2S1_R_AR_ARVALID,
	output wire oM2S1_R_R_RREADY,
	output wire [7:0] oM2S1_W_AW_AWID,
	output wire [31:0] oM2S1_W_AW_AWADDR,
	output wire [7:0] oM2S1_W_AW_AWLEN,
	output wire [2:0] oM2S1_W_AW_AWSIZE,
	output wire [1:0] oM2S1_W_AW_AWBURST,
	output wire [1:0] oM2S1_W_AW_AWLOCK,
	output wire [3:0] oM2S1_W_AW_AWCACHE,
	output wire [2:0] oM2S1_W_AW_AWPROT,
	output wire [3:0] oM2S1_W_AW_AWQOS,
	output wire [7:0] oM2S1_W_AW_AWREGION,
	output wire [7:0] oM2S1_W_AW_AWUSER,
	output wire oM2S1_W_AW_AWVALID,
	output wire [7:0] oM2S1_W_W_WID,
	output wire [7:0] oM2S1_W_W_WDATA0,
	output wire [7:0] oM2S1_W_W_WDATA1,
	output wire [7:0] oM2S1_W_W_WDATA2,
	output wire [7:0] oM2S1_W_W_WDATA3,
	output wire [3:0] oM2S1_W_W_WSTRB,
	output wire oM2S1_W_W_WLAST,
	output wire [7:0] oM2S1_W_W_WUSER,
	output wire oM2S1_W_W_WVALID,
	output wire oM2S1_W_B_BREADY,
	output wire oS2M0_R_AR_ARREADY,
	output wire [7:0] oS2M0_R_R_RID,
	output wire [7:0] oS2M0_R_R_RDATA0,
	output wire [7:0] oS2M0_R_R_RDATA1,
	output wire [7:0] oS2M0_R_R_RDATA2,
	output wire [7:0] oS2M0_R_R_RDATA3,
	output wire [1:0] oS2M0_R_R_RRESP,
	output wire oS2M0_R_R_RLAST,
	output wire [7:0] oS2M0_R_R_RUSER,
	output wire oS2M0_R_R_RVALID,
	output wire oS2M0_W_AW_AWREADY,
	output wire [7:0] oS2M0_W_B_BID,
	output wire [1:0] oS2M0_W_B_BRESP,
	output wire [7:0] oS2M0_W_B_BUSER,
	output wire oS2M0_W_B_BVALID,
	output wire oS2M0_W_W_WREADY,
	output wire oS2M1_R_AR_ARREADY,
	output wire [7:0] oS2M1_R_R_RID,
	output wire [7:0] oS2M1_R_R_RDATA0,
	output wire [7:0] oS2M1_R_R_RDATA1,
	output wire [7:0] oS2M1_R_R_RDATA2,
	output wire [7:0] oS2M1_R_R_RDATA3,
	output wire [1:0] oS2M1_R_R_RRESP,
	output wire oS2M1_R_R_RLAST,
	output wire [7:0] oS2M1_R_R_RUSER,
	output wire oS2M1_R_R_RVALID,
	output wire oS2M1_W_AW_AWREADY,
	output wire [7:0] oS2M1_W_B_BID,
	output wire [1:0] oS2M1_W_B_BRESP,
	output wire [7:0] oS2M1_W_B_BUSER,
	output wire oS2M1_W_B_BVALID,
	output wire oS2M1_W_W_WREADY
);
	// [BEGIN USER SIGNALS]
	// [END USER SIGNALS]
	localparam HiSignal = 1'b1;
	localparam LoSignal = 1'b0;
	wire Zero = 1'b0;
	wire One = 1'b1;
	wire true = 1'b1;
	wire false = 1'b0;
	wire signed [2: 0] mCount = 3'b010;
	wire signed [2: 0] sCount = 3'b010;
	wire [273: 0] AXI4InteconnectModule_L45F17L49T18_Object;
	wire [317: 0] AXI4InteconnectModule_L53F17L57T18_Object;
	wire [221: 0] AXI4InteconnectModule_L70F35L77T24_0_AXI4InteconnectModule_L72F17L76T18_Object;
	wire [221: 0] AXI4InteconnectModule_L70F35L77T24_1_AXI4InteconnectModule_L72F17L76T18_Object;
	wire [73: 0] AXI4InteconnectModule_L61F35L68T24_0_AXI4InteconnectModule_L63F17L67T18_Object;
	wire [73: 0] AXI4InteconnectModule_L61F35L68T24_1_AXI4InteconnectModule_L63F17L67T18_Object;
	wire [83: 0] readInterconnect_iLeft0_readInterconnect_iLeft_HardLink;
	wire [83: 0] readInterconnect_iLeft1_readInterconnect_iLeft_HardLink;
	wire [52: 0] readInterconnect_iRight0_readInterconnect_iRight_HardLink;
	wire [52: 0] readInterconnect_iRight1_readInterconnect_iRight_HardLink;
	wire [83: 0] readInterconnect_M2S0_readInterconnect_M2S_HardLink;
	wire [83: 0] readInterconnect_M2S1_readInterconnect_M2S_HardLink;
	wire [52: 0] readInterconnect_S2M0_readInterconnect_S2M_HardLink;
	wire [52: 0] readInterconnect_S2M1_readInterconnect_S2M_HardLink;
	wire [137: 0] writeInterconnect_iLeft0_writeInterconnect_iLeft_HardLink;
	wire [137: 0] writeInterconnect_iLeft1_writeInterconnect_iLeft_HardLink;
	wire [20: 0] writeInterconnect_iRight0_writeInterconnect_iRight_HardLink;
	wire [20: 0] writeInterconnect_iRight1_writeInterconnect_iRight_HardLink;
	wire [137: 0] writeInterconnect_M2S0_writeInterconnect_M2S_HardLink;
	wire [137: 0] writeInterconnect_M2S1_writeInterconnect_M2S_HardLink;
	wire [20: 0] writeInterconnect_S2M0_writeInterconnect_S2M_HardLink;
	wire [20: 0] writeInterconnect_S2M1_writeInterconnect_S2M_HardLink;
	wire [221 : 0] Inputs_iM2S [0 : 1];
	wire [73 : 0] Inputs_iS2M [0 : 1];
	wire [83 : 0] readInterconnect_iLeft [0 : 1];
	wire [52 : 0] readInterconnect_iRight [0 : 1];
	wire [83 : 0] readInterconnect_M2S [0 : 1];
	wire [52 : 0] readInterconnect_S2M [0 : 1];
	wire [137 : 0] writeInterconnect_iLeft [0 : 1];
	wire [20 : 0] writeInterconnect_iRight [0 : 1];
	wire [137 : 0] writeInterconnect_M2S [0 : 1];
	wire [20 : 0] writeInterconnect_S2M [0 : 1];
	wire [83 : 0] AXI4InteconnectModule_L47F29T67_Enumerable [0 : 1];
	wire [52 : 0] AXI4InteconnectModule_L48F30T68_Enumerable [0 : 1];
	wire [137 : 0] AXI4InteconnectModule_L55F29T67_Enumerable [0 : 1];
	wire [20 : 0] AXI4InteconnectModule_L56F30T68_Enumerable [0 : 1];
	wire [221 : 0] AXI4InteconnectModule_L70F35L77T24_Enumerable [0 : 1];
	wire [73 : 0] AXI4InteconnectModule_L61F35L68T24_Enumerable [0 : 1];
	wire BoardSignals_Clock;
	wire BoardSignals_Reset;
	wire BoardSignals_Running;
	wire BoardSignals_Starting;
	wire BoardSignals_Started;
	reg InternalReset = 1'b0;
	work_Quokka_BoardSignalsProc BoardSignalsConnection(BoardSignals_Clock, BoardSignals_Reset, BoardSignals_Running, BoardSignals_Starting, BoardSignals_Started, Clock, Reset, InternalReset);
	AXI4InteconnectModule_2x2_TopLevel_readInterconnect
	AXI4InteconnectModule_2x2_TopLevel_readInterconnect
	(
		// [BEGIN USER MAP FOR readInterconnect]
		// [END USER MAP FOR readInterconnect]
		.BoardSignals_Clock (BoardSignals_Clock),
		.BoardSignals_Reset (BoardSignals_Reset),
		.BoardSignals_Running (BoardSignals_Running),
		.BoardSignals_Starting (BoardSignals_Starting),
		.BoardSignals_Started (BoardSignals_Started),
		.iLeft0 (readInterconnect_iLeft0_readInterconnect_iLeft_HardLink),
		.iLeft1 (readInterconnect_iLeft1_readInterconnect_iLeft_HardLink),
		.iRight0 (readInterconnect_iRight0_readInterconnect_iRight_HardLink),
		.iRight1 (readInterconnect_iRight1_readInterconnect_iRight_HardLink),
		.M2S0 (readInterconnect_M2S0_readInterconnect_M2S_HardLink),
		.M2S1 (readInterconnect_M2S1_readInterconnect_M2S_HardLink),
		.S2M0 (readInterconnect_S2M0_readInterconnect_S2M_HardLink),
		.S2M1 (readInterconnect_S2M1_readInterconnect_S2M_HardLink)
	);
	AXI4InteconnectModule_2x2_TopLevel_writeInterconnect
	AXI4InteconnectModule_2x2_TopLevel_writeInterconnect
	(
		// [BEGIN USER MAP FOR writeInterconnect]
		// [END USER MAP FOR writeInterconnect]
		.BoardSignals_Clock (BoardSignals_Clock),
		.BoardSignals_Reset (BoardSignals_Reset),
		.BoardSignals_Running (BoardSignals_Running),
		.BoardSignals_Starting (BoardSignals_Starting),
		.BoardSignals_Started (BoardSignals_Started),
		.iLeft0 (writeInterconnect_iLeft0_writeInterconnect_iLeft_HardLink),
		.iLeft1 (writeInterconnect_iLeft1_writeInterconnect_iLeft_HardLink),
		.iRight0 (writeInterconnect_iRight0_writeInterconnect_iRight_HardLink),
		.iRight1 (writeInterconnect_iRight1_writeInterconnect_iRight_HardLink),
		.M2S0 (writeInterconnect_M2S0_writeInterconnect_M2S_HardLink),
		.M2S1 (writeInterconnect_M2S1_writeInterconnect_M2S_HardLink),
		.S2M0 (writeInterconnect_S2M0_writeInterconnect_S2M_HardLink),
		.S2M1 (writeInterconnect_S2M1_writeInterconnect_S2M_HardLink)
	);
	assign Inputs_iM2S[0][221] = iM2S0_W_B_BREADY;
	assign Inputs_iM2S[0][220] = iM2S0_W_W_WVALID;
	assign Inputs_iM2S[0][219:212] = iM2S0_W_W_WUSER;
	assign Inputs_iM2S[0][211] = iM2S0_W_W_WLAST;
	assign Inputs_iM2S[0][210:207] = iM2S0_W_W_WSTRB;
	assign Inputs_iM2S[0][206:199] = iM2S0_W_W_WDATA3;
	assign Inputs_iM2S[0][198:191] = iM2S0_W_W_WDATA2;
	assign Inputs_iM2S[0][190:183] = iM2S0_W_W_WDATA1;
	assign Inputs_iM2S[0][182:175] = iM2S0_W_W_WDATA0;
	assign Inputs_iM2S[0][174:167] = iM2S0_W_W_WID;
	assign Inputs_iM2S[0][166] = iM2S0_W_AW_AWVALID;
	assign Inputs_iM2S[0][165:158] = iM2S0_W_AW_AWUSER;
	assign Inputs_iM2S[0][157:150] = iM2S0_W_AW_AWREGION;
	assign Inputs_iM2S[0][149:146] = iM2S0_W_AW_AWQOS;
	assign Inputs_iM2S[0][145:143] = iM2S0_W_AW_AWPROT;
	assign Inputs_iM2S[0][142:139] = iM2S0_W_AW_AWCACHE;
	assign Inputs_iM2S[0][138:137] = iM2S0_W_AW_AWLOCK;
	assign Inputs_iM2S[0][136:135] = iM2S0_W_AW_AWBURST;
	assign Inputs_iM2S[0][134:132] = iM2S0_W_AW_AWSIZE;
	assign Inputs_iM2S[0][131:124] = iM2S0_W_AW_AWLEN;
	assign Inputs_iM2S[0][123:92] = iM2S0_W_AW_AWADDR;
	assign Inputs_iM2S[0][91:84] = iM2S0_W_AW_AWID;
	assign Inputs_iM2S[0][83] = iM2S0_R_R_RREADY;
	assign Inputs_iM2S[0][82] = iM2S0_R_AR_ARVALID;
	assign Inputs_iM2S[0][81:74] = iM2S0_R_AR_ARUSER;
	assign Inputs_iM2S[0][73:66] = iM2S0_R_AR_ARREGION;
	assign Inputs_iM2S[0][65:62] = iM2S0_R_AR_ARQOS;
	assign Inputs_iM2S[0][61:59] = iM2S0_R_AR_ARPROT;
	assign Inputs_iM2S[0][58:55] = iM2S0_R_AR_ARCACHE;
	assign Inputs_iM2S[0][54:53] = iM2S0_R_AR_ARLOCK;
	assign Inputs_iM2S[0][52:51] = iM2S0_R_AR_ARBURST;
	assign Inputs_iM2S[0][50:48] = iM2S0_R_AR_ARSIZE;
	assign Inputs_iM2S[0][47:40] = iM2S0_R_AR_ARLEN;
	assign Inputs_iM2S[0][39:8] = iM2S0_R_AR_ARADDR;
	assign Inputs_iM2S[0][7:0] = iM2S0_R_AR_ARID;
	assign Inputs_iM2S[1][221] = iM2S1_W_B_BREADY;
	assign Inputs_iM2S[1][220] = iM2S1_W_W_WVALID;
	assign Inputs_iM2S[1][219:212] = iM2S1_W_W_WUSER;
	assign Inputs_iM2S[1][211] = iM2S1_W_W_WLAST;
	assign Inputs_iM2S[1][210:207] = iM2S1_W_W_WSTRB;
	assign Inputs_iM2S[1][206:199] = iM2S1_W_W_WDATA3;
	assign Inputs_iM2S[1][198:191] = iM2S1_W_W_WDATA2;
	assign Inputs_iM2S[1][190:183] = iM2S1_W_W_WDATA1;
	assign Inputs_iM2S[1][182:175] = iM2S1_W_W_WDATA0;
	assign Inputs_iM2S[1][174:167] = iM2S1_W_W_WID;
	assign Inputs_iM2S[1][166] = iM2S1_W_AW_AWVALID;
	assign Inputs_iM2S[1][165:158] = iM2S1_W_AW_AWUSER;
	assign Inputs_iM2S[1][157:150] = iM2S1_W_AW_AWREGION;
	assign Inputs_iM2S[1][149:146] = iM2S1_W_AW_AWQOS;
	assign Inputs_iM2S[1][145:143] = iM2S1_W_AW_AWPROT;
	assign Inputs_iM2S[1][142:139] = iM2S1_W_AW_AWCACHE;
	assign Inputs_iM2S[1][138:137] = iM2S1_W_AW_AWLOCK;
	assign Inputs_iM2S[1][136:135] = iM2S1_W_AW_AWBURST;
	assign Inputs_iM2S[1][134:132] = iM2S1_W_AW_AWSIZE;
	assign Inputs_iM2S[1][131:124] = iM2S1_W_AW_AWLEN;
	assign Inputs_iM2S[1][123:92] = iM2S1_W_AW_AWADDR;
	assign Inputs_iM2S[1][91:84] = iM2S1_W_AW_AWID;
	assign Inputs_iM2S[1][83] = iM2S1_R_R_RREADY;
	assign Inputs_iM2S[1][82] = iM2S1_R_AR_ARVALID;
	assign Inputs_iM2S[1][81:74] = iM2S1_R_AR_ARUSER;
	assign Inputs_iM2S[1][73:66] = iM2S1_R_AR_ARREGION;
	assign Inputs_iM2S[1][65:62] = iM2S1_R_AR_ARQOS;
	assign Inputs_iM2S[1][61:59] = iM2S1_R_AR_ARPROT;
	assign Inputs_iM2S[1][58:55] = iM2S1_R_AR_ARCACHE;
	assign Inputs_iM2S[1][54:53] = iM2S1_R_AR_ARLOCK;
	assign Inputs_iM2S[1][52:51] = iM2S1_R_AR_ARBURST;
	assign Inputs_iM2S[1][50:48] = iM2S1_R_AR_ARSIZE;
	assign Inputs_iM2S[1][47:40] = iM2S1_R_AR_ARLEN;
	assign Inputs_iM2S[1][39:8] = iM2S1_R_AR_ARADDR;
	assign Inputs_iM2S[1][7:0] = iM2S1_R_AR_ARID;
	assign Inputs_iS2M[0][73] = iS2M0_W_W_WREADY;
	assign Inputs_iS2M[0][72] = iS2M0_W_B_BVALID;
	assign Inputs_iS2M[0][71:64] = iS2M0_W_B_BUSER;
	assign Inputs_iS2M[0][63:62] = iS2M0_W_B_BRESP;
	assign Inputs_iS2M[0][61:54] = iS2M0_W_B_BID;
	assign Inputs_iS2M[0][53] = iS2M0_W_AW_AWREADY;
	assign Inputs_iS2M[0][52] = iS2M0_R_R_RVALID;
	assign Inputs_iS2M[0][51:44] = iS2M0_R_R_RUSER;
	assign Inputs_iS2M[0][43] = iS2M0_R_R_RLAST;
	assign Inputs_iS2M[0][42:41] = iS2M0_R_R_RRESP;
	assign Inputs_iS2M[0][40:33] = iS2M0_R_R_RDATA3;
	assign Inputs_iS2M[0][32:25] = iS2M0_R_R_RDATA2;
	assign Inputs_iS2M[0][24:17] = iS2M0_R_R_RDATA1;
	assign Inputs_iS2M[0][16:9] = iS2M0_R_R_RDATA0;
	assign Inputs_iS2M[0][8:1] = iS2M0_R_R_RID;
	assign Inputs_iS2M[0][0] = iS2M0_R_AR_ARREADY;
	assign Inputs_iS2M[1][73] = iS2M1_W_W_WREADY;
	assign Inputs_iS2M[1][72] = iS2M1_W_B_BVALID;
	assign Inputs_iS2M[1][71:64] = iS2M1_W_B_BUSER;
	assign Inputs_iS2M[1][63:62] = iS2M1_W_B_BRESP;
	assign Inputs_iS2M[1][61:54] = iS2M1_W_B_BID;
	assign Inputs_iS2M[1][53] = iS2M1_W_AW_AWREADY;
	assign Inputs_iS2M[1][52] = iS2M1_R_R_RVALID;
	assign Inputs_iS2M[1][51:44] = iS2M1_R_R_RUSER;
	assign Inputs_iS2M[1][43] = iS2M1_R_R_RLAST;
	assign Inputs_iS2M[1][42:41] = iS2M1_R_R_RRESP;
	assign Inputs_iS2M[1][40:33] = iS2M1_R_R_RDATA3;
	assign Inputs_iS2M[1][32:25] = iS2M1_R_R_RDATA2;
	assign Inputs_iS2M[1][24:17] = iS2M1_R_R_RDATA1;
	assign Inputs_iS2M[1][16:9] = iS2M1_R_R_RDATA0;
	assign Inputs_iS2M[1][8:1] = iS2M1_R_R_RID;
	assign Inputs_iS2M[1][0] = iS2M1_R_AR_ARREADY;
	assign AXI4InteconnectModule_L47F29T67_Enumerable[0] = Inputs_iM2S[0][83:0];
	assign AXI4InteconnectModule_L47F29T67_Enumerable[1] = Inputs_iM2S[1][83:0];
	assign AXI4InteconnectModule_L45F17L49T18_Object[167:0] = {
		AXI4InteconnectModule_L47F29T67_Enumerable[1],
		AXI4InteconnectModule_L47F29T67_Enumerable[0]
	}
	;
	assign AXI4InteconnectModule_L48F30T68_Enumerable[0] = Inputs_iS2M[0][52:0];
	assign AXI4InteconnectModule_L48F30T68_Enumerable[1] = Inputs_iS2M[1][52:0];
	assign AXI4InteconnectModule_L45F17L49T18_Object[273:168] = {
		AXI4InteconnectModule_L48F30T68_Enumerable[1],
		AXI4InteconnectModule_L48F30T68_Enumerable[0]
	}
	;
	assign readInterconnect_iRight[1] = AXI4InteconnectModule_L45F17L49T18_Object[273:221];
	assign readInterconnect_iRight[0] = AXI4InteconnectModule_L45F17L49T18_Object[220:168];
	assign readInterconnect_iLeft[1] = AXI4InteconnectModule_L45F17L49T18_Object[167:84];
	assign readInterconnect_iLeft[0] = AXI4InteconnectModule_L45F17L49T18_Object[83:0];
	assign AXI4InteconnectModule_L55F29T67_Enumerable[0] = Inputs_iM2S[0][221:84];
	assign AXI4InteconnectModule_L55F29T67_Enumerable[1] = Inputs_iM2S[1][221:84];
	assign AXI4InteconnectModule_L53F17L57T18_Object[275:0] = {
		AXI4InteconnectModule_L55F29T67_Enumerable[1],
		AXI4InteconnectModule_L55F29T67_Enumerable[0]
	}
	;
	assign AXI4InteconnectModule_L56F30T68_Enumerable[0] = Inputs_iS2M[0][73:53];
	assign AXI4InteconnectModule_L56F30T68_Enumerable[1] = Inputs_iS2M[1][73:53];
	assign AXI4InteconnectModule_L53F17L57T18_Object[317:276] = {
		AXI4InteconnectModule_L56F30T68_Enumerable[1],
		AXI4InteconnectModule_L56F30T68_Enumerable[0]
	}
	;
	assign writeInterconnect_iRight[1] = AXI4InteconnectModule_L53F17L57T18_Object[317:297];
	assign writeInterconnect_iRight[0] = AXI4InteconnectModule_L53F17L57T18_Object[296:276];
	assign writeInterconnect_iLeft[1] = AXI4InteconnectModule_L53F17L57T18_Object[275:138];
	assign writeInterconnect_iLeft[0] = AXI4InteconnectModule_L53F17L57T18_Object[137:0];
	assign AXI4InteconnectModule_L70F35L77T24_0_AXI4InteconnectModule_L72F17L76T18_Object[83:0] = readInterconnect_M2S[0];
	assign AXI4InteconnectModule_L70F35L77T24_0_AXI4InteconnectModule_L72F17L76T18_Object[221:84] = writeInterconnect_M2S[0];
	assign AXI4InteconnectModule_L70F35L77T24_1_AXI4InteconnectModule_L72F17L76T18_Object[83:0] = readInterconnect_M2S[1];
	assign AXI4InteconnectModule_L70F35L77T24_1_AXI4InteconnectModule_L72F17L76T18_Object[221:84] = writeInterconnect_M2S[1];
	assign AXI4InteconnectModule_L70F35L77T24_Enumerable[0] = AXI4InteconnectModule_L70F35L77T24_0_AXI4InteconnectModule_L72F17L76T18_Object;
	assign AXI4InteconnectModule_L70F35L77T24_Enumerable[1] = AXI4InteconnectModule_L70F35L77T24_1_AXI4InteconnectModule_L72F17L76T18_Object;
	assign oM2S0_W_B_BREADY = AXI4InteconnectModule_L70F35L77T24_Enumerable[0][221];
	assign oM2S0_W_W_WVALID = AXI4InteconnectModule_L70F35L77T24_Enumerable[0][220];
	assign oM2S0_W_W_WUSER = AXI4InteconnectModule_L70F35L77T24_Enumerable[0][219:212];
	assign oM2S0_W_W_WLAST = AXI4InteconnectModule_L70F35L77T24_Enumerable[0][211];
	assign oM2S0_W_W_WSTRB = AXI4InteconnectModule_L70F35L77T24_Enumerable[0][210:207];
	assign oM2S0_W_W_WDATA3 = AXI4InteconnectModule_L70F35L77T24_Enumerable[0][206:199];
	assign oM2S0_W_W_WDATA2 = AXI4InteconnectModule_L70F35L77T24_Enumerable[0][198:191];
	assign oM2S0_W_W_WDATA1 = AXI4InteconnectModule_L70F35L77T24_Enumerable[0][190:183];
	assign oM2S0_W_W_WDATA0 = AXI4InteconnectModule_L70F35L77T24_Enumerable[0][182:175];
	assign oM2S0_W_W_WID = AXI4InteconnectModule_L70F35L77T24_Enumerable[0][174:167];
	assign oM2S0_W_AW_AWVALID = AXI4InteconnectModule_L70F35L77T24_Enumerable[0][166];
	assign oM2S0_W_AW_AWUSER = AXI4InteconnectModule_L70F35L77T24_Enumerable[0][165:158];
	assign oM2S0_W_AW_AWREGION = AXI4InteconnectModule_L70F35L77T24_Enumerable[0][157:150];
	assign oM2S0_W_AW_AWQOS = AXI4InteconnectModule_L70F35L77T24_Enumerable[0][149:146];
	assign oM2S0_W_AW_AWPROT = AXI4InteconnectModule_L70F35L77T24_Enumerable[0][145:143];
	assign oM2S0_W_AW_AWCACHE = AXI4InteconnectModule_L70F35L77T24_Enumerable[0][142:139];
	assign oM2S0_W_AW_AWLOCK = AXI4InteconnectModule_L70F35L77T24_Enumerable[0][138:137];
	assign oM2S0_W_AW_AWBURST = AXI4InteconnectModule_L70F35L77T24_Enumerable[0][136:135];
	assign oM2S0_W_AW_AWSIZE = AXI4InteconnectModule_L70F35L77T24_Enumerable[0][134:132];
	assign oM2S0_W_AW_AWLEN = AXI4InteconnectModule_L70F35L77T24_Enumerable[0][131:124];
	assign oM2S0_W_AW_AWADDR = AXI4InteconnectModule_L70F35L77T24_Enumerable[0][123:92];
	assign oM2S0_W_AW_AWID = AXI4InteconnectModule_L70F35L77T24_Enumerable[0][91:84];
	assign oM2S0_R_R_RREADY = AXI4InteconnectModule_L70F35L77T24_Enumerable[0][83];
	assign oM2S0_R_AR_ARVALID = AXI4InteconnectModule_L70F35L77T24_Enumerable[0][82];
	assign oM2S0_R_AR_ARUSER = AXI4InteconnectModule_L70F35L77T24_Enumerable[0][81:74];
	assign oM2S0_R_AR_ARREGION = AXI4InteconnectModule_L70F35L77T24_Enumerable[0][73:66];
	assign oM2S0_R_AR_ARQOS = AXI4InteconnectModule_L70F35L77T24_Enumerable[0][65:62];
	assign oM2S0_R_AR_ARPROT = AXI4InteconnectModule_L70F35L77T24_Enumerable[0][61:59];
	assign oM2S0_R_AR_ARCACHE = AXI4InteconnectModule_L70F35L77T24_Enumerable[0][58:55];
	assign oM2S0_R_AR_ARLOCK = AXI4InteconnectModule_L70F35L77T24_Enumerable[0][54:53];
	assign oM2S0_R_AR_ARBURST = AXI4InteconnectModule_L70F35L77T24_Enumerable[0][52:51];
	assign oM2S0_R_AR_ARSIZE = AXI4InteconnectModule_L70F35L77T24_Enumerable[0][50:48];
	assign oM2S0_R_AR_ARLEN = AXI4InteconnectModule_L70F35L77T24_Enumerable[0][47:40];
	assign oM2S0_R_AR_ARADDR = AXI4InteconnectModule_L70F35L77T24_Enumerable[0][39:8];
	assign oM2S0_R_AR_ARID = AXI4InteconnectModule_L70F35L77T24_Enumerable[0][7:0];
	assign oM2S1_W_B_BREADY = AXI4InteconnectModule_L70F35L77T24_Enumerable[1][221];
	assign oM2S1_W_W_WVALID = AXI4InteconnectModule_L70F35L77T24_Enumerable[1][220];
	assign oM2S1_W_W_WUSER = AXI4InteconnectModule_L70F35L77T24_Enumerable[1][219:212];
	assign oM2S1_W_W_WLAST = AXI4InteconnectModule_L70F35L77T24_Enumerable[1][211];
	assign oM2S1_W_W_WSTRB = AXI4InteconnectModule_L70F35L77T24_Enumerable[1][210:207];
	assign oM2S1_W_W_WDATA3 = AXI4InteconnectModule_L70F35L77T24_Enumerable[1][206:199];
	assign oM2S1_W_W_WDATA2 = AXI4InteconnectModule_L70F35L77T24_Enumerable[1][198:191];
	assign oM2S1_W_W_WDATA1 = AXI4InteconnectModule_L70F35L77T24_Enumerable[1][190:183];
	assign oM2S1_W_W_WDATA0 = AXI4InteconnectModule_L70F35L77T24_Enumerable[1][182:175];
	assign oM2S1_W_W_WID = AXI4InteconnectModule_L70F35L77T24_Enumerable[1][174:167];
	assign oM2S1_W_AW_AWVALID = AXI4InteconnectModule_L70F35L77T24_Enumerable[1][166];
	assign oM2S1_W_AW_AWUSER = AXI4InteconnectModule_L70F35L77T24_Enumerable[1][165:158];
	assign oM2S1_W_AW_AWREGION = AXI4InteconnectModule_L70F35L77T24_Enumerable[1][157:150];
	assign oM2S1_W_AW_AWQOS = AXI4InteconnectModule_L70F35L77T24_Enumerable[1][149:146];
	assign oM2S1_W_AW_AWPROT = AXI4InteconnectModule_L70F35L77T24_Enumerable[1][145:143];
	assign oM2S1_W_AW_AWCACHE = AXI4InteconnectModule_L70F35L77T24_Enumerable[1][142:139];
	assign oM2S1_W_AW_AWLOCK = AXI4InteconnectModule_L70F35L77T24_Enumerable[1][138:137];
	assign oM2S1_W_AW_AWBURST = AXI4InteconnectModule_L70F35L77T24_Enumerable[1][136:135];
	assign oM2S1_W_AW_AWSIZE = AXI4InteconnectModule_L70F35L77T24_Enumerable[1][134:132];
	assign oM2S1_W_AW_AWLEN = AXI4InteconnectModule_L70F35L77T24_Enumerable[1][131:124];
	assign oM2S1_W_AW_AWADDR = AXI4InteconnectModule_L70F35L77T24_Enumerable[1][123:92];
	assign oM2S1_W_AW_AWID = AXI4InteconnectModule_L70F35L77T24_Enumerable[1][91:84];
	assign oM2S1_R_R_RREADY = AXI4InteconnectModule_L70F35L77T24_Enumerable[1][83];
	assign oM2S1_R_AR_ARVALID = AXI4InteconnectModule_L70F35L77T24_Enumerable[1][82];
	assign oM2S1_R_AR_ARUSER = AXI4InteconnectModule_L70F35L77T24_Enumerable[1][81:74];
	assign oM2S1_R_AR_ARREGION = AXI4InteconnectModule_L70F35L77T24_Enumerable[1][73:66];
	assign oM2S1_R_AR_ARQOS = AXI4InteconnectModule_L70F35L77T24_Enumerable[1][65:62];
	assign oM2S1_R_AR_ARPROT = AXI4InteconnectModule_L70F35L77T24_Enumerable[1][61:59];
	assign oM2S1_R_AR_ARCACHE = AXI4InteconnectModule_L70F35L77T24_Enumerable[1][58:55];
	assign oM2S1_R_AR_ARLOCK = AXI4InteconnectModule_L70F35L77T24_Enumerable[1][54:53];
	assign oM2S1_R_AR_ARBURST = AXI4InteconnectModule_L70F35L77T24_Enumerable[1][52:51];
	assign oM2S1_R_AR_ARSIZE = AXI4InteconnectModule_L70F35L77T24_Enumerable[1][50:48];
	assign oM2S1_R_AR_ARLEN = AXI4InteconnectModule_L70F35L77T24_Enumerable[1][47:40];
	assign oM2S1_R_AR_ARADDR = AXI4InteconnectModule_L70F35L77T24_Enumerable[1][39:8];
	assign oM2S1_R_AR_ARID = AXI4InteconnectModule_L70F35L77T24_Enumerable[1][7:0];
	assign AXI4InteconnectModule_L61F35L68T24_0_AXI4InteconnectModule_L63F17L67T18_Object[52:0] = readInterconnect_S2M[0];
	assign AXI4InteconnectModule_L61F35L68T24_0_AXI4InteconnectModule_L63F17L67T18_Object[73:53] = writeInterconnect_S2M[0];
	assign AXI4InteconnectModule_L61F35L68T24_1_AXI4InteconnectModule_L63F17L67T18_Object[52:0] = readInterconnect_S2M[1];
	assign AXI4InteconnectModule_L61F35L68T24_1_AXI4InteconnectModule_L63F17L67T18_Object[73:53] = writeInterconnect_S2M[1];
	assign AXI4InteconnectModule_L61F35L68T24_Enumerable[0] = AXI4InteconnectModule_L61F35L68T24_0_AXI4InteconnectModule_L63F17L67T18_Object;
	assign AXI4InteconnectModule_L61F35L68T24_Enumerable[1] = AXI4InteconnectModule_L61F35L68T24_1_AXI4InteconnectModule_L63F17L67T18_Object;
	assign oS2M0_W_W_WREADY = AXI4InteconnectModule_L61F35L68T24_Enumerable[0][73];
	assign oS2M0_W_B_BVALID = AXI4InteconnectModule_L61F35L68T24_Enumerable[0][72];
	assign oS2M0_W_B_BUSER = AXI4InteconnectModule_L61F35L68T24_Enumerable[0][71:64];
	assign oS2M0_W_B_BRESP = AXI4InteconnectModule_L61F35L68T24_Enumerable[0][63:62];
	assign oS2M0_W_B_BID = AXI4InteconnectModule_L61F35L68T24_Enumerable[0][61:54];
	assign oS2M0_W_AW_AWREADY = AXI4InteconnectModule_L61F35L68T24_Enumerable[0][53];
	assign oS2M0_R_R_RVALID = AXI4InteconnectModule_L61F35L68T24_Enumerable[0][52];
	assign oS2M0_R_R_RUSER = AXI4InteconnectModule_L61F35L68T24_Enumerable[0][51:44];
	assign oS2M0_R_R_RLAST = AXI4InteconnectModule_L61F35L68T24_Enumerable[0][43];
	assign oS2M0_R_R_RRESP = AXI4InteconnectModule_L61F35L68T24_Enumerable[0][42:41];
	assign oS2M0_R_R_RDATA3 = AXI4InteconnectModule_L61F35L68T24_Enumerable[0][40:33];
	assign oS2M0_R_R_RDATA2 = AXI4InteconnectModule_L61F35L68T24_Enumerable[0][32:25];
	assign oS2M0_R_R_RDATA1 = AXI4InteconnectModule_L61F35L68T24_Enumerable[0][24:17];
	assign oS2M0_R_R_RDATA0 = AXI4InteconnectModule_L61F35L68T24_Enumerable[0][16:9];
	assign oS2M0_R_R_RID = AXI4InteconnectModule_L61F35L68T24_Enumerable[0][8:1];
	assign oS2M0_R_AR_ARREADY = AXI4InteconnectModule_L61F35L68T24_Enumerable[0][0];
	assign oS2M1_W_W_WREADY = AXI4InteconnectModule_L61F35L68T24_Enumerable[1][73];
	assign oS2M1_W_B_BVALID = AXI4InteconnectModule_L61F35L68T24_Enumerable[1][72];
	assign oS2M1_W_B_BUSER = AXI4InteconnectModule_L61F35L68T24_Enumerable[1][71:64];
	assign oS2M1_W_B_BRESP = AXI4InteconnectModule_L61F35L68T24_Enumerable[1][63:62];
	assign oS2M1_W_B_BID = AXI4InteconnectModule_L61F35L68T24_Enumerable[1][61:54];
	assign oS2M1_W_AW_AWREADY = AXI4InteconnectModule_L61F35L68T24_Enumerable[1][53];
	assign oS2M1_R_R_RVALID = AXI4InteconnectModule_L61F35L68T24_Enumerable[1][52];
	assign oS2M1_R_R_RUSER = AXI4InteconnectModule_L61F35L68T24_Enumerable[1][51:44];
	assign oS2M1_R_R_RLAST = AXI4InteconnectModule_L61F35L68T24_Enumerable[1][43];
	assign oS2M1_R_R_RRESP = AXI4InteconnectModule_L61F35L68T24_Enumerable[1][42:41];
	assign oS2M1_R_R_RDATA3 = AXI4InteconnectModule_L61F35L68T24_Enumerable[1][40:33];
	assign oS2M1_R_R_RDATA2 = AXI4InteconnectModule_L61F35L68T24_Enumerable[1][32:25];
	assign oS2M1_R_R_RDATA1 = AXI4InteconnectModule_L61F35L68T24_Enumerable[1][24:17];
	assign oS2M1_R_R_RDATA0 = AXI4InteconnectModule_L61F35L68T24_Enumerable[1][16:9];
	assign oS2M1_R_R_RID = AXI4InteconnectModule_L61F35L68T24_Enumerable[1][8:1];
	assign oS2M1_R_AR_ARREADY = AXI4InteconnectModule_L61F35L68T24_Enumerable[1][0];
	assign readInterconnect_iLeft0_readInterconnect_iLeft_HardLink = readInterconnect_iLeft[0];
	assign readInterconnect_iLeft1_readInterconnect_iLeft_HardLink = readInterconnect_iLeft[1];
	assign readInterconnect_iRight0_readInterconnect_iRight_HardLink = readInterconnect_iRight[0];
	assign readInterconnect_iRight1_readInterconnect_iRight_HardLink = readInterconnect_iRight[1];
	assign readInterconnect_M2S[0] = readInterconnect_M2S0_readInterconnect_M2S_HardLink;
	assign readInterconnect_M2S[1] = readInterconnect_M2S1_readInterconnect_M2S_HardLink;
	assign readInterconnect_S2M[0] = readInterconnect_S2M0_readInterconnect_S2M_HardLink;
	assign readInterconnect_S2M[1] = readInterconnect_S2M1_readInterconnect_S2M_HardLink;
	assign writeInterconnect_iLeft0_writeInterconnect_iLeft_HardLink = writeInterconnect_iLeft[0];
	assign writeInterconnect_iLeft1_writeInterconnect_iLeft_HardLink = writeInterconnect_iLeft[1];
	assign writeInterconnect_iRight0_writeInterconnect_iRight_HardLink = writeInterconnect_iRight[0];
	assign writeInterconnect_iRight1_writeInterconnect_iRight_HardLink = writeInterconnect_iRight[1];
	assign writeInterconnect_M2S[0] = writeInterconnect_M2S0_writeInterconnect_M2S_HardLink;
	assign writeInterconnect_M2S[1] = writeInterconnect_M2S1_writeInterconnect_M2S_HardLink;
	assign writeInterconnect_S2M[0] = writeInterconnect_S2M0_writeInterconnect_S2M_HardLink;
	assign writeInterconnect_S2M[1] = writeInterconnect_S2M1_writeInterconnect_S2M_HardLink;
	// [BEGIN USER ARCHITECTURE]
	// [END USER ARCHITECTURE]
endmodule
