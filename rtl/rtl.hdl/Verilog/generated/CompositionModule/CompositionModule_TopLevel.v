`timescale 1ns/1ps
`default_nettype none
// PLEASE READ THIS, IT MAY SAVE YOU SOME TIME AND MONEY, THANK YOU!
// * This file was generated by Quokka FPGA Toolkit.
// * Generated code is your property, do whatever you want with it
// * Place custom code between [BEGIN USER ***] and [END USER ***].
// * CAUTION: All code outside of [USER] scope is subject to regeneration.
// * Bad things happen sometimes in developer's life,
//   it is recommended to use source control management software (e.g. git, bzr etc) to keep your custom code safe'n'sound.
// * Internal structure of code is subject to change.
//   You can use some of signals in custom code, but most likely they will not exist in future (e.g. will get shorter or gone completely)
// * Please send your feedback, comments, improvement ideas etc. to evmuryshkin@gmail.com
// * Visit https://github.com/EvgenyMuryshkin/QuokkaEvaluation to access latest version of playground
//
// DISCLAIMER:
//   Code comes AS-IS, it is your responsibility to make sure it is working as expected
//   no responsibility will be taken for any loss or damage caused by use of Quokka toolkit.
//
// System configuration name is CompositionModule_TopLevel, clock frequency is 1Hz, Top-level
// FSM summary
// -- Packages
module CompositionModule_TopLevel
(
	// [BEGIN USER PORTS]
	// [END USER PORTS]
	input wire Clock,
	input wire Reset,
	input wire iIsEnabled,
	output wire [7:0] oData,
	output wire oHasData
);
	// [BEGIN USER SIGNALS]
	// [END USER SIGNALS]
	localparam HiSignal = 1'b1;
	localparam LoSignal = 1'b0;
	wire Zero = 1'b0;
	wire One = 1'b1;
	wire true = 1'b1;
	wire false = 1'b0;
	wire CompositionModule_L42F28T32_Expr = 1'b1;
	wire Inputs_iIsEnabled;
	wire Emitter_iAck;
	wire Emitter_iIsEnabled;
	wire [7: 0] Emitter_oData;
	wire Emitter_oHasData;
	wire Receiver_iAck;
	wire Receiver_iBit;
	wire Receiver_iIsValid;
	wire [7: 0] Receiver_oData;
	wire Receiver_oHasData;
	wire Transmitter_iAck;
	wire [7: 0] Transmitter_iData;
	wire Transmitter_iTrigger;
	wire Transmitter_oBit;
	wire Transmitter_oIsReady;
	wire Transmitter_oIsTransmissionStarted;
	wire Transmitter_oIsTransmitting;
	wire [1: 0] CompositionModule_L25F36L29T18_Object;
	wire [9: 0] CompositionModule_L31F40L36T17_Object;
	wire [2: 0] CompositionModule_L38F37L43T18_Object;
	wire Emitter_iAck_Emitter_iAck_HardLink;
	wire Emitter_iIsEnabled_Emitter_iIsEnabled_HardLink;
	wire [7: 0] Emitter_oData_Emitter_oData_HardLink;
	wire Emitter_oHasData_Emitter_oHasData_HardLink;
	wire Receiver_iAck_Receiver_iAck_HardLink;
	wire Receiver_iBit_Receiver_iBit_HardLink;
	wire Receiver_iIsValid_Receiver_iIsValid_HardLink;
	wire [7: 0] Receiver_oData_Receiver_oData_HardLink;
	wire Receiver_oHasData_Receiver_oHasData_HardLink;
	wire Transmitter_iAck_Transmitter_iAck_HardLink;
	wire [7: 0] Transmitter_iData_Transmitter_iData_HardLink;
	wire Transmitter_iTrigger_Transmitter_iTrigger_HardLink;
	wire Transmitter_oBit_Transmitter_oBit_HardLink;
	wire Transmitter_oIsReady_Transmitter_oIsReady_HardLink;
	wire Transmitter_oIsTransmissionStarted_Transmitter_oIsTransmissionStarted_HardLink;
	wire Transmitter_oIsTransmitting_Transmitter_oIsTransmitting_HardLink;
	wire BoardSignals_Clock;
	wire BoardSignals_Reset;
	wire BoardSignals_Running;
	wire BoardSignals_Starting;
	wire BoardSignals_Started;
	reg InternalReset = 1'b0;
	work_Quokka_BoardSignalsProc BoardSignalsConnection(BoardSignals_Clock, BoardSignals_Reset, BoardSignals_Running, BoardSignals_Starting, BoardSignals_Started, Clock, Reset, InternalReset);
	CompositionModule_TopLevel_Emitter
	CompositionModule_TopLevel_Emitter
	(
		// [BEGIN USER MAP FOR Emitter]
		// [END USER MAP FOR Emitter]
		.BoardSignals_Clock (BoardSignals_Clock),
		.BoardSignals_Reset (BoardSignals_Reset),
		.BoardSignals_Running (BoardSignals_Running),
		.BoardSignals_Starting (BoardSignals_Starting),
		.BoardSignals_Started (BoardSignals_Started),
		.iAck (Emitter_iAck_Emitter_iAck_HardLink),
		.iIsEnabled (Emitter_iIsEnabled_Emitter_iIsEnabled_HardLink),
		.oData (Emitter_oData_Emitter_oData_HardLink),
		.oHasData (Emitter_oHasData_Emitter_oHasData_HardLink)
	);
	CompositionModule_TopLevel_Receiver
	CompositionModule_TopLevel_Receiver
	(
		// [BEGIN USER MAP FOR Receiver]
		// [END USER MAP FOR Receiver]
		.BoardSignals_Clock (BoardSignals_Clock),
		.BoardSignals_Reset (BoardSignals_Reset),
		.BoardSignals_Running (BoardSignals_Running),
		.BoardSignals_Starting (BoardSignals_Starting),
		.BoardSignals_Started (BoardSignals_Started),
		.iAck (Receiver_iAck_Receiver_iAck_HardLink),
		.iBit (Receiver_iBit_Receiver_iBit_HardLink),
		.iIsValid (Receiver_iIsValid_Receiver_iIsValid_HardLink),
		.oData (Receiver_oData_Receiver_oData_HardLink),
		.oHasData (Receiver_oHasData_Receiver_oHasData_HardLink)
	);
	CompositionModule_TopLevel_Transmitter
	CompositionModule_TopLevel_Transmitter
	(
		// [BEGIN USER MAP FOR Transmitter]
		// [END USER MAP FOR Transmitter]
		.BoardSignals_Clock (BoardSignals_Clock),
		.BoardSignals_Reset (BoardSignals_Reset),
		.BoardSignals_Running (BoardSignals_Running),
		.BoardSignals_Starting (BoardSignals_Starting),
		.BoardSignals_Started (BoardSignals_Started),
		.iAck (Transmitter_iAck_Transmitter_iAck_HardLink),
		.iData (Transmitter_iData_Transmitter_iData_HardLink),
		.iTrigger (Transmitter_iTrigger_Transmitter_iTrigger_HardLink),
		.oBit (Transmitter_oBit_Transmitter_oBit_HardLink),
		.oIsReady (Transmitter_oIsReady_Transmitter_oIsReady_HardLink),
		.oIsTransmissionStarted (Transmitter_oIsTransmissionStarted_Transmitter_oIsTransmissionStarted_HardLink),
		.oIsTransmitting (Transmitter_oIsTransmitting_Transmitter_oIsTransmitting_HardLink)
	);
	assign Inputs_iIsEnabled = iIsEnabled;
	assign CompositionModule_L25F36L29T18_Object[0] = Transmitter_oIsReady;
	assign CompositionModule_L25F36L29T18_Object[1] = Inputs_iIsEnabled;
	assign Emitter_iIsEnabled = CompositionModule_L25F36L29T18_Object[1];
	assign Emitter_iAck = CompositionModule_L25F36L29T18_Object[0];
	assign CompositionModule_L31F40L36T17_Object[0] = Receiver_oHasData;
	assign CompositionModule_L31F40L36T17_Object[8:1] = Emitter_oData;
	assign CompositionModule_L31F40L36T17_Object[9] = Emitter_oHasData;
	assign Transmitter_iTrigger = CompositionModule_L31F40L36T17_Object[9];
	assign Transmitter_iData = CompositionModule_L31F40L36T17_Object[8:1];
	assign Transmitter_iAck = CompositionModule_L31F40L36T17_Object[0];
	assign CompositionModule_L38F37L43T18_Object[0] = CompositionModule_L42F28T32_Expr;
	assign CompositionModule_L38F37L43T18_Object[1] = Transmitter_oBit;
	assign CompositionModule_L38F37L43T18_Object[2] = Transmitter_oIsTransmitting;
	assign Receiver_iIsValid = CompositionModule_L38F37L43T18_Object[2];
	assign Receiver_iBit = CompositionModule_L38F37L43T18_Object[1];
	assign Receiver_iAck = CompositionModule_L38F37L43T18_Object[0];
	assign oData = Receiver_oData;
	assign oHasData = Receiver_oHasData;
	assign Emitter_iAck_Emitter_iAck_HardLink = Emitter_iAck;
	assign Emitter_iIsEnabled_Emitter_iIsEnabled_HardLink = Emitter_iIsEnabled;
	assign Emitter_oData = Emitter_oData_Emitter_oData_HardLink;
	assign Emitter_oHasData = Emitter_oHasData_Emitter_oHasData_HardLink;
	assign Receiver_iAck_Receiver_iAck_HardLink = Receiver_iAck;
	assign Receiver_iBit_Receiver_iBit_HardLink = Receiver_iBit;
	assign Receiver_iIsValid_Receiver_iIsValid_HardLink = Receiver_iIsValid;
	assign Receiver_oData = Receiver_oData_Receiver_oData_HardLink;
	assign Receiver_oHasData = Receiver_oHasData_Receiver_oHasData_HardLink;
	assign Transmitter_iAck_Transmitter_iAck_HardLink = Transmitter_iAck;
	assign Transmitter_iData_Transmitter_iData_HardLink = Transmitter_iData;
	assign Transmitter_iTrigger_Transmitter_iTrigger_HardLink = Transmitter_iTrigger;
	assign Transmitter_oBit = Transmitter_oBit_Transmitter_oBit_HardLink;
	assign Transmitter_oIsReady = Transmitter_oIsReady_Transmitter_oIsReady_HardLink;
	assign Transmitter_oIsTransmissionStarted = Transmitter_oIsTransmissionStarted_Transmitter_oIsTransmissionStarted_HardLink;
	assign Transmitter_oIsTransmitting = Transmitter_oIsTransmitting_Transmitter_oIsTransmitting_HardLink;
	// [BEGIN USER ARCHITECTURE]
	// [END USER ARCHITECTURE]
endmodule
