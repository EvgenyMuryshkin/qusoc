`timescale 1ns/1ps
`default_nettype none
// PLEASE READ THIS, IT MAY SAVE YOU SOME TIME AND MONEY, THANK YOU!
// * This file was generated by Quokka FPGA Toolkit.
// * Generated code is your property, do whatever you want with it
// * Place custom code between [BEGIN USER ***] and [END USER ***].
// * CAUTION: All code outside of [USER] scope is subject to regeneration.
// * Bad things happen sometimes in developer's life,
//   it is recommended to use source control management software (e.g. git, bzr etc) to keep your custom code safe'n'sound.
// * Internal structure of code is subject to change.
//   You can use some of signals in custom code, but most likely they will not exist in future (e.g. will get shorter or gone completely)
// * Please send your feedback, comments, improvement ideas etc. to evmuryshkin@gmail.com
// * Visit https://github.com/EvgenyMuryshkin/QuokkaEvaluation to access latest version of playground
//
// DISCLAIMER:
//   Code comes AS-IS, it is your responsibility to make sure it is working as expected
//   no responsibility will be taken for any loss or damage caused by use of Quokka toolkit.
//
// System configuration name is AXI4SoC2x2_TopLevel, clock frequency is 1Hz, Top-level
// FSM summary
// -- Packages
module AXI4SoC2x2_TopLevel
(
	// [BEGIN USER PORTS]
	// [END USER PORTS]
	input wire Clock,
	input wire Reset,
	input wire [31:0] MasterInputs0_ARADDR,
	input wire [31:0] MasterInputs0_AWADDR,
	input wire MasterInputs0_RE,
	input wire [7:0] MasterInputs0_WDATA0,
	input wire [7:0] MasterInputs0_WDATA1,
	input wire [7:0] MasterInputs0_WDATA2,
	input wire [7:0] MasterInputs0_WDATA3,
	input wire MasterInputs0_WE,
	input wire [3:0] MasterInputs0_WSTRB,
	input wire [31:0] MasterInputs1_ARADDR,
	input wire [31:0] MasterInputs1_AWADDR,
	input wire MasterInputs1_RE,
	input wire [7:0] MasterInputs1_WDATA0,
	input wire [7:0] MasterInputs1_WDATA1,
	input wire [7:0] MasterInputs1_WDATA2,
	input wire [7:0] MasterInputs1_WDATA3,
	input wire MasterInputs1_WE,
	input wire [3:0] MasterInputs1_WSTRB,
	input wire [7:0] RegInputs0_inWDATA0,
	input wire [7:0] RegInputs0_inWDATA1,
	input wire [7:0] RegInputs0_inWDATA2,
	input wire [7:0] RegInputs0_inWDATA3,
	input wire RegInputs0_inWE,
	input wire [7:0] RegInputs1_inWDATA0,
	input wire [7:0] RegInputs1_inWDATA1,
	input wire [7:0] RegInputs1_inWDATA2,
	input wire [7:0] RegInputs1_inWDATA3,
	input wire RegInputs1_inWE,
	output wire outMasters0_outRACK,
	output wire [7:0] outMasters0_outRData0,
	output wire [7:0] outMasters0_outRData1,
	output wire [7:0] outMasters0_outRData2,
	output wire [7:0] outMasters0_outRData3,
	output wire outMasters0_outWACK,
	output wire outMasters1_outRACK,
	output wire [7:0] outMasters1_outRData0,
	output wire [7:0] outMasters1_outRData1,
	output wire [7:0] outMasters1_outRData2,
	output wire [7:0] outMasters1_outRData3,
	output wire outMasters1_outWACK,
	output wire outRegs0_outACK,
	output wire [7:0] outRegs0_outData0,
	output wire [7:0] outRegs0_outData1,
	output wire [7:0] outRegs0_outData2,
	output wire [7:0] outRegs0_outData3,
	output wire outRegs0_outWritten,
	output wire outRegs1_outACK,
	output wire [7:0] outRegs1_outData0,
	output wire [7:0] outRegs1_outData1,
	output wire [7:0] outRegs1_outData2,
	output wire [7:0] outRegs1_outData3,
	output wire outRegs1_outWritten
);
	// [BEGIN USER SIGNALS]
	// [END USER SIGNALS]
	localparam HiSignal = 1'b1;
	localparam LoSignal = 1'b0;
	wire Zero = 1'b0;
	wire One = 1'b1;
	wire true = 1'b1;
	wire false = 1'b0;
	wire signed [2: 0] mCount = 3'b010;
	wire signed [2: 0] sCount = 3'b010;
	wire AXI4SoC2x2_L87F13L96T14_0_masterIndex = 1'b0;
	wire AXI4SoC2x2_L87F13L96T14_1_masterIndex = 1'b1;
	wire AXI4SoC2x2_L98F13L107T14_0_registerIndex = 1'b0;
	wire AXI4SoC2x2_L98F13L107T14_1_registerIndex = 1'b1;
	wire [101: 0] masters0_Master;
	wire [73: 0] masters0_S2M;
	wire [221: 0] masters0_M2S;
	wire masters0_RACK;
	wire masters0_WACK;
	wire [101: 0] masters1_Master;
	wire [73: 0] masters1_S2M;
	wire [221: 0] masters1_M2S;
	wire masters1_RACK;
	wire masters1_WACK;
	wire [221: 0] registers0_M2S;
	wire [32: 0] registers0_Reg;
	wire registers0_outACK;
	wire registers0_outWritten;
	wire [73: 0] registers0_S2M;
	wire [221: 0] registers1_M2S;
	wire [32: 0] registers1_Reg;
	wire registers1_outACK;
	wire registers1_outWritten;
	wire [73: 0] registers1_S2M;
	wire [175: 0] AXI4SoC2x2_L87F13L96T14_0_AXI4SoC2x2_L90F21L94T22_Object;
	wire [175: 0] AXI4SoC2x2_L87F13L96T14_1_AXI4SoC2x2_L90F21L94T22_Object;
	wire [254: 0] AXI4SoC2x2_L98F13L107T14_0_AXI4SoC2x2_L101F21L105T22_Object;
	wire [254: 0] AXI4SoC2x2_L98F13L107T14_1_AXI4SoC2x2_L101F21L105T22_Object;
	wire [591: 0] AXI4SoC2x2_L110F17L114T18_Object;
	wire [33: 0] AXI4SoC2x2_L74F52L81T23_masters0_AXI4SoC2x2_L75F26L80T14_Object;
	wire [33: 0] AXI4SoC2x2_L74F52L81T23_masters1_AXI4SoC2x2_L75F26L80T14_Object;
	wire [33: 0] AXI4SoC2x2_L66F51L72T25_registers0_AXI4SoC2x2_L67F26L72T14_Object;
	wire [33: 0] AXI4SoC2x2_L66F51L72T25_registers1_AXI4SoC2x2_L67F26L72T14_Object;
	wire [221: 0] interconnect_iM2S0_interconnect_iM2S_HardLink;
	wire [221: 0] interconnect_iM2S1_interconnect_iM2S_HardLink;
	wire [73: 0] interconnect_iS2M0_interconnect_iS2M_HardLink;
	wire [73: 0] interconnect_iS2M1_interconnect_iS2M_HardLink;
	wire [221: 0] interconnect_oM2S0_interconnect_oM2S_HardLink;
	wire [221: 0] interconnect_oM2S1_interconnect_oM2S_HardLink;
	wire [73: 0] interconnect_oS2M0_interconnect_oS2M_HardLink;
	wire [73: 0] interconnect_oS2M1_interconnect_oS2M_HardLink;
	wire [101: 0] masters0_Master_masters0_Master_HardLink;
	wire [73: 0] masters0_S2M_masters0_S2M_HardLink;
	wire [221: 0] masters0_M2S_masters0_M2S_HardLink;
	wire masters0_RACK_masters0_RACK_HardLink;
	wire [7: 0] masters0_RDATA0_masters0_RDATA_HardLink;
	wire [7: 0] masters0_RDATA1_masters0_RDATA_HardLink;
	wire [7: 0] masters0_RDATA2_masters0_RDATA_HardLink;
	wire [7: 0] masters0_RDATA3_masters0_RDATA_HardLink;
	wire masters0_WACK_masters0_WACK_HardLink;
	wire [101: 0] masters1_Master_masters1_Master_HardLink;
	wire [73: 0] masters1_S2M_masters1_S2M_HardLink;
	wire [221: 0] masters1_M2S_masters1_M2S_HardLink;
	wire masters1_RACK_masters1_RACK_HardLink;
	wire [7: 0] masters1_RDATA0_masters1_RDATA_HardLink;
	wire [7: 0] masters1_RDATA1_masters1_RDATA_HardLink;
	wire [7: 0] masters1_RDATA2_masters1_RDATA_HardLink;
	wire [7: 0] masters1_RDATA3_masters1_RDATA_HardLink;
	wire masters1_WACK_masters1_WACK_HardLink;
	wire [221: 0] registers0_M2S_registers0_M2S_HardLink;
	wire [32: 0] registers0_Reg_registers0_Reg_HardLink;
	wire registers0_outACK_registers0_outACK_HardLink;
	wire [7: 0] registers0_outData0_registers0_outData_HardLink;
	wire [7: 0] registers0_outData1_registers0_outData_HardLink;
	wire [7: 0] registers0_outData2_registers0_outData_HardLink;
	wire [7: 0] registers0_outData3_registers0_outData_HardLink;
	wire registers0_outWritten_registers0_outWritten_HardLink;
	wire [73: 0] registers0_S2M_registers0_S2M_HardLink;
	wire [221: 0] registers1_M2S_registers1_M2S_HardLink;
	wire [32: 0] registers1_Reg_registers1_Reg_HardLink;
	wire registers1_outACK_registers1_outACK_HardLink;
	wire [7: 0] registers1_outData0_registers1_outData_HardLink;
	wire [7: 0] registers1_outData1_registers1_outData_HardLink;
	wire [7: 0] registers1_outData2_registers1_outData_HardLink;
	wire [7: 0] registers1_outData3_registers1_outData_HardLink;
	wire registers1_outWritten_registers1_outWritten_HardLink;
	wire [73: 0] registers1_S2M_registers1_S2M_HardLink;
	wire [101 : 0] Inputs_MasterInputs [0 : 1];
	wire [32 : 0] Inputs_RegInputs [0 : 1];
	wire [221 : 0] interconnect_iM2S [0 : 1];
	wire [73 : 0] interconnect_iS2M [0 : 1];
	wire [221 : 0] interconnect_oM2S [0 : 1];
	wire [73 : 0] interconnect_oS2M [0 : 1];
	wire [7 : 0] masters0_RDATA [0 : 3];
	wire [7 : 0] masters1_RDATA [0 : 3];
	wire [7 : 0] registers0_outData [0 : 3];
	wire [7 : 0] registers1_outData [0 : 3];
	wire [221 : 0] AXI4SoC2x2_L112F28T64_Enumerable [0 : 1];
	wire [73 : 0] AXI4SoC2x2_L113F28T66_Enumerable [0 : 1];
	wire [33 : 0] AXI4SoC2x2_L74F52L81T23_Enumerable [0 : 1];
	wire [33 : 0] AXI4SoC2x2_L66F51L72T25_Enumerable [0 : 1];
	wire BoardSignals_Clock;
	wire BoardSignals_Reset;
	wire BoardSignals_Running;
	wire BoardSignals_Starting;
	wire BoardSignals_Started;
	reg InternalReset = 1'b0;
	work_Quokka_BoardSignalsProc BoardSignalsConnection(BoardSignals_Clock, BoardSignals_Reset, BoardSignals_Running, BoardSignals_Starting, BoardSignals_Started, Clock, Reset, InternalReset);
	AXI4SoC2x2_TopLevel_interconnect
	AXI4SoC2x2_TopLevel_interconnect
	(
		// [BEGIN USER MAP FOR interconnect]
		// [END USER MAP FOR interconnect]
		.BoardSignals_Clock (BoardSignals_Clock),
		.BoardSignals_Reset (BoardSignals_Reset),
		.BoardSignals_Running (BoardSignals_Running),
		.BoardSignals_Starting (BoardSignals_Starting),
		.BoardSignals_Started (BoardSignals_Started),
		.iM2S0 (interconnect_iM2S0_interconnect_iM2S_HardLink),
		.iM2S1 (interconnect_iM2S1_interconnect_iM2S_HardLink),
		.iS2M0 (interconnect_iS2M0_interconnect_iS2M_HardLink),
		.iS2M1 (interconnect_iS2M1_interconnect_iS2M_HardLink),
		.oM2S0 (interconnect_oM2S0_interconnect_oM2S_HardLink),
		.oM2S1 (interconnect_oM2S1_interconnect_oM2S_HardLink),
		.oS2M0 (interconnect_oS2M0_interconnect_oS2M_HardLink),
		.oS2M1 (interconnect_oS2M1_interconnect_oS2M_HardLink)
	);
	AXI4SoC2x2_TopLevel_masters0
	AXI4SoC2x2_TopLevel_masters0
	(
		// [BEGIN USER MAP FOR masters0]
		// [END USER MAP FOR masters0]
		.BoardSignals_Clock (BoardSignals_Clock),
		.BoardSignals_Reset (BoardSignals_Reset),
		.BoardSignals_Running (BoardSignals_Running),
		.BoardSignals_Starting (BoardSignals_Starting),
		.BoardSignals_Started (BoardSignals_Started),
		.Master (masters0_Master_masters0_Master_HardLink),
		.S2M (masters0_S2M_masters0_S2M_HardLink),
		.M2S (masters0_M2S_masters0_M2S_HardLink),
		.RACK (masters0_RACK_masters0_RACK_HardLink),
		.RDATA0 (masters0_RDATA0_masters0_RDATA_HardLink),
		.RDATA1 (masters0_RDATA1_masters0_RDATA_HardLink),
		.RDATA2 (masters0_RDATA2_masters0_RDATA_HardLink),
		.RDATA3 (masters0_RDATA3_masters0_RDATA_HardLink),
		.WACK (masters0_WACK_masters0_WACK_HardLink)
	);
	AXI4SoC2x2_TopLevel_masters1
	AXI4SoC2x2_TopLevel_masters1
	(
		// [BEGIN USER MAP FOR masters1]
		// [END USER MAP FOR masters1]
		.BoardSignals_Clock (BoardSignals_Clock),
		.BoardSignals_Reset (BoardSignals_Reset),
		.BoardSignals_Running (BoardSignals_Running),
		.BoardSignals_Starting (BoardSignals_Starting),
		.BoardSignals_Started (BoardSignals_Started),
		.Master (masters1_Master_masters1_Master_HardLink),
		.S2M (masters1_S2M_masters1_S2M_HardLink),
		.M2S (masters1_M2S_masters1_M2S_HardLink),
		.RACK (masters1_RACK_masters1_RACK_HardLink),
		.RDATA0 (masters1_RDATA0_masters1_RDATA_HardLink),
		.RDATA1 (masters1_RDATA1_masters1_RDATA_HardLink),
		.RDATA2 (masters1_RDATA2_masters1_RDATA_HardLink),
		.RDATA3 (masters1_RDATA3_masters1_RDATA_HardLink),
		.WACK (masters1_WACK_masters1_WACK_HardLink)
	);
	AXI4SoC2x2_TopLevel_registers0
	AXI4SoC2x2_TopLevel_registers0
	(
		// [BEGIN USER MAP FOR registers0]
		// [END USER MAP FOR registers0]
		.BoardSignals_Clock (BoardSignals_Clock),
		.BoardSignals_Reset (BoardSignals_Reset),
		.BoardSignals_Running (BoardSignals_Running),
		.BoardSignals_Starting (BoardSignals_Starting),
		.BoardSignals_Started (BoardSignals_Started),
		.M2S (registers0_M2S_registers0_M2S_HardLink),
		.Reg (registers0_Reg_registers0_Reg_HardLink),
		.outACK (registers0_outACK_registers0_outACK_HardLink),
		.outData0 (registers0_outData0_registers0_outData_HardLink),
		.outData1 (registers0_outData1_registers0_outData_HardLink),
		.outData2 (registers0_outData2_registers0_outData_HardLink),
		.outData3 (registers0_outData3_registers0_outData_HardLink),
		.outWritten (registers0_outWritten_registers0_outWritten_HardLink),
		.S2M (registers0_S2M_registers0_S2M_HardLink)
	);
	AXI4SoC2x2_TopLevel_registers1
	AXI4SoC2x2_TopLevel_registers1
	(
		// [BEGIN USER MAP FOR registers1]
		// [END USER MAP FOR registers1]
		.BoardSignals_Clock (BoardSignals_Clock),
		.BoardSignals_Reset (BoardSignals_Reset),
		.BoardSignals_Running (BoardSignals_Running),
		.BoardSignals_Starting (BoardSignals_Starting),
		.BoardSignals_Started (BoardSignals_Started),
		.M2S (registers1_M2S_registers1_M2S_HardLink),
		.Reg (registers1_Reg_registers1_Reg_HardLink),
		.outACK (registers1_outACK_registers1_outACK_HardLink),
		.outData0 (registers1_outData0_registers1_outData_HardLink),
		.outData1 (registers1_outData1_registers1_outData_HardLink),
		.outData2 (registers1_outData2_registers1_outData_HardLink),
		.outData3 (registers1_outData3_registers1_outData_HardLink),
		.outWritten (registers1_outWritten_registers1_outWritten_HardLink),
		.S2M (registers1_S2M_registers1_S2M_HardLink)
	);
	assign Inputs_MasterInputs[0][101:98] = MasterInputs0_WSTRB;
	assign Inputs_MasterInputs[0][97] = MasterInputs0_WE;
	assign Inputs_MasterInputs[0][96:89] = MasterInputs0_WDATA3;
	assign Inputs_MasterInputs[0][88:81] = MasterInputs0_WDATA2;
	assign Inputs_MasterInputs[0][80:73] = MasterInputs0_WDATA1;
	assign Inputs_MasterInputs[0][72:65] = MasterInputs0_WDATA0;
	assign Inputs_MasterInputs[0][64] = MasterInputs0_RE;
	assign Inputs_MasterInputs[0][63:32] = MasterInputs0_AWADDR;
	assign Inputs_MasterInputs[0][31:0] = MasterInputs0_ARADDR;
	assign Inputs_MasterInputs[1][101:98] = MasterInputs1_WSTRB;
	assign Inputs_MasterInputs[1][97] = MasterInputs1_WE;
	assign Inputs_MasterInputs[1][96:89] = MasterInputs1_WDATA3;
	assign Inputs_MasterInputs[1][88:81] = MasterInputs1_WDATA2;
	assign Inputs_MasterInputs[1][80:73] = MasterInputs1_WDATA1;
	assign Inputs_MasterInputs[1][72:65] = MasterInputs1_WDATA0;
	assign Inputs_MasterInputs[1][64] = MasterInputs1_RE;
	assign Inputs_MasterInputs[1][63:32] = MasterInputs1_AWADDR;
	assign Inputs_MasterInputs[1][31:0] = MasterInputs1_ARADDR;
	assign Inputs_RegInputs[0][32] = RegInputs0_inWE;
	assign Inputs_RegInputs[0][31:24] = RegInputs0_inWDATA3;
	assign Inputs_RegInputs[0][23:16] = RegInputs0_inWDATA2;
	assign Inputs_RegInputs[0][15:8] = RegInputs0_inWDATA1;
	assign Inputs_RegInputs[0][7:0] = RegInputs0_inWDATA0;
	assign Inputs_RegInputs[1][32] = RegInputs1_inWE;
	assign Inputs_RegInputs[1][31:24] = RegInputs1_inWDATA3;
	assign Inputs_RegInputs[1][23:16] = RegInputs1_inWDATA2;
	assign Inputs_RegInputs[1][15:8] = RegInputs1_inWDATA1;
	assign Inputs_RegInputs[1][7:0] = RegInputs1_inWDATA0;
	assign AXI4SoC2x2_L87F13L96T14_0_AXI4SoC2x2_L90F21L94T22_Object[101:0] = Inputs_MasterInputs[0];
	assign AXI4SoC2x2_L87F13L96T14_0_AXI4SoC2x2_L90F21L94T22_Object[175:102] = interconnect_oS2M[0];
	assign masters0_S2M = AXI4SoC2x2_L87F13L96T14_0_AXI4SoC2x2_L90F21L94T22_Object[175:102];
	assign masters0_Master = AXI4SoC2x2_L87F13L96T14_0_AXI4SoC2x2_L90F21L94T22_Object[101:0];
	assign AXI4SoC2x2_L87F13L96T14_1_AXI4SoC2x2_L90F21L94T22_Object[101:0] = Inputs_MasterInputs[1];
	assign AXI4SoC2x2_L87F13L96T14_1_AXI4SoC2x2_L90F21L94T22_Object[175:102] = interconnect_oS2M[1];
	assign masters1_S2M = AXI4SoC2x2_L87F13L96T14_1_AXI4SoC2x2_L90F21L94T22_Object[175:102];
	assign masters1_Master = AXI4SoC2x2_L87F13L96T14_1_AXI4SoC2x2_L90F21L94T22_Object[101:0];
	assign AXI4SoC2x2_L98F13L107T14_0_AXI4SoC2x2_L101F21L105T22_Object[221:0] = interconnect_oM2S[0];
	assign AXI4SoC2x2_L98F13L107T14_0_AXI4SoC2x2_L101F21L105T22_Object[254:222] = Inputs_RegInputs[0];
	assign registers0_Reg = AXI4SoC2x2_L98F13L107T14_0_AXI4SoC2x2_L101F21L105T22_Object[254:222];
	assign registers0_M2S = AXI4SoC2x2_L98F13L107T14_0_AXI4SoC2x2_L101F21L105T22_Object[221:0];
	assign AXI4SoC2x2_L98F13L107T14_1_AXI4SoC2x2_L101F21L105T22_Object[221:0] = interconnect_oM2S[1];
	assign AXI4SoC2x2_L98F13L107T14_1_AXI4SoC2x2_L101F21L105T22_Object[254:222] = Inputs_RegInputs[1];
	assign registers1_Reg = AXI4SoC2x2_L98F13L107T14_1_AXI4SoC2x2_L101F21L105T22_Object[254:222];
	assign registers1_M2S = AXI4SoC2x2_L98F13L107T14_1_AXI4SoC2x2_L101F21L105T22_Object[221:0];
	assign AXI4SoC2x2_L112F28T64_Enumerable[0] = masters0_M2S;
	assign AXI4SoC2x2_L112F28T64_Enumerable[1] = masters1_M2S;
	assign AXI4SoC2x2_L110F17L114T18_Object[443:0] = {
		AXI4SoC2x2_L112F28T64_Enumerable[1],
		AXI4SoC2x2_L112F28T64_Enumerable[0]
	}
	;
	assign AXI4SoC2x2_L113F28T66_Enumerable[0] = registers0_S2M;
	assign AXI4SoC2x2_L113F28T66_Enumerable[1] = registers1_S2M;
	assign AXI4SoC2x2_L110F17L114T18_Object[591:444] = {
		AXI4SoC2x2_L113F28T66_Enumerable[1],
		AXI4SoC2x2_L113F28T66_Enumerable[0]
	}
	;
	assign interconnect_iS2M[1] = AXI4SoC2x2_L110F17L114T18_Object[591:518];
	assign interconnect_iS2M[0] = AXI4SoC2x2_L110F17L114T18_Object[517:444];
	assign interconnect_iM2S[1] = AXI4SoC2x2_L110F17L114T18_Object[443:222];
	assign interconnect_iM2S[0] = AXI4SoC2x2_L110F17L114T18_Object[221:0];
	assign AXI4SoC2x2_L74F52L81T23_masters0_AXI4SoC2x2_L75F26L80T14_Object[0] = masters0_RACK;
	assign AXI4SoC2x2_L74F52L81T23_masters0_AXI4SoC2x2_L75F26L80T14_Object[32:1] = {
		masters0_RDATA[3],
		masters0_RDATA[2],
		masters0_RDATA[1],
		masters0_RDATA[0]
	}
	;
	assign AXI4SoC2x2_L74F52L81T23_masters0_AXI4SoC2x2_L75F26L80T14_Object[33] = masters0_WACK;
	assign AXI4SoC2x2_L74F52L81T23_masters1_AXI4SoC2x2_L75F26L80T14_Object[0] = masters1_RACK;
	assign AXI4SoC2x2_L74F52L81T23_masters1_AXI4SoC2x2_L75F26L80T14_Object[32:1] = {
		masters1_RDATA[3],
		masters1_RDATA[2],
		masters1_RDATA[1],
		masters1_RDATA[0]
	}
	;
	assign AXI4SoC2x2_L74F52L81T23_masters1_AXI4SoC2x2_L75F26L80T14_Object[33] = masters1_WACK;
	assign AXI4SoC2x2_L74F52L81T23_Enumerable[0] = AXI4SoC2x2_L74F52L81T23_masters0_AXI4SoC2x2_L75F26L80T14_Object;
	assign AXI4SoC2x2_L74F52L81T23_Enumerable[1] = AXI4SoC2x2_L74F52L81T23_masters1_AXI4SoC2x2_L75F26L80T14_Object;
	assign outMasters0_outWACK = AXI4SoC2x2_L74F52L81T23_Enumerable[0][33];
	assign outMasters0_outRData3 = AXI4SoC2x2_L74F52L81T23_Enumerable[0][32:25];
	assign outMasters0_outRData2 = AXI4SoC2x2_L74F52L81T23_Enumerable[0][24:17];
	assign outMasters0_outRData1 = AXI4SoC2x2_L74F52L81T23_Enumerable[0][16:9];
	assign outMasters0_outRData0 = AXI4SoC2x2_L74F52L81T23_Enumerable[0][8:1];
	assign outMasters0_outRACK = AXI4SoC2x2_L74F52L81T23_Enumerable[0][0];
	assign outMasters1_outWACK = AXI4SoC2x2_L74F52L81T23_Enumerable[1][33];
	assign outMasters1_outRData3 = AXI4SoC2x2_L74F52L81T23_Enumerable[1][32:25];
	assign outMasters1_outRData2 = AXI4SoC2x2_L74F52L81T23_Enumerable[1][24:17];
	assign outMasters1_outRData1 = AXI4SoC2x2_L74F52L81T23_Enumerable[1][16:9];
	assign outMasters1_outRData0 = AXI4SoC2x2_L74F52L81T23_Enumerable[1][8:1];
	assign outMasters1_outRACK = AXI4SoC2x2_L74F52L81T23_Enumerable[1][0];
	assign AXI4SoC2x2_L66F51L72T25_registers0_AXI4SoC2x2_L67F26L72T14_Object[0] = registers0_outACK;
	assign AXI4SoC2x2_L66F51L72T25_registers0_AXI4SoC2x2_L67F26L72T14_Object[32:1] = {
		registers0_outData[3],
		registers0_outData[2],
		registers0_outData[1],
		registers0_outData[0]
	}
	;
	assign AXI4SoC2x2_L66F51L72T25_registers0_AXI4SoC2x2_L67F26L72T14_Object[33] = registers0_outWritten;
	assign AXI4SoC2x2_L66F51L72T25_registers1_AXI4SoC2x2_L67F26L72T14_Object[0] = registers1_outACK;
	assign AXI4SoC2x2_L66F51L72T25_registers1_AXI4SoC2x2_L67F26L72T14_Object[32:1] = {
		registers1_outData[3],
		registers1_outData[2],
		registers1_outData[1],
		registers1_outData[0]
	}
	;
	assign AXI4SoC2x2_L66F51L72T25_registers1_AXI4SoC2x2_L67F26L72T14_Object[33] = registers1_outWritten;
	assign AXI4SoC2x2_L66F51L72T25_Enumerable[0] = AXI4SoC2x2_L66F51L72T25_registers0_AXI4SoC2x2_L67F26L72T14_Object;
	assign AXI4SoC2x2_L66F51L72T25_Enumerable[1] = AXI4SoC2x2_L66F51L72T25_registers1_AXI4SoC2x2_L67F26L72T14_Object;
	assign outRegs0_outWritten = AXI4SoC2x2_L66F51L72T25_Enumerable[0][33];
	assign outRegs0_outData3 = AXI4SoC2x2_L66F51L72T25_Enumerable[0][32:25];
	assign outRegs0_outData2 = AXI4SoC2x2_L66F51L72T25_Enumerable[0][24:17];
	assign outRegs0_outData1 = AXI4SoC2x2_L66F51L72T25_Enumerable[0][16:9];
	assign outRegs0_outData0 = AXI4SoC2x2_L66F51L72T25_Enumerable[0][8:1];
	assign outRegs0_outACK = AXI4SoC2x2_L66F51L72T25_Enumerable[0][0];
	assign outRegs1_outWritten = AXI4SoC2x2_L66F51L72T25_Enumerable[1][33];
	assign outRegs1_outData3 = AXI4SoC2x2_L66F51L72T25_Enumerable[1][32:25];
	assign outRegs1_outData2 = AXI4SoC2x2_L66F51L72T25_Enumerable[1][24:17];
	assign outRegs1_outData1 = AXI4SoC2x2_L66F51L72T25_Enumerable[1][16:9];
	assign outRegs1_outData0 = AXI4SoC2x2_L66F51L72T25_Enumerable[1][8:1];
	assign outRegs1_outACK = AXI4SoC2x2_L66F51L72T25_Enumerable[1][0];
	assign interconnect_iM2S0_interconnect_iM2S_HardLink = interconnect_iM2S[0];
	assign interconnect_iM2S1_interconnect_iM2S_HardLink = interconnect_iM2S[1];
	assign interconnect_iS2M0_interconnect_iS2M_HardLink = interconnect_iS2M[0];
	assign interconnect_iS2M1_interconnect_iS2M_HardLink = interconnect_iS2M[1];
	assign interconnect_oM2S[0] = interconnect_oM2S0_interconnect_oM2S_HardLink;
	assign interconnect_oM2S[1] = interconnect_oM2S1_interconnect_oM2S_HardLink;
	assign interconnect_oS2M[0] = interconnect_oS2M0_interconnect_oS2M_HardLink;
	assign interconnect_oS2M[1] = interconnect_oS2M1_interconnect_oS2M_HardLink;
	assign masters0_Master_masters0_Master_HardLink = masters0_Master;
	assign masters0_S2M_masters0_S2M_HardLink = masters0_S2M;
	assign masters0_M2S = masters0_M2S_masters0_M2S_HardLink;
	assign masters0_RACK = masters0_RACK_masters0_RACK_HardLink;
	assign masters0_RDATA[0] = masters0_RDATA0_masters0_RDATA_HardLink;
	assign masters0_RDATA[1] = masters0_RDATA1_masters0_RDATA_HardLink;
	assign masters0_RDATA[2] = masters0_RDATA2_masters0_RDATA_HardLink;
	assign masters0_RDATA[3] = masters0_RDATA3_masters0_RDATA_HardLink;
	assign masters0_WACK = masters0_WACK_masters0_WACK_HardLink;
	assign masters1_Master_masters1_Master_HardLink = masters1_Master;
	assign masters1_S2M_masters1_S2M_HardLink = masters1_S2M;
	assign masters1_M2S = masters1_M2S_masters1_M2S_HardLink;
	assign masters1_RACK = masters1_RACK_masters1_RACK_HardLink;
	assign masters1_RDATA[0] = masters1_RDATA0_masters1_RDATA_HardLink;
	assign masters1_RDATA[1] = masters1_RDATA1_masters1_RDATA_HardLink;
	assign masters1_RDATA[2] = masters1_RDATA2_masters1_RDATA_HardLink;
	assign masters1_RDATA[3] = masters1_RDATA3_masters1_RDATA_HardLink;
	assign masters1_WACK = masters1_WACK_masters1_WACK_HardLink;
	assign registers0_M2S_registers0_M2S_HardLink = registers0_M2S;
	assign registers0_Reg_registers0_Reg_HardLink = registers0_Reg;
	assign registers0_outACK = registers0_outACK_registers0_outACK_HardLink;
	assign registers0_outData[0] = registers0_outData0_registers0_outData_HardLink;
	assign registers0_outData[1] = registers0_outData1_registers0_outData_HardLink;
	assign registers0_outData[2] = registers0_outData2_registers0_outData_HardLink;
	assign registers0_outData[3] = registers0_outData3_registers0_outData_HardLink;
	assign registers0_outWritten = registers0_outWritten_registers0_outWritten_HardLink;
	assign registers0_S2M = registers0_S2M_registers0_S2M_HardLink;
	assign registers1_M2S_registers1_M2S_HardLink = registers1_M2S;
	assign registers1_Reg_registers1_Reg_HardLink = registers1_Reg;
	assign registers1_outACK = registers1_outACK_registers1_outACK_HardLink;
	assign registers1_outData[0] = registers1_outData0_registers1_outData_HardLink;
	assign registers1_outData[1] = registers1_outData1_registers1_outData_HardLink;
	assign registers1_outData[2] = registers1_outData2_registers1_outData_HardLink;
	assign registers1_outData[3] = registers1_outData3_registers1_outData_HardLink;
	assign registers1_outWritten = registers1_outWritten_registers1_outWritten_HardLink;
	assign registers1_S2M = registers1_S2M_registers1_S2M_HardLink;
	// [BEGIN USER ARCHITECTURE]
	// [END USER ARCHITECTURE]
endmodule
