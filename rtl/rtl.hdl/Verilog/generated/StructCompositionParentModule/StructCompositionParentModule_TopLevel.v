`timescale 1ns/1ps
`default_nettype none
// PLEASE READ THIS, IT MAY SAVE YOU SOME TIME AND MONEY, THANK YOU!
// * This file was generated by Quokka FPGA Toolkit.
// * Generated code is your property, do whatever you want with it
// * Place custom code between [BEGIN USER ***] and [END USER ***].
// * CAUTION: All code outside of [USER] scope is subject to regeneration.
// * Bad things happen sometimes in developer's life,
//   it is recommended to use source control management software (e.g. git, bzr etc) to keep your custom code safe'n'sound.
// * Internal structure of code is subject to change.
//   You can use some of signals in custom code, but most likely they will not exist in future (e.g. will get shorter or gone completely)
// * Please send your feedback, comments, improvement ideas etc. to evmuryshkin@gmail.com
// * Visit https://github.com/EvgenyMuryshkin/QuokkaEvaluation to access latest version of playground
//
// DISCLAIMER:
//   Code comes AS-IS, it is your responsibility to make sure it is working as expected
//   no responsibility will be taken for any loss or damage caused by use of Quokka toolkit.
//
// System configuration name is StructCompositionParentModule_TopLevel, clock frequency is 1Hz, Top-level
// FSM summary
// -- Packages
module StructCompositionParentModule_TopLevel
(
	// [BEGIN USER PORTS]
	// [END USER PORTS]
	input wire [15:0] iValue_intValue,
	input wire [7:0] iValue_l1_byteValue,
	input wire [1:0] iValue_l1_l2_bitArray,
	input wire iValue_l1_l2_boolValue0,
	input wire iValue_l1_l2_boolValue1,
	input wire [1:0] iValue_l1_l2Array0_bitArray,
	input wire iValue_l1_l2Array0_boolValue0,
	input wire iValue_l1_l2Array0_boolValue1,
	input wire [1:0] iValue_l1_l2Array1_bitArray,
	input wire iValue_l1_l2Array1_boolValue0,
	input wire iValue_l1_l2Array1_boolValue1,
	input wire [7:0] iValue_l1Array0_byteValue,
	input wire [1:0] iValue_l1Array0_l2_bitArray,
	input wire iValue_l1Array0_l2_boolValue0,
	input wire iValue_l1Array0_l2_boolValue1,
	input wire [1:0] iValue_l1Array0_l2Array0_bitArray,
	input wire iValue_l1Array0_l2Array0_boolValue0,
	input wire iValue_l1Array0_l2Array0_boolValue1,
	input wire [1:0] iValue_l1Array0_l2Array1_bitArray,
	input wire iValue_l1Array0_l2Array1_boolValue0,
	input wire iValue_l1Array0_l2Array1_boolValue1,
	input wire [7:0] iValue_l1Array1_byteValue,
	input wire [1:0] iValue_l1Array1_l2_bitArray,
	input wire iValue_l1Array1_l2_boolValue0,
	input wire iValue_l1Array1_l2_boolValue1,
	input wire [1:0] iValue_l1Array1_l2Array0_bitArray,
	input wire iValue_l1Array1_l2Array0_boolValue0,
	input wire iValue_l1Array1_l2Array0_boolValue1,
	input wire [1:0] iValue_l1Array1_l2Array1_bitArray,
	input wire iValue_l1Array1_l2Array1_boolValue0,
	input wire iValue_l1Array1_l2Array1_boolValue1,
	output wire [15:0] oOutput_iValue_intValue,
	output wire [7:0] oOutput_iValue_l1_byteValue,
	output wire [1:0] oOutput_iValue_l1_l2_bitArray,
	output wire oOutput_iValue_l1_l2_boolValue0,
	output wire oOutput_iValue_l1_l2_boolValue1,
	output wire [1:0] oOutput_iValue_l1_l2Array0_bitArray,
	output wire oOutput_iValue_l1_l2Array0_boolValue0,
	output wire oOutput_iValue_l1_l2Array0_boolValue1,
	output wire [1:0] oOutput_iValue_l1_l2Array1_bitArray,
	output wire oOutput_iValue_l1_l2Array1_boolValue0,
	output wire oOutput_iValue_l1_l2Array1_boolValue1,
	output wire [7:0] oOutput_iValue_l1Array0_byteValue,
	output wire [1:0] oOutput_iValue_l1Array0_l2_bitArray,
	output wire oOutput_iValue_l1Array0_l2_boolValue0,
	output wire oOutput_iValue_l1Array0_l2_boolValue1,
	output wire [1:0] oOutput_iValue_l1Array0_l2Array0_bitArray,
	output wire oOutput_iValue_l1Array0_l2Array0_boolValue0,
	output wire oOutput_iValue_l1Array0_l2Array0_boolValue1,
	output wire [1:0] oOutput_iValue_l1Array0_l2Array1_bitArray,
	output wire oOutput_iValue_l1Array0_l2Array1_boolValue0,
	output wire oOutput_iValue_l1Array0_l2Array1_boolValue1,
	output wire [7:0] oOutput_iValue_l1Array1_byteValue,
	output wire [1:0] oOutput_iValue_l1Array1_l2_bitArray,
	output wire oOutput_iValue_l1Array1_l2_boolValue0,
	output wire oOutput_iValue_l1Array1_l2_boolValue1,
	output wire [1:0] oOutput_iValue_l1Array1_l2Array0_bitArray,
	output wire oOutput_iValue_l1Array1_l2Array0_boolValue0,
	output wire oOutput_iValue_l1Array1_l2Array0_boolValue1,
	output wire [1:0] oOutput_iValue_l1Array1_l2Array1_bitArray,
	output wire oOutput_iValue_l1Array1_l2Array1_boolValue0,
	output wire oOutput_iValue_l1Array1_l2Array1_boolValue1
);
	// [BEGIN USER SIGNALS]
	// [END USER SIGNALS]
	localparam HiSignal = 1'b1;
	localparam LoSignal = 1'b0;
	wire Zero = 1'b0;
	wire One = 1'b1;
	wire true = 1'b1;
	wire false = 1'b0;
	wire [15: 0] Inputs_iValue_intValue;
	wire [7: 0] Inputs_iValue_l1_byteValue;
	wire [1: 0] Inputs_iValue_l1_l2_bitArray;
	wire [75: 0] child_iValue;
	wire [75: 0] child_Output;
	wire [75: 0] StructsNestedIOModule_L82F34L85T14_Object;
	wire [75: 0] child_iValue_child_iValue_HardLink;
	wire [75: 0] child_Output_child_Output_HardLink;
	wire Inputs_iValue_l1_l2_boolValue [0 : 1];
	wire [3 : 0] Inputs_iValue_l1_l2Array [0 : 1];
	wire [19 : 0] Inputs_iValue_l1Array [0 : 1];
	StructCompositionParentModule_TopLevel_child
	StructCompositionParentModule_TopLevel_child
	(
		// [BEGIN USER MAP FOR child]
		// [END USER MAP FOR child]
		.iValue (child_iValue_child_iValue_HardLink),
		.Output (child_Output_child_Output_HardLink)
	);
	assign Inputs_iValue_intValue = iValue_intValue;
	assign Inputs_iValue_l1_byteValue = iValue_l1_byteValue;
	assign Inputs_iValue_l1_l2_bitArray = iValue_l1_l2_bitArray;
	assign Inputs_iValue_l1_l2_boolValue[0] = iValue_l1_l2_boolValue0;
	assign Inputs_iValue_l1_l2_boolValue[1] = iValue_l1_l2_boolValue1;
	assign Inputs_iValue_l1_l2Array[0][3] = iValue_l1_l2Array0_boolValue1;
	assign Inputs_iValue_l1_l2Array[0][2] = iValue_l1_l2Array0_boolValue0;
	assign Inputs_iValue_l1_l2Array[0][1:0] = iValue_l1_l2Array0_bitArray;
	assign Inputs_iValue_l1_l2Array[1][3] = iValue_l1_l2Array1_boolValue1;
	assign Inputs_iValue_l1_l2Array[1][2] = iValue_l1_l2Array1_boolValue0;
	assign Inputs_iValue_l1_l2Array[1][1:0] = iValue_l1_l2Array1_bitArray;
	assign Inputs_iValue_l1Array[0][19] = iValue_l1Array0_l2Array1_boolValue1;
	assign Inputs_iValue_l1Array[0][18] = iValue_l1Array0_l2Array1_boolValue0;
	assign Inputs_iValue_l1Array[0][17:16] = iValue_l1Array0_l2Array1_bitArray;
	assign Inputs_iValue_l1Array[0][15] = iValue_l1Array0_l2Array0_boolValue1;
	assign Inputs_iValue_l1Array[0][14] = iValue_l1Array0_l2Array0_boolValue0;
	assign Inputs_iValue_l1Array[0][13:12] = iValue_l1Array0_l2Array0_bitArray;
	assign Inputs_iValue_l1Array[0][11] = iValue_l1Array0_l2_boolValue1;
	assign Inputs_iValue_l1Array[0][10] = iValue_l1Array0_l2_boolValue0;
	assign Inputs_iValue_l1Array[0][9:8] = iValue_l1Array0_l2_bitArray;
	assign Inputs_iValue_l1Array[0][7:0] = iValue_l1Array0_byteValue;
	assign Inputs_iValue_l1Array[1][19] = iValue_l1Array1_l2Array1_boolValue1;
	assign Inputs_iValue_l1Array[1][18] = iValue_l1Array1_l2Array1_boolValue0;
	assign Inputs_iValue_l1Array[1][17:16] = iValue_l1Array1_l2Array1_bitArray;
	assign Inputs_iValue_l1Array[1][15] = iValue_l1Array1_l2Array0_boolValue1;
	assign Inputs_iValue_l1Array[1][14] = iValue_l1Array1_l2Array0_boolValue0;
	assign Inputs_iValue_l1Array[1][13:12] = iValue_l1Array1_l2Array0_bitArray;
	assign Inputs_iValue_l1Array[1][11] = iValue_l1Array1_l2_boolValue1;
	assign Inputs_iValue_l1Array[1][10] = iValue_l1Array1_l2_boolValue0;
	assign Inputs_iValue_l1Array[1][9:8] = iValue_l1Array1_l2_bitArray;
	assign Inputs_iValue_l1Array[1][7:0] = iValue_l1Array1_byteValue;
	assign StructsNestedIOModule_L82F34L85T14_Object[15:0] = Inputs_iValue_intValue;
	assign StructsNestedIOModule_L82F34L85T14_Object[23:16] = Inputs_iValue_l1_byteValue;
	assign StructsNestedIOModule_L82F34L85T14_Object[25:24] = Inputs_iValue_l1_l2_bitArray;
	assign StructsNestedIOModule_L82F34L85T14_Object[27:26] = {
		Inputs_iValue_l1_l2_boolValue[1],
		Inputs_iValue_l1_l2_boolValue[0]
	}
	;
	assign StructsNestedIOModule_L82F34L85T14_Object[35:28] = {
		Inputs_iValue_l1_l2Array[1],
		Inputs_iValue_l1_l2Array[0]
	}
	;
	assign StructsNestedIOModule_L82F34L85T14_Object[75:36] = {
		Inputs_iValue_l1Array[1],
		Inputs_iValue_l1Array[0]
	}
	;
	assign child_iValue = StructsNestedIOModule_L82F34L85T14_Object[75:0];
	assign oOutput_iValue_l1Array1_l2Array1_boolValue1 = child_Output[75];
	assign oOutput_iValue_l1Array1_l2Array1_boolValue0 = child_Output[74];
	assign oOutput_iValue_l1Array1_l2Array1_bitArray = child_Output[73:72];
	assign oOutput_iValue_l1Array1_l2Array0_boolValue1 = child_Output[71];
	assign oOutput_iValue_l1Array1_l2Array0_boolValue0 = child_Output[70];
	assign oOutput_iValue_l1Array1_l2Array0_bitArray = child_Output[69:68];
	assign oOutput_iValue_l1Array1_l2_boolValue1 = child_Output[67];
	assign oOutput_iValue_l1Array1_l2_boolValue0 = child_Output[66];
	assign oOutput_iValue_l1Array1_l2_bitArray = child_Output[65:64];
	assign oOutput_iValue_l1Array1_byteValue = child_Output[63:56];
	assign oOutput_iValue_l1Array0_l2Array1_boolValue1 = child_Output[55];
	assign oOutput_iValue_l1Array0_l2Array1_boolValue0 = child_Output[54];
	assign oOutput_iValue_l1Array0_l2Array1_bitArray = child_Output[53:52];
	assign oOutput_iValue_l1Array0_l2Array0_boolValue1 = child_Output[51];
	assign oOutput_iValue_l1Array0_l2Array0_boolValue0 = child_Output[50];
	assign oOutput_iValue_l1Array0_l2Array0_bitArray = child_Output[49:48];
	assign oOutput_iValue_l1Array0_l2_boolValue1 = child_Output[47];
	assign oOutput_iValue_l1Array0_l2_boolValue0 = child_Output[46];
	assign oOutput_iValue_l1Array0_l2_bitArray = child_Output[45:44];
	assign oOutput_iValue_l1Array0_byteValue = child_Output[43:36];
	assign oOutput_iValue_l1_l2Array1_boolValue1 = child_Output[35];
	assign oOutput_iValue_l1_l2Array1_boolValue0 = child_Output[34];
	assign oOutput_iValue_l1_l2Array1_bitArray = child_Output[33:32];
	assign oOutput_iValue_l1_l2Array0_boolValue1 = child_Output[31];
	assign oOutput_iValue_l1_l2Array0_boolValue0 = child_Output[30];
	assign oOutput_iValue_l1_l2Array0_bitArray = child_Output[29:28];
	assign oOutput_iValue_l1_l2_boolValue1 = child_Output[27];
	assign oOutput_iValue_l1_l2_boolValue0 = child_Output[26];
	assign oOutput_iValue_l1_l2_bitArray = child_Output[25:24];
	assign oOutput_iValue_l1_byteValue = child_Output[23:16];
	assign oOutput_iValue_intValue = child_Output[15:0];
	assign child_iValue_child_iValue_HardLink = child_iValue;
	assign child_Output = child_Output_child_Output_HardLink;
	// [BEGIN USER ARCHITECTURE]
	// [END USER ARCHITECTURE]
endmodule
