`default_nettype none
// PLEASE READ THIS, IT MAY SAVE YOU SOME TIME AND MONEY, THANK YOU!
// * This file was generated by Quokka FPGA Toolkit.
// * Generated code is your property, do whatever you want with it
// * Place custom code between [BEGIN USER ***] and [END USER ***].
// * CAUTION: All code outside of [USER] scope is subject to regeneration.
// * Bad things happen sometimes in developer's life,
//   it is recommended to use source control management software (e.g. git, bzr etc) to keep your custom code safe'n'sound.
// * Internal structure of code is subject to change.
//   You can use some of signals in custom code, but most likely they will not exist in future (e.g. will get shorter or gone completely)
// * Please send your feedback, comments, improvement ideas etc. to evmuryshkin@gmail.com
// * Visit https://github.com/EvgenyMuryshkin/QuokkaEvaluation to access latest version of playground
// 
// DISCLAIMER:
//   Code comes AS-IS, it is your responsibility to make sure it is working as expected
//   no responsibility will be taken for any loss or damage caused by use of Quokka toolkit.
// 
// System configuration name is BoardTimerModule_TopLevel, clock frequency is 1Hz, Top-level
// FSM summary
// -- Packages
module BoardTimerModule_TopLevel (
// [BEGIN USER PORTS]
// [END USER PORTS]

	input wire  clk,
	input wire  Reset,
	input wire  Restart,
	output wire OutActive10,
	output wire OutActive20//,
	//output wire [7: 0] OutT1,
	//output wire [7: 0] OutT2
    );

// [BEGIN USER SIGNALS]
// [END USER SIGNALS]
localparam HiSignal = 1'b1;
localparam LoSignal = 1'b0;
wire  Zero = 1'b0;
wire  One = 1'b1;
wire  true = 1'b1;
wire  false = 1'b0;
wire  BoardTimerModule_L57F9L63T10_BoardTimerModule_L59F50T51_Expr = 1'b1;
wire  BoardTimerModule_L57F9L63T10_BoardTimerModule_L62F50T51_Expr = 1'b1;
wire  Inputs_Restart;
reg  [7:0] NextState_t1;
reg  [7:0] NextState_t2;
wire  nestedTimerInputs_Restart;
wire  timerModule10_Restart;
wire  timerModule10_OutActive;
wire  timerModule20_Restart;
wire  timerModule20_OutActive;
wire  [7:0] BoardTimerModule_L57F9L63T10_BoardTimerModule_L59F32T52_Cast;
wire  [7:0] BoardTimerModule_L57F9L63T10_BoardTimerModule_L62F32T52_Cast;
wire  timerModule10RestarttimerModule10_RestartHardLink;
wire  timerModule10OutActivetimerModule10_OutActiveHardLink;
wire  timerModule20RestarttimerModule20_RestartHardLink;
wire  timerModule20OutActivetimerModule20_OutActiveHardLink;
reg  [7:0] State_t1 = 8'b00000000;
wire  [7:0] State_t1Default = 8'b00000000;
reg  [7:0] State_t2 = 8'b00000000;
wire  [7:0] State_t2Default = 8'b00000000;
wire  [9:0] BoardTimerModule_L57F9L63T10_BoardTimerModule_L59F39T51_Expr;
wire signed  [9:0] BoardTimerModule_L57F9L63T10_BoardTimerModule_L59F39T51_Expr_1;
wire signed  [9:0] BoardTimerModule_L57F9L63T10_BoardTimerModule_L59F39T51_Expr_2;
wire  [9:0] BoardTimerModule_L57F9L63T10_BoardTimerModule_L62F39T51_Expr;
wire signed  [9:0] BoardTimerModule_L57F9L63T10_BoardTimerModule_L62F39T51_Expr_1;
wire signed  [9:0] BoardTimerModule_L57F9L63T10_BoardTimerModule_L62F39T51_Expr_2;
wire  BoardSignals_Clock;
wire  BoardSignals_Reset;
wire  BoardSignals_Running;
wire  BoardSignals_Starting;
wire  BoardSignals_Started;
reg  InternalReset = 1'b0;
work_Quokka_BoardSignalsProc BoardSignalsConnection(BoardSignals_Clock,BoardSignals_Reset,BoardSignals_Running,BoardSignals_Starting,BoardSignals_Started,clk,Reset,InternalReset);
always @(posedge clk)
begin
if ( Reset == 1 ) begin
State_t1 <= State_t1Default;
State_t2 <= State_t2Default;
end
else begin
State_t1 <= NextState_t1;
State_t2 <= NextState_t2;
end
end
assign BoardTimerModule_L57F9L63T10_BoardTimerModule_L59F39T51_Expr = BoardTimerModule_L57F9L63T10_BoardTimerModule_L59F39T51_Expr_1 + BoardTimerModule_L57F9L63T10_BoardTimerModule_L59F39T51_Expr_2;
assign BoardTimerModule_L57F9L63T10_BoardTimerModule_L62F39T51_Expr = BoardTimerModule_L57F9L63T10_BoardTimerModule_L62F39T51_Expr_1 + BoardTimerModule_L57F9L63T10_BoardTimerModule_L62F39T51_Expr_2;
BoardTimerModule_TopLevel_BoardTimerModule_timerModule10 BoardTimerModule_TopLevel_BoardTimerModule_timerModule10
(
// [BEGIN USER MAP FOR timerModule10]
// [END USER MAP FOR timerModule10]
	.BoardSignals_Clock (BoardSignals_Clock),
	.BoardSignals_Reset (BoardSignals_Reset),
	.BoardSignals_Running (BoardSignals_Running),
	.BoardSignals_Starting (BoardSignals_Starting),
	.BoardSignals_Started (BoardSignals_Started),
	.Restart (timerModule10RestarttimerModule10_RestartHardLink),
	.OutActive (timerModule10OutActivetimerModule10_OutActiveHardLink)

);
BoardTimerModule_TopLevel_BoardTimerModule_timerModule20 BoardTimerModule_TopLevel_BoardTimerModule_timerModule20
(
// [BEGIN USER MAP FOR timerModule20]
// [END USER MAP FOR timerModule20]
	.BoardSignals_Clock (BoardSignals_Clock),
	.BoardSignals_Reset (BoardSignals_Reset),
	.BoardSignals_Running (BoardSignals_Running),
	.BoardSignals_Starting (BoardSignals_Starting),
	.BoardSignals_Started (BoardSignals_Started),
	.Restart (timerModule20RestarttimerModule20_RestartHardLink),
	.OutActive (timerModule20OutActivetimerModule20_OutActiveHardLink)

);
always @*
begin
NextState_t1 = State_t1;
NextState_t2 = State_t2;
if ( timerModule10_OutActive == 1 ) begin
NextState_t1 = BoardTimerModule_L57F9L63T10_BoardTimerModule_L59F32T52_Cast;
end
if ( timerModule20_OutActive == 1 ) begin
NextState_t2 = BoardTimerModule_L57F9L63T10_BoardTimerModule_L62F32T52_Cast;
end

end
assign BoardTimerModule_L57F9L63T10_BoardTimerModule_L59F39T51_Expr_1 = { {2{1'b0}}, State_t1 }/*expand*/;
assign BoardTimerModule_L57F9L63T10_BoardTimerModule_L59F39T51_Expr_2 = { {9{1'b0}}, BoardTimerModule_L57F9L63T10_BoardTimerModule_L59F50T51_Expr }/*expand*/;
assign BoardTimerModule_L57F9L63T10_BoardTimerModule_L62F39T51_Expr_1 = { {2{1'b0}}, State_t2 }/*expand*/;
assign BoardTimerModule_L57F9L63T10_BoardTimerModule_L62F39T51_Expr_2 = { {9{1'b0}}, BoardTimerModule_L57F9L63T10_BoardTimerModule_L62F50T51_Expr }/*expand*/;
assign Inputs_Restart = Restart;
assign nestedTimerInputs_Restart = Inputs_Restart;
assign timerModule10_Restart = nestedTimerInputs_Restart;
assign timerModule20_Restart = nestedTimerInputs_Restart;
assign BoardTimerModule_L57F9L63T10_BoardTimerModule_L59F32T52_Cast = BoardTimerModule_L57F9L63T10_BoardTimerModule_L59F39T51_Expr[7:0]/*truncate*/;
assign BoardTimerModule_L57F9L63T10_BoardTimerModule_L62F32T52_Cast = BoardTimerModule_L57F9L63T10_BoardTimerModule_L62F39T51_Expr[7:0]/*truncate*/;
assign OutActive10 = timerModule10_OutActive;
assign OutActive20 = timerModule20_OutActive;
//assign OutT1 = State_t1;
//assign OutT2 = State_t2;
assign timerModule10RestarttimerModule10_RestartHardLink = timerModule10_Restart;
assign timerModule10_OutActive = timerModule10OutActivetimerModule10_OutActiveHardLink;
assign timerModule20RestarttimerModule20_RestartHardLink = timerModule20_Restart;
assign timerModule20_OutActive = timerModule20OutActivetimerModule20_OutActiveHardLink;
// [BEGIN USER ARCHITECTURE]
// [END USER ARCHITECTURE]
endmodule
