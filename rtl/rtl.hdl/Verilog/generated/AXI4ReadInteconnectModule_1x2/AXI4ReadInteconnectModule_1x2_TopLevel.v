`timescale 1ns/1ps
`default_nettype none
// PLEASE READ THIS, IT MAY SAVE YOU SOME TIME AND MONEY, THANK YOU!
// * This file was generated by Quokka FPGA Toolkit.
// * Generated code is your property, do whatever you want with it
// * Place custom code between [BEGIN USER ***] and [END USER ***].
// * CAUTION: All code outside of [USER] scope is subject to regeneration.
// * Bad things happen sometimes in developer's life,
//   it is recommended to use source control management software (e.g. git, bzr etc) to keep your custom code safe'n'sound.
// * Internal structure of code is subject to change.
//   You can use some of signals in custom code, but most likely they will not exist in future (e.g. will get shorter or gone completely)
// * Please send your feedback, comments, improvement ideas etc. to evmuryshkin@gmail.com
// * Visit https://github.com/EvgenyMuryshkin/QuokkaEvaluation to access latest version of playground
//
// DISCLAIMER:
//   Code comes AS-IS, it is your responsibility to make sure it is working as expected
//   no responsibility will be taken for any loss or damage caused by use of Quokka toolkit.
//
// System configuration name is AXI4ReadInteconnectModule_1x2_TopLevel, clock frequency is 1Hz, Top-level
// FSM summary
// -- Packages
module AXI4ReadInteconnectModule_1x2_TopLevel
(
	// [BEGIN USER PORTS]
	// [END USER PORTS]
	input wire Clock,
	input wire Reset,
	input wire [7:0] iLeft0_AR_ARID,
	input wire [31:0] iLeft0_AR_ARADDR,
	input wire [7:0] iLeft0_AR_ARLEN,
	input wire [2:0] iLeft0_AR_ARSIZE,
	input wire [1:0] iLeft0_AR_ARBURST,
	input wire [1:0] iLeft0_AR_ARLOCK,
	input wire [3:0] iLeft0_AR_ARCACHE,
	input wire [2:0] iLeft0_AR_ARPROT,
	input wire [3:0] iLeft0_AR_ARQOS,
	input wire [7:0] iLeft0_AR_ARREGION,
	input wire [7:0] iLeft0_AR_ARUSER,
	input wire iLeft0_AR_ARVALID,
	input wire iLeft0_R_RREADY,
	input wire iRight0_AR_ARREADY,
	input wire [7:0] iRight0_R_RID,
	input wire [7:0] iRight0_R_RDATA0,
	input wire [7:0] iRight0_R_RDATA1,
	input wire [7:0] iRight0_R_RDATA2,
	input wire [7:0] iRight0_R_RDATA3,
	input wire [1:0] iRight0_R_RRESP,
	input wire iRight0_R_RLAST,
	input wire [7:0] iRight0_R_RUSER,
	input wire iRight0_R_RVALID,
	input wire iRight1_AR_ARREADY,
	input wire [7:0] iRight1_R_RID,
	input wire [7:0] iRight1_R_RDATA0,
	input wire [7:0] iRight1_R_RDATA1,
	input wire [7:0] iRight1_R_RDATA2,
	input wire [7:0] iRight1_R_RDATA3,
	input wire [1:0] iRight1_R_RRESP,
	input wire iRight1_R_RLAST,
	input wire [7:0] iRight1_R_RUSER,
	input wire iRight1_R_RVALID
);
	// [BEGIN USER SIGNALS]
	// [END USER SIGNALS]
	localparam HiSignal = 1'b1;
	localparam LoSignal = 1'b0;
	wire Zero = 1'b0;
	wire One = 1'b1;
	wire true = 1'b1;
	wire false = 1'b0;
	wire signed [1: 0] leftCount = 2'b01;
	wire signed [2: 0] rightCount = 3'b010;
	wire InterconnectModule_L76F13L85T14_InterconnectModule_L77F39T44_Expr = 1'b0;
	wire InterconnectModule_L125F39T43_Expr = 1'b1;
	wire [7: 0] muxLeftData_AR_ARID;
	wire [31: 0] muxLeftData_AR_ARADDR;
	wire [7: 0] muxLeftData_AR_ARLEN;
	wire [2: 0] muxLeftData_AR_ARSIZE;
	wire [1: 0] muxLeftData_AR_ARBURST;
	wire [1: 0] muxLeftData_AR_ARLOCK;
	wire [3: 0] muxLeftData_AR_ARCACHE;
	wire [2: 0] muxLeftData_AR_ARPROT;
	wire [3: 0] muxLeftData_AR_ARQOS;
	wire [7: 0] muxLeftData_AR_ARREGION;
	wire [7: 0] muxLeftData_AR_ARUSER;
	wire muxLeftData_AR_ARVALID;
	wire muxLeftData_R_RREADY;
	wire muxRightData_AR_ARREADY;
	wire [7: 0] muxRightData_R_RID;
	wire [1: 0] muxRightData_R_RRESP;
	wire muxRightData_R_RLAST;
	wire [7: 0] muxRightData_R_RUSER;
	wire muxRightData_R_RVALID;
	wire restartTransactions;
	wire [0: 0] DuplexMux_iLeftAddr;
	wire DuplexMux_iLeftAddrValid;
	wire [0: 0] DuplexMux_iRightAddr;
	wire DuplexMux_iRightAddrValid;
	wire [83: 0] DuplexMux_oMuxLeftData;
	wire [52: 0] DuplexMux_oMuxRightData;
	wire Encoder_HasActive;
	wire [0: 0] Encoder_MSBIndex;
	wire [0: 0] Encoder_MSBValue;
	wire TransactionDetectors0_iRestart;
	wire TransactionDetectors0_iTXBegin;
	wire TransactionDetectors0_iTXEnd;
	wire TransactionDetectors0_oTransaction;
	wire TransactionDetectors0_oWaitForRestart;
	wire [31: 0] rangeDetectorArray_iAddress;
	wire rangeDetectorArray_oActive;
	wire [0: 0] rangeDetectorArray_oIndex;
	reg InterconnectModule_L76F13L85T14_hasTransaction;
	integer idx;
	wire InterconnectModule_L93F13L96T14_0_InterconnectModule_L95F75T101_Index;
	wire [83: 0] DuplexMux_iLeft0_DuplexMux_iLeft_HardLink;
	wire [0: 0] DuplexMux_iLeftAddr_DuplexMux_iLeftAddr_HardLink;
	wire DuplexMux_iLeftAddrValid_DuplexMux_iLeftAddrValid_HardLink;
	wire [52: 0] DuplexMux_iRight0_DuplexMux_iRight_HardLink;
	wire [52: 0] DuplexMux_iRight1_DuplexMux_iRight_HardLink;
	wire [0: 0] DuplexMux_iRightAddr_DuplexMux_iRightAddr_HardLink;
	wire DuplexMux_iRightAddrValid_DuplexMux_iRightAddrValid_HardLink;
	wire [83: 0] DuplexMux_oLeft0_DuplexMux_oLeft_HardLink;
	wire [83: 0] DuplexMux_oLeft1_DuplexMux_oLeft_HardLink;
	wire [83: 0] DuplexMux_oMuxLeftData_DuplexMux_oMuxLeftData_HardLink;
	wire [52: 0] DuplexMux_oMuxRightData_DuplexMux_oMuxRightData_HardLink;
	wire [52: 0] DuplexMux_oRight0_DuplexMux_oRight_HardLink;
	wire Encoder_iValues0_Encoder_iValues_HardLink;
	wire Encoder_HasActive_Encoder_HasActive_HardLink;
	wire [0: 0] Encoder_MSBIndex_Encoder_MSBIndex_HardLink;
	wire [0: 0] Encoder_MSBValue_Encoder_MSBValue_HardLink;
	wire TransactionDetectors0_iRestart_TransactionDetectors0_iRestart_HardLink;
	wire TransactionDetectors0_iTXBegin_TransactionDetectors0_iTXBegin_HardLink;
	wire TransactionDetectors0_iTXEnd_TransactionDetectors0_iTXEnd_HardLink;
	wire TransactionDetectors0_oTransaction_TransactionDetectors0_oTransaction_HardLink;
	wire TransactionDetectors0_oWaitForRestart_TransactionDetectors0_oWaitForRestart_HardLink;
	wire [31: 0] rangeDetectorArray_iAddress_rangeDetectorArray_iAddress_HardLink;
	wire rangeDetectorArray_oActive_rangeDetectorArray_oActive_HardLink;
	wire [0: 0] rangeDetectorArray_oIndex_rangeDetectorArray_oIndex_HardLink;
	wire InterconnectModule_L76F13L85T14_InterconnectModule_L84F24T39_Expr;
	wire InterconnectModule_L76F13L85T14_InterconnectModule_L84F24T39_Expr_1;
	wire [83: 0] InterconnectModule_L93F13L96T14_0_InterconnectModule_L95F38T101_Expr;
	wire [83: 0] InterconnectModule_L93F13L96T14_0_InterconnectModule_L95F38T101_Expr_1;
	wire [83: 0] InterconnectModule_L93F13L96T14_0_InterconnectModule_L95F38T101_Expr_2;
	wire InterconnectModule_L93F13L96T14_0_InterconnectModule_L95F74T101_Expr;
	wire InterconnectModule_L93F13L96T14_0_InterconnectModule_L95F74T101_Expr_1;
	wire [83: 0] InterconnectModule_L98F13L108T14_0_InterconnectModule_L104F34T64_AXI4ReadInteconnectModule_L33F61T101_Expr;
	wire [83: 0] InterconnectModule_L98F13L108T14_0_InterconnectModule_L104F34T64_AXI4ReadInteconnectModule_L33F61T101_Expr_1;
	wire [83: 0] InterconnectModule_L98F13L108T14_0_InterconnectModule_L104F34T64_AXI4ReadInteconnectModule_L33F61T101_Expr_2;
	wire InterconnectModule_L98F13L108T14_0_InterconnectModule_L105F36T54_Expr;
	wire InterconnectModule_L98F13L108T14_0_InterconnectModule_L105F36T54_Expr_1;
	wire [83 : 0] Inputs_iLeft [0 : 0];
	wire [52 : 0] Inputs_iRight [0 : 1];
	wire ActiveTransactions [0 : 0];
	wire [83 : 0] muxLeft [0 : 1];
	wire [52 : 0] muxRight [0 : 0];
	wire [7 : 0] muxRightData_R_RDATA [0 : 3];
	wire Transactions [0 : 0];
	wire TXBegin [0 : 0];
	wire WaitForRestarts [0 : 0];
	wire [83 : 0] DuplexMux_iLeft [0 : 0];
	wire [52 : 0] DuplexMux_iRight [0 : 1];
	wire [83 : 0] DuplexMux_oLeft [0 : 1];
	wire [52 : 0] DuplexMux_oRight [0 : 0];
	wire Encoder_iValues [0 : 0];
	wire BoardSignals_Clock;
	wire BoardSignals_Reset;
	wire BoardSignals_Running;
	wire BoardSignals_Starting;
	wire BoardSignals_Started;
	reg InternalReset = 1'b0;
	work_Quokka_BoardSignalsProc BoardSignalsConnection(BoardSignals_Clock, BoardSignals_Reset, BoardSignals_Running, BoardSignals_Starting, BoardSignals_Started, Clock, Reset, InternalReset);
	assign InterconnectModule_L76F13L85T14_InterconnectModule_L84F24T39_Expr = ~InterconnectModule_L76F13L85T14_InterconnectModule_L84F24T39_Expr_1;
	assign InterconnectModule_L93F13L96T14_0_InterconnectModule_L95F38T101_Expr = InterconnectModule_L93F13L96T14_0_InterconnectModule_L95F38T101_Expr_1 & InterconnectModule_L93F13L96T14_0_InterconnectModule_L95F38T101_Expr_2;
	assign InterconnectModule_L93F13L96T14_0_InterconnectModule_L95F74T101_Expr = ~InterconnectModule_L93F13L96T14_0_InterconnectModule_L95F74T101_Expr_1;
	assign InterconnectModule_L98F13L108T14_0_InterconnectModule_L104F34T64_AXI4ReadInteconnectModule_L33F61T101_Expr = InterconnectModule_L98F13L108T14_0_InterconnectModule_L104F34T64_AXI4ReadInteconnectModule_L33F61T101_Expr_1 & InterconnectModule_L98F13L108T14_0_InterconnectModule_L104F34T64_AXI4ReadInteconnectModule_L33F61T101_Expr_2;
	assign InterconnectModule_L98F13L108T14_0_InterconnectModule_L105F36T54_Expr = ~InterconnectModule_L98F13L108T14_0_InterconnectModule_L105F36T54_Expr_1;
	AXI4ReadInteconnectModule_1x2_TopLevel_DuplexMux
	AXI4ReadInteconnectModule_1x2_TopLevel_DuplexMux
	(
		// [BEGIN USER MAP FOR DuplexMux]
		// [END USER MAP FOR DuplexMux]
		.iLeft0 (DuplexMux_iLeft0_DuplexMux_iLeft_HardLink),
		.iLeftAddr (DuplexMux_iLeftAddr_DuplexMux_iLeftAddr_HardLink),
		.iLeftAddrValid (DuplexMux_iLeftAddrValid_DuplexMux_iLeftAddrValid_HardLink),
		.iRight0 (DuplexMux_iRight0_DuplexMux_iRight_HardLink),
		.iRight1 (DuplexMux_iRight1_DuplexMux_iRight_HardLink),
		.iRightAddr (DuplexMux_iRightAddr_DuplexMux_iRightAddr_HardLink),
		.iRightAddrValid (DuplexMux_iRightAddrValid_DuplexMux_iRightAddrValid_HardLink),
		.oLeft0 (DuplexMux_oLeft0_DuplexMux_oLeft_HardLink),
		.oLeft1 (DuplexMux_oLeft1_DuplexMux_oLeft_HardLink),
		.oMuxLeftData (DuplexMux_oMuxLeftData_DuplexMux_oMuxLeftData_HardLink),
		.oMuxRightData (DuplexMux_oMuxRightData_DuplexMux_oMuxRightData_HardLink),
		.oRight0 (DuplexMux_oRight0_DuplexMux_oRight_HardLink)
	);
	AXI4ReadInteconnectModule_1x2_TopLevel_Encoder
	AXI4ReadInteconnectModule_1x2_TopLevel_Encoder
	(
		// [BEGIN USER MAP FOR Encoder]
		// [END USER MAP FOR Encoder]
		.iValues0 (Encoder_iValues0_Encoder_iValues_HardLink),
		.HasActive (Encoder_HasActive_Encoder_HasActive_HardLink),
		.MSBIndex (Encoder_MSBIndex_Encoder_MSBIndex_HardLink),
		.MSBValue (Encoder_MSBValue_Encoder_MSBValue_HardLink)
	);
	AXI4ReadInteconnectModule_1x2_TopLevel_TransactionDetectors0
	AXI4ReadInteconnectModule_1x2_TopLevel_TransactionDetectors0
	(
		// [BEGIN USER MAP FOR TransactionDetectors0]
		// [END USER MAP FOR TransactionDetectors0]
		.BoardSignals_Clock (BoardSignals_Clock),
		.BoardSignals_Reset (BoardSignals_Reset),
		.BoardSignals_Running (BoardSignals_Running),
		.BoardSignals_Starting (BoardSignals_Starting),
		.BoardSignals_Started (BoardSignals_Started),
		.iRestart (TransactionDetectors0_iRestart_TransactionDetectors0_iRestart_HardLink),
		.iTXBegin (TransactionDetectors0_iTXBegin_TransactionDetectors0_iTXBegin_HardLink),
		.iTXEnd (TransactionDetectors0_iTXEnd_TransactionDetectors0_iTXEnd_HardLink),
		.oTransaction (TransactionDetectors0_oTransaction_TransactionDetectors0_oTransaction_HardLink),
		.oWaitForRestart (TransactionDetectors0_oWaitForRestart_TransactionDetectors0_oWaitForRestart_HardLink)
	);
	AXI4ReadInteconnectModule_1x2_TopLevel_rangeDetectorArray
	AXI4ReadInteconnectModule_1x2_TopLevel_rangeDetectorArray
	(
		// [BEGIN USER MAP FOR rangeDetectorArray]
		// [END USER MAP FOR rangeDetectorArray]
		.iAddress (rangeDetectorArray_iAddress_rangeDetectorArray_iAddress_HardLink),
		.oActive (rangeDetectorArray_oActive_rangeDetectorArray_oActive_HardLink),
		.oIndex (rangeDetectorArray_oIndex_rangeDetectorArray_oIndex_HardLink)
	);
	always @ (*)
	begin
		idx = 0;
		InterconnectModule_L76F13L85T14_hasTransaction = InterconnectModule_L76F13L85T14_InterconnectModule_L77F39T44_Expr;
		for (idx = 0; (idx < 1); idx = (idx + 1))
		begin
			InterconnectModule_L76F13L85T14_hasTransaction = (InterconnectModule_L76F13L85T14_hasTransaction | ActiveTransactions[idx]);
		end
	end
	assign InterconnectModule_L76F13L85T14_InterconnectModule_L84F24T39_Expr_1 = InterconnectModule_L76F13L85T14_hasTransaction;
	assign InterconnectModule_L93F13L96T14_0_InterconnectModule_L95F38T101_Expr_1 = { {83{1'b0}}, Inputs_iLeft[0][82] };
	assign InterconnectModule_L93F13L96T14_0_InterconnectModule_L95F38T101_Expr_2 = { {83{1'b0}}, InterconnectModule_L93F13L96T14_0_InterconnectModule_L95F74T101_Expr };
	assign InterconnectModule_L93F13L96T14_0_InterconnectModule_L95F74T101_Expr_1 = InterconnectModule_L93F13L96T14_0_InterconnectModule_L95F75T101_Index;
	assign InterconnectModule_L98F13L108T14_0_InterconnectModule_L104F34T64_AXI4ReadInteconnectModule_L33F61T101_Expr_1 = { {83{1'b0}}, Inputs_iLeft[0][83] };
	assign InterconnectModule_L98F13L108T14_0_InterconnectModule_L104F34T64_AXI4ReadInteconnectModule_L33F61T101_Expr_2 = { {83{1'b0}}, muxRightData_R_RVALID };
	assign InterconnectModule_L98F13L108T14_0_InterconnectModule_L105F36T54_Expr_1 = Encoder_HasActive;
	assign Inputs_iLeft[0][83] = iLeft0_R_RREADY;
	assign Inputs_iLeft[0][82] = iLeft0_AR_ARVALID;
	assign Inputs_iLeft[0][81:74] = iLeft0_AR_ARUSER;
	assign Inputs_iLeft[0][73:66] = iLeft0_AR_ARREGION;
	assign Inputs_iLeft[0][65:62] = iLeft0_AR_ARQOS;
	assign Inputs_iLeft[0][61:59] = iLeft0_AR_ARPROT;
	assign Inputs_iLeft[0][58:55] = iLeft0_AR_ARCACHE;
	assign Inputs_iLeft[0][54:53] = iLeft0_AR_ARLOCK;
	assign Inputs_iLeft[0][52:51] = iLeft0_AR_ARBURST;
	assign Inputs_iLeft[0][50:48] = iLeft0_AR_ARSIZE;
	assign Inputs_iLeft[0][47:40] = iLeft0_AR_ARLEN;
	assign Inputs_iLeft[0][39:8] = iLeft0_AR_ARADDR;
	assign Inputs_iLeft[0][7:0] = iLeft0_AR_ARID;
	assign Inputs_iRight[0][52] = iRight0_R_RVALID;
	assign Inputs_iRight[0][51:44] = iRight0_R_RUSER;
	assign Inputs_iRight[0][43] = iRight0_R_RLAST;
	assign Inputs_iRight[0][42:41] = iRight0_R_RRESP;
	assign Inputs_iRight[0][40:33] = iRight0_R_RDATA3;
	assign Inputs_iRight[0][32:25] = iRight0_R_RDATA2;
	assign Inputs_iRight[0][24:17] = iRight0_R_RDATA1;
	assign Inputs_iRight[0][16:9] = iRight0_R_RDATA0;
	assign Inputs_iRight[0][8:1] = iRight0_R_RID;
	assign Inputs_iRight[0][0] = iRight0_AR_ARREADY;
	assign Inputs_iRight[1][52] = iRight1_R_RVALID;
	assign Inputs_iRight[1][51:44] = iRight1_R_RUSER;
	assign Inputs_iRight[1][43] = iRight1_R_RLAST;
	assign Inputs_iRight[1][42:41] = iRight1_R_RRESP;
	assign Inputs_iRight[1][40:33] = iRight1_R_RDATA3;
	assign Inputs_iRight[1][32:25] = iRight1_R_RDATA2;
	assign Inputs_iRight[1][24:17] = iRight1_R_RDATA1;
	assign Inputs_iRight[1][16:9] = iRight1_R_RDATA0;
	assign Inputs_iRight[1][8:1] = iRight1_R_RID;
	assign Inputs_iRight[1][0] = iRight1_AR_ARREADY;
	assign ActiveTransactions[0] = TransactionDetectors0_oTransaction;
	assign muxLeft[0] = DuplexMux_oLeft[0];
	assign muxLeft[1] = DuplexMux_oLeft[1];
	assign muxLeftData_AR_ARID = DuplexMux_oMuxLeftData[7:0];
	assign muxLeftData_AR_ARADDR = DuplexMux_oMuxLeftData[39:8];
	assign muxLeftData_AR_ARLEN = DuplexMux_oMuxLeftData[47:40];
	assign muxLeftData_AR_ARSIZE = DuplexMux_oMuxLeftData[50:48];
	assign muxLeftData_AR_ARBURST = DuplexMux_oMuxLeftData[52:51];
	assign muxLeftData_AR_ARLOCK = DuplexMux_oMuxLeftData[54:53];
	assign muxLeftData_AR_ARCACHE = DuplexMux_oMuxLeftData[58:55];
	assign muxLeftData_AR_ARPROT = DuplexMux_oMuxLeftData[61:59];
	assign muxLeftData_AR_ARQOS = DuplexMux_oMuxLeftData[65:62];
	assign muxLeftData_AR_ARREGION = DuplexMux_oMuxLeftData[73:66];
	assign muxLeftData_AR_ARUSER = DuplexMux_oMuxLeftData[81:74];
	assign muxLeftData_AR_ARVALID = DuplexMux_oMuxLeftData[82];
	assign muxLeftData_R_RREADY = DuplexMux_oMuxLeftData[83];
	assign muxRight[0] = DuplexMux_oRight[0];
	assign muxRightData_AR_ARREADY = DuplexMux_oMuxRightData[0];
	assign muxRightData_R_RID = DuplexMux_oMuxRightData[8:1];
	assign muxRightData_R_RDATA[0] = DuplexMux_oMuxRightData[16:9];
	assign muxRightData_R_RDATA[1] = DuplexMux_oMuxRightData[24:17];
	assign muxRightData_R_RDATA[2] = DuplexMux_oMuxRightData[32:25];
	assign muxRightData_R_RDATA[3] = DuplexMux_oMuxRightData[40:33];
	assign muxRightData_R_RRESP = DuplexMux_oMuxRightData[42:41];
	assign muxRightData_R_RLAST = DuplexMux_oMuxRightData[43];
	assign muxRightData_R_RUSER = DuplexMux_oMuxRightData[51:44];
	assign muxRightData_R_RVALID = DuplexMux_oMuxRightData[52];
	assign restartTransactions = InterconnectModule_L76F13L85T14_InterconnectModule_L84F24T39_Expr;
	assign Transactions[0] = TransactionDetectors0_oTransaction;
	assign WaitForRestarts[0] = TransactionDetectors0_oWaitForRestart;
	assign TXBegin[0] = InterconnectModule_L93F13L96T14_0_InterconnectModule_L95F38T101_Expr[0];
	assign TransactionDetectors0_iRestart = InterconnectModule_L98F13L108T14_0_InterconnectModule_L105F36T54_Expr;
	assign TransactionDetectors0_iTXBegin = Encoder_MSBValue[0];
	assign TransactionDetectors0_iTXEnd = InterconnectModule_L98F13L108T14_0_InterconnectModule_L104F34T64_AXI4ReadInteconnectModule_L33F61T101_Expr[0];
	assign Encoder_iValues[0] = TXBegin[0];
	assign DuplexMux_iLeft[0] = Inputs_iLeft[0];
	assign DuplexMux_iLeftAddr = Encoder_MSBIndex;
	assign DuplexMux_iLeftAddrValid = Encoder_HasActive;
	assign DuplexMux_iRight[0] = Inputs_iRight[0];
	assign DuplexMux_iRight[1] = Inputs_iRight[1];
	assign DuplexMux_iRightAddr = rangeDetectorArray_oIndex;
	assign DuplexMux_iRightAddrValid = InterconnectModule_L125F39T43_Expr;
	assign rangeDetectorArray_iAddress = muxLeftData_AR_ARADDR;
	assign DuplexMux_iLeft0_DuplexMux_iLeft_HardLink = DuplexMux_iLeft[0];
	assign DuplexMux_iLeftAddr_DuplexMux_iLeftAddr_HardLink = DuplexMux_iLeftAddr;
	assign DuplexMux_iLeftAddrValid_DuplexMux_iLeftAddrValid_HardLink = DuplexMux_iLeftAddrValid;
	assign DuplexMux_iRight0_DuplexMux_iRight_HardLink = DuplexMux_iRight[0];
	assign DuplexMux_iRight1_DuplexMux_iRight_HardLink = DuplexMux_iRight[1];
	assign DuplexMux_iRightAddr_DuplexMux_iRightAddr_HardLink = DuplexMux_iRightAddr;
	assign DuplexMux_iRightAddrValid_DuplexMux_iRightAddrValid_HardLink = DuplexMux_iRightAddrValid;
	assign DuplexMux_oLeft[0] = DuplexMux_oLeft0_DuplexMux_oLeft_HardLink;
	assign DuplexMux_oLeft[1] = DuplexMux_oLeft1_DuplexMux_oLeft_HardLink;
	assign DuplexMux_oMuxLeftData = DuplexMux_oMuxLeftData_DuplexMux_oMuxLeftData_HardLink;
	assign DuplexMux_oMuxRightData = DuplexMux_oMuxRightData_DuplexMux_oMuxRightData_HardLink;
	assign DuplexMux_oRight[0] = DuplexMux_oRight0_DuplexMux_oRight_HardLink;
	assign Encoder_iValues0_Encoder_iValues_HardLink = Encoder_iValues[0];
	assign Encoder_HasActive = Encoder_HasActive_Encoder_HasActive_HardLink;
	assign Encoder_MSBIndex = Encoder_MSBIndex_Encoder_MSBIndex_HardLink;
	assign Encoder_MSBValue = Encoder_MSBValue_Encoder_MSBValue_HardLink;
	assign TransactionDetectors0_iRestart_TransactionDetectors0_iRestart_HardLink = TransactionDetectors0_iRestart;
	assign TransactionDetectors0_iTXBegin_TransactionDetectors0_iTXBegin_HardLink = TransactionDetectors0_iTXBegin;
	assign TransactionDetectors0_iTXEnd_TransactionDetectors0_iTXEnd_HardLink = TransactionDetectors0_iTXEnd;
	assign TransactionDetectors0_oTransaction = TransactionDetectors0_oTransaction_TransactionDetectors0_oTransaction_HardLink;
	assign TransactionDetectors0_oWaitForRestart = TransactionDetectors0_oWaitForRestart_TransactionDetectors0_oWaitForRestart_HardLink;
	assign rangeDetectorArray_iAddress_rangeDetectorArray_iAddress_HardLink = rangeDetectorArray_iAddress;
	assign rangeDetectorArray_oActive = rangeDetectorArray_oActive_rangeDetectorArray_oActive_HardLink;
	assign rangeDetectorArray_oIndex = rangeDetectorArray_oIndex_rangeDetectorArray_oIndex_HardLink;
	assign InterconnectModule_L93F13L96T14_0_InterconnectModule_L95F75T101_Index = WaitForRestarts[0];
	// [BEGIN USER ARCHITECTURE]
	// [END USER ARCHITECTURE]
endmodule
