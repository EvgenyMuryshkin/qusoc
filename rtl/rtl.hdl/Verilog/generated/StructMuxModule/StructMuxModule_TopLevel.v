`timescale 1ns/1ps
`default_nettype none
// PLEASE READ THIS, IT MAY SAVE YOU SOME TIME AND MONEY, THANK YOU!
// * This file was generated by Quokka FPGA Toolkit.
// * Generated code is your property, do whatever you want with it
// * Place custom code between [BEGIN USER ***] and [END USER ***].
// * CAUTION: All code outside of [USER] scope is subject to regeneration.
// * Bad things happen sometimes in developer's life,
//   it is recommended to use source control management software (e.g. git, bzr etc) to keep your custom code safe'n'sound.
// * Internal structure of code is subject to change.
//   You can use some of signals in custom code, but most likely they will not exist in future (e.g. will get shorter or gone completely)
// * Please send your feedback, comments, improvement ideas etc. to evmuryshkin@gmail.com
// * Visit https://github.com/EvgenyMuryshkin/QuokkaEvaluation to access latest version of playground
//
// DISCLAIMER:
//   Code comes AS-IS, it is your responsibility to make sure it is working as expected
//   no responsibility will be taken for any loss or damage caused by use of Quokka toolkit.
//
// System configuration name is StructMuxModule_TopLevel, clock frequency is 1Hz, Top-level
// FSM summary
// -- Packages
module StructMuxModule_TopLevel
(
	// [BEGIN USER PORTS]
	// [END USER PORTS]
	input wire [7:0] s1_i1,
	input wire [7:0] s1_i2,
	input wire [7:0] s2_i1,
	input wire [7:0] s2_i2,
	input wire selector,
	output wire [7:0] os1_i1,
	output wire [7:0] os1_i2,
	output wire [7:0] os2_i1,
	output wire [7:0] os2_i2,
	output wire [7:0] os3_i1,
	output wire [7:0] os3_i2,
	output wire [7:0] os4_i1,
	output wire [7:0] os4_i2
);
	// [BEGIN USER SIGNALS]
	// [END USER SIGNALS]
	localparam HiSignal = 1'b1;
	localparam LoSignal = 1'b0;
	wire Zero = 1'b0;
	wire One = 1'b1;
	wire true = 1'b1;
	wire false = 1'b0;
	wire [7: 0] Inputs_s1_i1;
	wire [7: 0] Inputs_s1_i2;
	wire [7: 0] Inputs_s2_i1;
	wire [7: 0] Inputs_s2_i2;
	wire Inputs_selector;
	wire [7: 0] ii1_i1;
	wire [7: 0] ii1_i2;
	wire [7: 0] is2_i1;
	wire [7: 0] is2_i2;
	wire [7: 0] is3_i1;
	wire [7: 0] is3_i2;
	wire [7: 0] StructMuxModule_L24F30T63_Ternary_i1;
	wire [7: 0] StructMuxModule_L24F30T63_Ternary_i2;
	wire [7: 0] StructMuxModule_L24F48T51_WhenTrue_i1;
	wire [7: 0] StructMuxModule_L24F48T51_WhenTrue_i2;
	wire [7: 0] StructMuxModule_L24F54T63_WhenFalse_i1;
	wire [7: 0] StructMuxModule_L24F54T63_WhenFalse_i2;
	wire [7: 0] StructMuxModule_L26F30L36T14_Ternary_i1;
	wire [7: 0] StructMuxModule_L26F30L36T14_Ternary_i2;
	wire [7: 0] StructMuxModule_L27F15L31T14_WhenTrue_i1;
	wire [7: 0] StructMuxModule_L27F15L31T14_WhenTrue_i2;
	wire [7: 0] StructMuxModule_L32F15L36T14_WhenFalse_i1;
	wire [7: 0] StructMuxModule_L32F15L36T14_WhenFalse_i2;
	wire [7: 0] StructMuxModule_L21F37T76_Ternary_i1;
	wire [7: 0] StructMuxModule_L21F37T76_Ternary_i2;
	wire [7: 0] StructMuxModule_L21F55T64_WhenTrue_i1;
	wire [7: 0] StructMuxModule_L21F55T64_WhenTrue_i2;
	wire [7: 0] StructMuxModule_L21F67T76_WhenFalse_i1;
	wire [7: 0] StructMuxModule_L21F67T76_WhenFalse_i2;
	wire [7: 0] StructMuxModule_L38F37L48T14_Ternary_i1;
	wire [7: 0] StructMuxModule_L38F37L48T14_Ternary_i2;
	wire [7: 0] StructMuxModule_L39F15L43T14_WhenTrue_i1;
	wire [7: 0] StructMuxModule_L39F15L43T14_WhenTrue_i2;
	wire [7: 0] StructMuxModule_L44F15L48T14_WhenFalse_i1;
	wire [7: 0] StructMuxModule_L44F15L48T14_WhenFalse_i2;
	assign StructMuxModule_L24F30T63_Ternary_i1 = (Inputs_selector ? StructMuxModule_L24F48T51_WhenTrue_i1 : StructMuxModule_L24F54T63_WhenFalse_i1);
	assign StructMuxModule_L24F30T63_Ternary_i2 = (Inputs_selector ? StructMuxModule_L24F48T51_WhenTrue_i2 : StructMuxModule_L24F54T63_WhenFalse_i2);
	assign StructMuxModule_L26F30L36T14_Ternary_i1 = (Inputs_selector ? StructMuxModule_L27F15L31T14_WhenTrue_i1 : StructMuxModule_L32F15L36T14_WhenFalse_i1);
	assign StructMuxModule_L26F30L36T14_Ternary_i2 = (Inputs_selector ? StructMuxModule_L27F15L31T14_WhenTrue_i2 : StructMuxModule_L32F15L36T14_WhenFalse_i2);
	assign StructMuxModule_L21F37T76_Ternary_i1 = (Inputs_selector ? StructMuxModule_L21F55T64_WhenTrue_i1 : StructMuxModule_L21F67T76_WhenFalse_i1);
	assign StructMuxModule_L21F37T76_Ternary_i2 = (Inputs_selector ? StructMuxModule_L21F55T64_WhenTrue_i2 : StructMuxModule_L21F67T76_WhenFalse_i2);
	assign StructMuxModule_L38F37L48T14_Ternary_i1 = (Inputs_selector ? StructMuxModule_L39F15L43T14_WhenTrue_i1 : StructMuxModule_L44F15L48T14_WhenFalse_i1);
	assign StructMuxModule_L38F37L48T14_Ternary_i2 = (Inputs_selector ? StructMuxModule_L39F15L43T14_WhenTrue_i2 : StructMuxModule_L44F15L48T14_WhenFalse_i2);
	assign Inputs_s1_i1 = s1_i1;
	assign Inputs_s1_i2 = s1_i2;
	assign Inputs_s2_i1 = s2_i1;
	assign Inputs_s2_i2 = s2_i2;
	assign Inputs_selector = selector;
	assign ii1_i1 = Inputs_s1_i1;
	assign ii1_i2 = Inputs_s1_i2;
	assign StructMuxModule_L24F48T51_WhenTrue_i1 = ii1_i1;
	assign StructMuxModule_L24F48T51_WhenTrue_i2 = ii1_i2;
	assign StructMuxModule_L24F54T63_WhenFalse_i1 = Inputs_s2_i1;
	assign StructMuxModule_L24F54T63_WhenFalse_i2 = Inputs_s2_i2;
	assign is2_i1 = StructMuxModule_L24F30T63_Ternary_i1;
	assign is2_i2 = StructMuxModule_L24F30T63_Ternary_i2;
	assign StructMuxModule_L27F15L31T14_WhenTrue_i1 = ii1_i1;
	assign StructMuxModule_L27F15L31T14_WhenTrue_i2 = Inputs_s1_i2;
	assign StructMuxModule_L32F15L36T14_WhenFalse_i1 = is2_i1;
	assign StructMuxModule_L32F15L36T14_WhenFalse_i2 = Inputs_s2_i2;
	assign is3_i1 = StructMuxModule_L26F30L36T14_Ternary_i1;
	assign is3_i2 = StructMuxModule_L26F30L36T14_Ternary_i2;
	assign StructMuxModule_L21F55T64_WhenTrue_i1 = Inputs_s1_i1;
	assign StructMuxModule_L21F55T64_WhenTrue_i2 = Inputs_s1_i2;
	assign StructMuxModule_L21F67T76_WhenFalse_i1 = Inputs_s2_i1;
	assign StructMuxModule_L21F67T76_WhenFalse_i2 = Inputs_s2_i2;
	assign os1_i1 = StructMuxModule_L21F37T76_Ternary_i1;
	assign os1_i2 = StructMuxModule_L21F37T76_Ternary_i2;
	assign os2_i1 = is2_i1;
	assign os2_i2 = is2_i2;
	assign os3_i1 = is3_i1;
	assign os3_i2 = is3_i2;
	assign StructMuxModule_L39F15L43T14_WhenTrue_i1 = ii1_i1;
	assign StructMuxModule_L39F15L43T14_WhenTrue_i2 = Inputs_s1_i2;
	assign StructMuxModule_L44F15L48T14_WhenFalse_i1 = is2_i1;
	assign StructMuxModule_L44F15L48T14_WhenFalse_i2 = Inputs_s2_i2;
	assign os4_i1 = StructMuxModule_L38F37L48T14_Ternary_i1;
	assign os4_i2 = StructMuxModule_L38F37L48T14_Ternary_i2;
	// [BEGIN USER ARCHITECTURE]
	// [END USER ARCHITECTURE]
endmodule
