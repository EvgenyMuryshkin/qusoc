`timescale 1ns/1ps
`default_nettype none
// PLEASE READ THIS, IT MAY SAVE YOU SOME TIME AND MONEY, THANK YOU!
// * This file was generated by Quokka FPGA Toolkit.
// * Generated code is your property, do whatever you want with it
// * Place custom code between [BEGIN USER ***] and [END USER ***].
// * CAUTION: All code outside of [USER] scope is subject to regeneration.
// * Bad things happen sometimes in developer's life,
//   it is recommended to use source control management software (e.g. git, bzr etc) to keep your custom code safe'n'sound.
// * Internal structure of code is subject to change.
//   You can use some of signals in custom code, but most likely they will not exist in future (e.g. will get shorter or gone completely)
// * Please send your feedback, comments, improvement ideas etc. to evmuryshkin@gmail.com
// * Visit https://github.com/EvgenyMuryshkin/QuokkaEvaluation to access latest version of playground
//
// DISCLAIMER:
//   Code comes AS-IS, it is your responsibility to make sure it is working as expected
//   no responsibility will be taken for any loss or damage caused by use of Quokka toolkit.
//
// System configuration name is AXILikeMuxModule_TopLevel_fullDuplexMux, clock frequency is 1Hz, Embedded
// FSM summary
// -- Packages
module AXILikeMuxModule_TopLevel_fullDuplexMux
(
	// [BEGIN USER PORTS]
	// [END USER PORTS]
	input wire [9:0] iLeft0,
	input wire [9:0] iLeft1,
	input wire [9:0] iLeft2,
	input wire [9:0] iLeft3,
	input wire [9:0] iLeft4,
	input wire [9:0] iLeft5,
	input wire [9:0] iLeft6,
	input wire [9:0] iLeft7,
	input wire [2:0] iLeftAddr,
	input wire iLeftAddrValid,
	input wire [9:0] iRight0,
	input wire [9:0] iRight1,
	input wire [9:0] iRight2,
	input wire [9:0] iRight3,
	input wire [1:0] iRightAddr,
	input wire iRightAddrValid,
	output wire [9:0] oLeft0,
	output wire [9:0] oLeft1,
	output wire [9:0] oLeft2,
	output wire [9:0] oLeft3,
	output wire [9:0] oRight0,
	output wire [9:0] oRight1,
	output wire [9:0] oRight2,
	output wire [9:0] oRight3,
	output wire [9:0] oRight4,
	output wire [9:0] oRight5,
	output wire [9:0] oRight6,
	output wire [9:0] oRight7
);
	// [BEGIN USER SIGNALS]
	// [END USER SIGNALS]
	localparam HiSignal = 1'b1;
	localparam LoSignal = 1'b0;
	wire Zero = 1'b0;
	wire One = 1'b1;
	wire true = 1'b1;
	wire false = 1'b0;
	wire [3: 0] leftCount = 4'b1000;
	wire [2: 0] rightCount = 3'b100;
	wire AXILikeMuxModule_L18F32T37_Expr = 1'b0;
	wire AXILikeMuxModule_L13F28T41_Expr = 1'b0;
	wire AXILikeMuxModule_L12F32T37_Expr = 1'b0;
	wire AXILikeMuxModule_L24F32T37_Expr = 1'b0;
	wire Prefilled0 = 1'b0;
	wire Prefilled1 = 1'b1;
	wire [1: 0] Prefilled2 = 2'b10;
	wire [1: 0] Prefilled3 = 2'b11;
	wire [2: 0] Prefilled4 = 3'b100;
	wire [2: 0] Prefilled5 = 3'b101;
	wire [2: 0] Prefilled6 = 3'b110;
	wire [2: 0] Prefilled7 = 3'b111;
	wire [2: 0] Inputs_iLeftAddr;
	wire Inputs_iLeftAddrValid;
	wire [1: 0] Inputs_iRightAddr;
	wire Inputs_iRightAddrValid;
	wire mEmptyLeftData_IsActive;
	wire [7: 0] mEmptyLeftData_Payload_Data;
	wire mEmptyLeftData_Payload_DataFlag;
	wire mEmptyRightData_IsActive;
	wire [7: 0] mEmptyRightData_Payload_Data;
	wire mEmptyRightData_Payload_DataFlag;
	wire validAddresses;
	wire FullDuplexMuxModule_L49F32T79_Expr;
	wire FullDuplexMuxModule_L49F32T79_Expr_1;
	wire FullDuplexMuxModule_L49F32T79_Expr_2;
	wire FullDuplexMuxModule_L76F13L86T14_0_FullDuplexMuxModule_L78F21T70_Expr;
	wire FullDuplexMuxModule_L76F13L86T14_0_FullDuplexMuxModule_L78F21T70_Expr_1;
	wire FullDuplexMuxModule_L76F13L86T14_0_FullDuplexMuxModule_L78F21T70_Expr_2;
	wire FullDuplexMuxModule_L76F13L86T14_1_FullDuplexMuxModule_L78F21T70_Expr;
	wire FullDuplexMuxModule_L76F13L86T14_1_FullDuplexMuxModule_L78F21T70_Expr_1;
	wire FullDuplexMuxModule_L76F13L86T14_1_FullDuplexMuxModule_L78F21T70_Expr_2;
	wire FullDuplexMuxModule_L76F13L86T14_2_FullDuplexMuxModule_L78F21T70_Expr;
	wire FullDuplexMuxModule_L76F13L86T14_2_FullDuplexMuxModule_L78F21T70_Expr_1;
	wire FullDuplexMuxModule_L76F13L86T14_2_FullDuplexMuxModule_L78F21T70_Expr_2;
	wire FullDuplexMuxModule_L76F13L86T14_3_FullDuplexMuxModule_L78F21T70_Expr;
	wire FullDuplexMuxModule_L76F13L86T14_3_FullDuplexMuxModule_L78F21T70_Expr_1;
	wire FullDuplexMuxModule_L76F13L86T14_3_FullDuplexMuxModule_L78F21T70_Expr_2;
	wire FullDuplexMuxModule_L96F13L106T14_0_FullDuplexMuxModule_L98F21T68_Expr;
	wire FullDuplexMuxModule_L96F13L106T14_0_FullDuplexMuxModule_L98F21T68_Expr_1;
	wire FullDuplexMuxModule_L96F13L106T14_0_FullDuplexMuxModule_L98F21T68_Expr_2;
	wire FullDuplexMuxModule_L96F13L106T14_1_FullDuplexMuxModule_L98F21T68_Expr;
	wire FullDuplexMuxModule_L96F13L106T14_1_FullDuplexMuxModule_L98F21T68_Expr_1;
	wire FullDuplexMuxModule_L96F13L106T14_1_FullDuplexMuxModule_L98F21T68_Expr_2;
	wire FullDuplexMuxModule_L96F13L106T14_2_FullDuplexMuxModule_L98F21T68_Expr;
	wire FullDuplexMuxModule_L96F13L106T14_2_FullDuplexMuxModule_L98F21T68_Expr_1;
	wire FullDuplexMuxModule_L96F13L106T14_2_FullDuplexMuxModule_L98F21T68_Expr_2;
	wire FullDuplexMuxModule_L96F13L106T14_3_FullDuplexMuxModule_L98F21T68_Expr;
	wire FullDuplexMuxModule_L96F13L106T14_3_FullDuplexMuxModule_L98F21T68_Expr_1;
	wire FullDuplexMuxModule_L96F13L106T14_3_FullDuplexMuxModule_L98F21T68_Expr_2;
	wire FullDuplexMuxModule_L96F13L106T14_4_FullDuplexMuxModule_L98F21T68_Expr;
	wire FullDuplexMuxModule_L96F13L106T14_4_FullDuplexMuxModule_L98F21T68_Expr_1;
	wire FullDuplexMuxModule_L96F13L106T14_4_FullDuplexMuxModule_L98F21T68_Expr_2;
	wire FullDuplexMuxModule_L96F13L106T14_5_FullDuplexMuxModule_L98F21T68_Expr;
	wire FullDuplexMuxModule_L96F13L106T14_5_FullDuplexMuxModule_L98F21T68_Expr_1;
	wire FullDuplexMuxModule_L96F13L106T14_5_FullDuplexMuxModule_L98F21T68_Expr_2;
	wire FullDuplexMuxModule_L96F13L106T14_6_FullDuplexMuxModule_L98F21T68_Expr;
	wire FullDuplexMuxModule_L96F13L106T14_6_FullDuplexMuxModule_L98F21T68_Expr_1;
	wire FullDuplexMuxModule_L96F13L106T14_6_FullDuplexMuxModule_L98F21T68_Expr_2;
	wire FullDuplexMuxModule_L96F13L106T14_7_FullDuplexMuxModule_L98F21T68_Expr;
	wire FullDuplexMuxModule_L96F13L106T14_7_FullDuplexMuxModule_L98F21T68_Expr_1;
	wire FullDuplexMuxModule_L96F13L106T14_7_FullDuplexMuxModule_L98F21T68_Expr_2;
	wire FullDuplexMuxModule_L76F13L86T14_0_FullDuplexMuxModule_L78F39T70_Expr;
	wire signed [2: 0] FullDuplexMuxModule_L76F13L86T14_0_FullDuplexMuxModule_L78F39T70_ExprLhs;
	wire signed [2: 0] FullDuplexMuxModule_L76F13L86T14_0_FullDuplexMuxModule_L78F39T70_ExprRhs;
	wire FullDuplexMuxModule_L76F13L86T14_1_FullDuplexMuxModule_L78F39T70_Expr;
	wire signed [2: 0] FullDuplexMuxModule_L76F13L86T14_1_FullDuplexMuxModule_L78F39T70_ExprLhs;
	wire signed [2: 0] FullDuplexMuxModule_L76F13L86T14_1_FullDuplexMuxModule_L78F39T70_ExprRhs;
	wire FullDuplexMuxModule_L76F13L86T14_2_FullDuplexMuxModule_L78F39T70_Expr;
	wire signed [2: 0] FullDuplexMuxModule_L76F13L86T14_2_FullDuplexMuxModule_L78F39T70_ExprLhs;
	wire signed [2: 0] FullDuplexMuxModule_L76F13L86T14_2_FullDuplexMuxModule_L78F39T70_ExprRhs;
	wire FullDuplexMuxModule_L76F13L86T14_3_FullDuplexMuxModule_L78F39T70_Expr;
	wire signed [2: 0] FullDuplexMuxModule_L76F13L86T14_3_FullDuplexMuxModule_L78F39T70_ExprLhs;
	wire signed [2: 0] FullDuplexMuxModule_L76F13L86T14_3_FullDuplexMuxModule_L78F39T70_ExprRhs;
	wire FullDuplexMuxModule_L96F13L106T14_0_FullDuplexMuxModule_L98F39T68_Expr;
	wire signed [3: 0] FullDuplexMuxModule_L96F13L106T14_0_FullDuplexMuxModule_L98F39T68_ExprLhs;
	wire signed [3: 0] FullDuplexMuxModule_L96F13L106T14_0_FullDuplexMuxModule_L98F39T68_ExprRhs;
	wire FullDuplexMuxModule_L96F13L106T14_1_FullDuplexMuxModule_L98F39T68_Expr;
	wire signed [3: 0] FullDuplexMuxModule_L96F13L106T14_1_FullDuplexMuxModule_L98F39T68_ExprLhs;
	wire signed [3: 0] FullDuplexMuxModule_L96F13L106T14_1_FullDuplexMuxModule_L98F39T68_ExprRhs;
	wire FullDuplexMuxModule_L96F13L106T14_2_FullDuplexMuxModule_L98F39T68_Expr;
	wire signed [3: 0] FullDuplexMuxModule_L96F13L106T14_2_FullDuplexMuxModule_L98F39T68_ExprLhs;
	wire signed [3: 0] FullDuplexMuxModule_L96F13L106T14_2_FullDuplexMuxModule_L98F39T68_ExprRhs;
	wire FullDuplexMuxModule_L96F13L106T14_3_FullDuplexMuxModule_L98F39T68_Expr;
	wire signed [3: 0] FullDuplexMuxModule_L96F13L106T14_3_FullDuplexMuxModule_L98F39T68_ExprLhs;
	wire signed [3: 0] FullDuplexMuxModule_L96F13L106T14_3_FullDuplexMuxModule_L98F39T68_ExprRhs;
	wire FullDuplexMuxModule_L96F13L106T14_4_FullDuplexMuxModule_L98F39T68_Expr;
	wire signed [3: 0] FullDuplexMuxModule_L96F13L106T14_4_FullDuplexMuxModule_L98F39T68_ExprLhs;
	wire signed [3: 0] FullDuplexMuxModule_L96F13L106T14_4_FullDuplexMuxModule_L98F39T68_ExprRhs;
	wire FullDuplexMuxModule_L96F13L106T14_5_FullDuplexMuxModule_L98F39T68_Expr;
	wire signed [3: 0] FullDuplexMuxModule_L96F13L106T14_5_FullDuplexMuxModule_L98F39T68_ExprLhs;
	wire signed [3: 0] FullDuplexMuxModule_L96F13L106T14_5_FullDuplexMuxModule_L98F39T68_ExprRhs;
	wire FullDuplexMuxModule_L96F13L106T14_6_FullDuplexMuxModule_L98F39T68_Expr;
	wire signed [3: 0] FullDuplexMuxModule_L96F13L106T14_6_FullDuplexMuxModule_L98F39T68_ExprLhs;
	wire signed [3: 0] FullDuplexMuxModule_L96F13L106T14_6_FullDuplexMuxModule_L98F39T68_ExprRhs;
	wire FullDuplexMuxModule_L96F13L106T14_7_FullDuplexMuxModule_L98F39T68_Expr;
	wire signed [3: 0] FullDuplexMuxModule_L96F13L106T14_7_FullDuplexMuxModule_L98F39T68_ExprLhs;
	wire signed [3: 0] FullDuplexMuxModule_L96F13L106T14_7_FullDuplexMuxModule_L98F39T68_ExprRhs;
	wire [9 : 0] Inputs_iLeft [0 : 7];
	wire [9 : 0] Inputs_iRight [0 : 3];
	wire [9 : 0] mInLeftData [0 : 7];
	wire [9 : 0] mInRightData [0 : 3];
	reg [9 : 0] mOutLeftData [0 : 3];
	integer mOutLeftData_i;
	initial
	begin : Init_mOutLeftData
		for (mOutLeftData_i = 0; mOutLeftData_i < 4; mOutLeftData_i = mOutLeftData_i + 1)
			mOutLeftData[mOutLeftData_i] = 0;
	end
	reg [9 : 0] mOutRightData [0 : 7];
	integer mOutRightData_i;
	initial
	begin : Init_mOutRightData
		for (mOutRightData_i = 0; mOutRightData_i < 8; mOutRightData_i = mOutRightData_i + 1)
			mOutRightData[mOutRightData_i] = 0;
	end
	assign FullDuplexMuxModule_L76F13L86T14_0_FullDuplexMuxModule_L78F39T70_Expr = FullDuplexMuxModule_L76F13L86T14_0_FullDuplexMuxModule_L78F39T70_ExprLhs == FullDuplexMuxModule_L76F13L86T14_0_FullDuplexMuxModule_L78F39T70_ExprRhs ? 1'b1 : 1'b0;
	assign FullDuplexMuxModule_L76F13L86T14_1_FullDuplexMuxModule_L78F39T70_Expr = FullDuplexMuxModule_L76F13L86T14_1_FullDuplexMuxModule_L78F39T70_ExprLhs == FullDuplexMuxModule_L76F13L86T14_1_FullDuplexMuxModule_L78F39T70_ExprRhs ? 1'b1 : 1'b0;
	assign FullDuplexMuxModule_L76F13L86T14_2_FullDuplexMuxModule_L78F39T70_Expr = FullDuplexMuxModule_L76F13L86T14_2_FullDuplexMuxModule_L78F39T70_ExprLhs == FullDuplexMuxModule_L76F13L86T14_2_FullDuplexMuxModule_L78F39T70_ExprRhs ? 1'b1 : 1'b0;
	assign FullDuplexMuxModule_L76F13L86T14_3_FullDuplexMuxModule_L78F39T70_Expr = FullDuplexMuxModule_L76F13L86T14_3_FullDuplexMuxModule_L78F39T70_ExprLhs == FullDuplexMuxModule_L76F13L86T14_3_FullDuplexMuxModule_L78F39T70_ExprRhs ? 1'b1 : 1'b0;
	assign FullDuplexMuxModule_L96F13L106T14_0_FullDuplexMuxModule_L98F39T68_Expr = FullDuplexMuxModule_L96F13L106T14_0_FullDuplexMuxModule_L98F39T68_ExprLhs == FullDuplexMuxModule_L96F13L106T14_0_FullDuplexMuxModule_L98F39T68_ExprRhs ? 1'b1 : 1'b0;
	assign FullDuplexMuxModule_L96F13L106T14_1_FullDuplexMuxModule_L98F39T68_Expr = FullDuplexMuxModule_L96F13L106T14_1_FullDuplexMuxModule_L98F39T68_ExprLhs == FullDuplexMuxModule_L96F13L106T14_1_FullDuplexMuxModule_L98F39T68_ExprRhs ? 1'b1 : 1'b0;
	assign FullDuplexMuxModule_L96F13L106T14_2_FullDuplexMuxModule_L98F39T68_Expr = FullDuplexMuxModule_L96F13L106T14_2_FullDuplexMuxModule_L98F39T68_ExprLhs == FullDuplexMuxModule_L96F13L106T14_2_FullDuplexMuxModule_L98F39T68_ExprRhs ? 1'b1 : 1'b0;
	assign FullDuplexMuxModule_L96F13L106T14_3_FullDuplexMuxModule_L98F39T68_Expr = FullDuplexMuxModule_L96F13L106T14_3_FullDuplexMuxModule_L98F39T68_ExprLhs == FullDuplexMuxModule_L96F13L106T14_3_FullDuplexMuxModule_L98F39T68_ExprRhs ? 1'b1 : 1'b0;
	assign FullDuplexMuxModule_L96F13L106T14_4_FullDuplexMuxModule_L98F39T68_Expr = FullDuplexMuxModule_L96F13L106T14_4_FullDuplexMuxModule_L98F39T68_ExprLhs == FullDuplexMuxModule_L96F13L106T14_4_FullDuplexMuxModule_L98F39T68_ExprRhs ? 1'b1 : 1'b0;
	assign FullDuplexMuxModule_L96F13L106T14_5_FullDuplexMuxModule_L98F39T68_Expr = FullDuplexMuxModule_L96F13L106T14_5_FullDuplexMuxModule_L98F39T68_ExprLhs == FullDuplexMuxModule_L96F13L106T14_5_FullDuplexMuxModule_L98F39T68_ExprRhs ? 1'b1 : 1'b0;
	assign FullDuplexMuxModule_L96F13L106T14_6_FullDuplexMuxModule_L98F39T68_Expr = FullDuplexMuxModule_L96F13L106T14_6_FullDuplexMuxModule_L98F39T68_ExprLhs == FullDuplexMuxModule_L96F13L106T14_6_FullDuplexMuxModule_L98F39T68_ExprRhs ? 1'b1 : 1'b0;
	assign FullDuplexMuxModule_L96F13L106T14_7_FullDuplexMuxModule_L98F39T68_Expr = FullDuplexMuxModule_L96F13L106T14_7_FullDuplexMuxModule_L98F39T68_ExprLhs == FullDuplexMuxModule_L96F13L106T14_7_FullDuplexMuxModule_L98F39T68_ExprRhs ? 1'b1 : 1'b0;
	assign FullDuplexMuxModule_L49F32T79_Expr = FullDuplexMuxModule_L49F32T79_Expr_1 & FullDuplexMuxModule_L49F32T79_Expr_2;
	assign FullDuplexMuxModule_L76F13L86T14_0_FullDuplexMuxModule_L78F21T70_Expr = FullDuplexMuxModule_L76F13L86T14_0_FullDuplexMuxModule_L78F21T70_Expr_1 & FullDuplexMuxModule_L76F13L86T14_0_FullDuplexMuxModule_L78F21T70_Expr_2;
	assign FullDuplexMuxModule_L76F13L86T14_1_FullDuplexMuxModule_L78F21T70_Expr = FullDuplexMuxModule_L76F13L86T14_1_FullDuplexMuxModule_L78F21T70_Expr_1 & FullDuplexMuxModule_L76F13L86T14_1_FullDuplexMuxModule_L78F21T70_Expr_2;
	assign FullDuplexMuxModule_L76F13L86T14_2_FullDuplexMuxModule_L78F21T70_Expr = FullDuplexMuxModule_L76F13L86T14_2_FullDuplexMuxModule_L78F21T70_Expr_1 & FullDuplexMuxModule_L76F13L86T14_2_FullDuplexMuxModule_L78F21T70_Expr_2;
	assign FullDuplexMuxModule_L76F13L86T14_3_FullDuplexMuxModule_L78F21T70_Expr = FullDuplexMuxModule_L76F13L86T14_3_FullDuplexMuxModule_L78F21T70_Expr_1 & FullDuplexMuxModule_L76F13L86T14_3_FullDuplexMuxModule_L78F21T70_Expr_2;
	assign FullDuplexMuxModule_L96F13L106T14_0_FullDuplexMuxModule_L98F21T68_Expr = FullDuplexMuxModule_L96F13L106T14_0_FullDuplexMuxModule_L98F21T68_Expr_1 & FullDuplexMuxModule_L96F13L106T14_0_FullDuplexMuxModule_L98F21T68_Expr_2;
	assign FullDuplexMuxModule_L96F13L106T14_1_FullDuplexMuxModule_L98F21T68_Expr = FullDuplexMuxModule_L96F13L106T14_1_FullDuplexMuxModule_L98F21T68_Expr_1 & FullDuplexMuxModule_L96F13L106T14_1_FullDuplexMuxModule_L98F21T68_Expr_2;
	assign FullDuplexMuxModule_L96F13L106T14_2_FullDuplexMuxModule_L98F21T68_Expr = FullDuplexMuxModule_L96F13L106T14_2_FullDuplexMuxModule_L98F21T68_Expr_1 & FullDuplexMuxModule_L96F13L106T14_2_FullDuplexMuxModule_L98F21T68_Expr_2;
	assign FullDuplexMuxModule_L96F13L106T14_3_FullDuplexMuxModule_L98F21T68_Expr = FullDuplexMuxModule_L96F13L106T14_3_FullDuplexMuxModule_L98F21T68_Expr_1 & FullDuplexMuxModule_L96F13L106T14_3_FullDuplexMuxModule_L98F21T68_Expr_2;
	assign FullDuplexMuxModule_L96F13L106T14_4_FullDuplexMuxModule_L98F21T68_Expr = FullDuplexMuxModule_L96F13L106T14_4_FullDuplexMuxModule_L98F21T68_Expr_1 & FullDuplexMuxModule_L96F13L106T14_4_FullDuplexMuxModule_L98F21T68_Expr_2;
	assign FullDuplexMuxModule_L96F13L106T14_5_FullDuplexMuxModule_L98F21T68_Expr = FullDuplexMuxModule_L96F13L106T14_5_FullDuplexMuxModule_L98F21T68_Expr_1 & FullDuplexMuxModule_L96F13L106T14_5_FullDuplexMuxModule_L98F21T68_Expr_2;
	assign FullDuplexMuxModule_L96F13L106T14_6_FullDuplexMuxModule_L98F21T68_Expr = FullDuplexMuxModule_L96F13L106T14_6_FullDuplexMuxModule_L98F21T68_Expr_1 & FullDuplexMuxModule_L96F13L106T14_6_FullDuplexMuxModule_L98F21T68_Expr_2;
	assign FullDuplexMuxModule_L96F13L106T14_7_FullDuplexMuxModule_L98F21T68_Expr = FullDuplexMuxModule_L96F13L106T14_7_FullDuplexMuxModule_L98F21T68_Expr_1 & FullDuplexMuxModule_L96F13L106T14_7_FullDuplexMuxModule_L98F21T68_Expr_2;
	always @ (*)
	begin
		if ((FullDuplexMuxModule_L76F13L86T14_0_FullDuplexMuxModule_L78F21T70_Expr == 1))
		begin
			mOutLeftData[0] = mInLeftData[Inputs_iLeftAddr];
		end
		else
		begin
			mOutLeftData[0][9] = mEmptyLeftData_Payload_DataFlag;
			mOutLeftData[0][8:1] = mEmptyLeftData_Payload_Data;
			mOutLeftData[0][0] = mEmptyLeftData_IsActive;
		end
	end
	always @ (*)
	begin
		if ((FullDuplexMuxModule_L76F13L86T14_1_FullDuplexMuxModule_L78F21T70_Expr == 1))
		begin
			mOutLeftData[1] = mInLeftData[Inputs_iLeftAddr];
		end
		else
		begin
			mOutLeftData[1][9] = mEmptyLeftData_Payload_DataFlag;
			mOutLeftData[1][8:1] = mEmptyLeftData_Payload_Data;
			mOutLeftData[1][0] = mEmptyLeftData_IsActive;
		end
	end
	always @ (*)
	begin
		if ((FullDuplexMuxModule_L76F13L86T14_2_FullDuplexMuxModule_L78F21T70_Expr == 1))
		begin
			mOutLeftData[2] = mInLeftData[Inputs_iLeftAddr];
		end
		else
		begin
			mOutLeftData[2][9] = mEmptyLeftData_Payload_DataFlag;
			mOutLeftData[2][8:1] = mEmptyLeftData_Payload_Data;
			mOutLeftData[2][0] = mEmptyLeftData_IsActive;
		end
	end
	always @ (*)
	begin
		if ((FullDuplexMuxModule_L76F13L86T14_3_FullDuplexMuxModule_L78F21T70_Expr == 1))
		begin
			mOutLeftData[3] = mInLeftData[Inputs_iLeftAddr];
		end
		else
		begin
			mOutLeftData[3][9] = mEmptyLeftData_Payload_DataFlag;
			mOutLeftData[3][8:1] = mEmptyLeftData_Payload_Data;
			mOutLeftData[3][0] = mEmptyLeftData_IsActive;
		end
	end
	always @ (*)
	begin
		if ((FullDuplexMuxModule_L96F13L106T14_0_FullDuplexMuxModule_L98F21T68_Expr == 1))
		begin
			mOutRightData[0] = mInRightData[Inputs_iRightAddr];
		end
		else
		begin
			mOutRightData[0][9] = mEmptyRightData_Payload_DataFlag;
			mOutRightData[0][8:1] = mEmptyRightData_Payload_Data;
			mOutRightData[0][0] = mEmptyRightData_IsActive;
		end
	end
	always @ (*)
	begin
		if ((FullDuplexMuxModule_L96F13L106T14_1_FullDuplexMuxModule_L98F21T68_Expr == 1))
		begin
			mOutRightData[1] = mInRightData[Inputs_iRightAddr];
		end
		else
		begin
			mOutRightData[1][9] = mEmptyRightData_Payload_DataFlag;
			mOutRightData[1][8:1] = mEmptyRightData_Payload_Data;
			mOutRightData[1][0] = mEmptyRightData_IsActive;
		end
	end
	always @ (*)
	begin
		if ((FullDuplexMuxModule_L96F13L106T14_2_FullDuplexMuxModule_L98F21T68_Expr == 1))
		begin
			mOutRightData[2] = mInRightData[Inputs_iRightAddr];
		end
		else
		begin
			mOutRightData[2][9] = mEmptyRightData_Payload_DataFlag;
			mOutRightData[2][8:1] = mEmptyRightData_Payload_Data;
			mOutRightData[2][0] = mEmptyRightData_IsActive;
		end
	end
	always @ (*)
	begin
		if ((FullDuplexMuxModule_L96F13L106T14_3_FullDuplexMuxModule_L98F21T68_Expr == 1))
		begin
			mOutRightData[3] = mInRightData[Inputs_iRightAddr];
		end
		else
		begin
			mOutRightData[3][9] = mEmptyRightData_Payload_DataFlag;
			mOutRightData[3][8:1] = mEmptyRightData_Payload_Data;
			mOutRightData[3][0] = mEmptyRightData_IsActive;
		end
	end
	always @ (*)
	begin
		if ((FullDuplexMuxModule_L96F13L106T14_4_FullDuplexMuxModule_L98F21T68_Expr == 1))
		begin
			mOutRightData[4] = mInRightData[Inputs_iRightAddr];
		end
		else
		begin
			mOutRightData[4][9] = mEmptyRightData_Payload_DataFlag;
			mOutRightData[4][8:1] = mEmptyRightData_Payload_Data;
			mOutRightData[4][0] = mEmptyRightData_IsActive;
		end
	end
	always @ (*)
	begin
		if ((FullDuplexMuxModule_L96F13L106T14_5_FullDuplexMuxModule_L98F21T68_Expr == 1))
		begin
			mOutRightData[5] = mInRightData[Inputs_iRightAddr];
		end
		else
		begin
			mOutRightData[5][9] = mEmptyRightData_Payload_DataFlag;
			mOutRightData[5][8:1] = mEmptyRightData_Payload_Data;
			mOutRightData[5][0] = mEmptyRightData_IsActive;
		end
	end
	always @ (*)
	begin
		if ((FullDuplexMuxModule_L96F13L106T14_6_FullDuplexMuxModule_L98F21T68_Expr == 1))
		begin
			mOutRightData[6] = mInRightData[Inputs_iRightAddr];
		end
		else
		begin
			mOutRightData[6][9] = mEmptyRightData_Payload_DataFlag;
			mOutRightData[6][8:1] = mEmptyRightData_Payload_Data;
			mOutRightData[6][0] = mEmptyRightData_IsActive;
		end
	end
	always @ (*)
	begin
		if ((FullDuplexMuxModule_L96F13L106T14_7_FullDuplexMuxModule_L98F21T68_Expr == 1))
		begin
			mOutRightData[7] = mInRightData[Inputs_iRightAddr];
		end
		else
		begin
			mOutRightData[7][9] = mEmptyRightData_Payload_DataFlag;
			mOutRightData[7][8:1] = mEmptyRightData_Payload_Data;
			mOutRightData[7][0] = mEmptyRightData_IsActive;
		end
	end
	assign FullDuplexMuxModule_L76F13L86T14_0_FullDuplexMuxModule_L78F39T70_ExprLhs = { 1'b0, Inputs_iRightAddr };
	assign FullDuplexMuxModule_L76F13L86T14_0_FullDuplexMuxModule_L78F39T70_ExprRhs = { {2{1'b0}}, Prefilled0 };
	assign FullDuplexMuxModule_L76F13L86T14_1_FullDuplexMuxModule_L78F39T70_ExprLhs = { 1'b0, Inputs_iRightAddr };
	assign FullDuplexMuxModule_L76F13L86T14_1_FullDuplexMuxModule_L78F39T70_ExprRhs = { {2{1'b0}}, Prefilled1 };
	assign FullDuplexMuxModule_L76F13L86T14_2_FullDuplexMuxModule_L78F39T70_ExprLhs = { 1'b0, Inputs_iRightAddr };
	assign FullDuplexMuxModule_L76F13L86T14_2_FullDuplexMuxModule_L78F39T70_ExprRhs = { 1'b0, Prefilled2 };
	assign FullDuplexMuxModule_L76F13L86T14_3_FullDuplexMuxModule_L78F39T70_ExprLhs = { 1'b0, Inputs_iRightAddr };
	assign FullDuplexMuxModule_L76F13L86T14_3_FullDuplexMuxModule_L78F39T70_ExprRhs = { 1'b0, Prefilled3 };
	assign FullDuplexMuxModule_L96F13L106T14_0_FullDuplexMuxModule_L98F39T68_ExprLhs = { 1'b0, Inputs_iLeftAddr };
	assign FullDuplexMuxModule_L96F13L106T14_0_FullDuplexMuxModule_L98F39T68_ExprRhs = { {3{1'b0}}, Prefilled0 };
	assign FullDuplexMuxModule_L96F13L106T14_1_FullDuplexMuxModule_L98F39T68_ExprLhs = { 1'b0, Inputs_iLeftAddr };
	assign FullDuplexMuxModule_L96F13L106T14_1_FullDuplexMuxModule_L98F39T68_ExprRhs = { {3{1'b0}}, Prefilled1 };
	assign FullDuplexMuxModule_L96F13L106T14_2_FullDuplexMuxModule_L98F39T68_ExprLhs = { 1'b0, Inputs_iLeftAddr };
	assign FullDuplexMuxModule_L96F13L106T14_2_FullDuplexMuxModule_L98F39T68_ExprRhs = { {2{1'b0}}, Prefilled2 };
	assign FullDuplexMuxModule_L96F13L106T14_3_FullDuplexMuxModule_L98F39T68_ExprLhs = { 1'b0, Inputs_iLeftAddr };
	assign FullDuplexMuxModule_L96F13L106T14_3_FullDuplexMuxModule_L98F39T68_ExprRhs = { {2{1'b0}}, Prefilled3 };
	assign FullDuplexMuxModule_L96F13L106T14_4_FullDuplexMuxModule_L98F39T68_ExprLhs = { 1'b0, Inputs_iLeftAddr };
	assign FullDuplexMuxModule_L96F13L106T14_4_FullDuplexMuxModule_L98F39T68_ExprRhs = { 1'b0, Prefilled4 };
	assign FullDuplexMuxModule_L96F13L106T14_5_FullDuplexMuxModule_L98F39T68_ExprLhs = { 1'b0, Inputs_iLeftAddr };
	assign FullDuplexMuxModule_L96F13L106T14_5_FullDuplexMuxModule_L98F39T68_ExprRhs = { 1'b0, Prefilled5 };
	assign FullDuplexMuxModule_L96F13L106T14_6_FullDuplexMuxModule_L98F39T68_ExprLhs = { 1'b0, Inputs_iLeftAddr };
	assign FullDuplexMuxModule_L96F13L106T14_6_FullDuplexMuxModule_L98F39T68_ExprRhs = { 1'b0, Prefilled6 };
	assign FullDuplexMuxModule_L96F13L106T14_7_FullDuplexMuxModule_L98F39T68_ExprLhs = { 1'b0, Inputs_iLeftAddr };
	assign FullDuplexMuxModule_L96F13L106T14_7_FullDuplexMuxModule_L98F39T68_ExprRhs = { 1'b0, Prefilled7 };
	assign FullDuplexMuxModule_L49F32T79_Expr_1 = Inputs_iLeftAddrValid;
	assign FullDuplexMuxModule_L49F32T79_Expr_2 = Inputs_iRightAddrValid;
	assign FullDuplexMuxModule_L76F13L86T14_0_FullDuplexMuxModule_L78F21T70_Expr_1 = validAddresses;
	assign FullDuplexMuxModule_L76F13L86T14_0_FullDuplexMuxModule_L78F21T70_Expr_2 = FullDuplexMuxModule_L76F13L86T14_0_FullDuplexMuxModule_L78F39T70_Expr;
	assign FullDuplexMuxModule_L76F13L86T14_1_FullDuplexMuxModule_L78F21T70_Expr_1 = validAddresses;
	assign FullDuplexMuxModule_L76F13L86T14_1_FullDuplexMuxModule_L78F21T70_Expr_2 = FullDuplexMuxModule_L76F13L86T14_1_FullDuplexMuxModule_L78F39T70_Expr;
	assign FullDuplexMuxModule_L76F13L86T14_2_FullDuplexMuxModule_L78F21T70_Expr_1 = validAddresses;
	assign FullDuplexMuxModule_L76F13L86T14_2_FullDuplexMuxModule_L78F21T70_Expr_2 = FullDuplexMuxModule_L76F13L86T14_2_FullDuplexMuxModule_L78F39T70_Expr;
	assign FullDuplexMuxModule_L76F13L86T14_3_FullDuplexMuxModule_L78F21T70_Expr_1 = validAddresses;
	assign FullDuplexMuxModule_L76F13L86T14_3_FullDuplexMuxModule_L78F21T70_Expr_2 = FullDuplexMuxModule_L76F13L86T14_3_FullDuplexMuxModule_L78F39T70_Expr;
	assign FullDuplexMuxModule_L96F13L106T14_0_FullDuplexMuxModule_L98F21T68_Expr_1 = validAddresses;
	assign FullDuplexMuxModule_L96F13L106T14_0_FullDuplexMuxModule_L98F21T68_Expr_2 = FullDuplexMuxModule_L96F13L106T14_0_FullDuplexMuxModule_L98F39T68_Expr;
	assign FullDuplexMuxModule_L96F13L106T14_1_FullDuplexMuxModule_L98F21T68_Expr_1 = validAddresses;
	assign FullDuplexMuxModule_L96F13L106T14_1_FullDuplexMuxModule_L98F21T68_Expr_2 = FullDuplexMuxModule_L96F13L106T14_1_FullDuplexMuxModule_L98F39T68_Expr;
	assign FullDuplexMuxModule_L96F13L106T14_2_FullDuplexMuxModule_L98F21T68_Expr_1 = validAddresses;
	assign FullDuplexMuxModule_L96F13L106T14_2_FullDuplexMuxModule_L98F21T68_Expr_2 = FullDuplexMuxModule_L96F13L106T14_2_FullDuplexMuxModule_L98F39T68_Expr;
	assign FullDuplexMuxModule_L96F13L106T14_3_FullDuplexMuxModule_L98F21T68_Expr_1 = validAddresses;
	assign FullDuplexMuxModule_L96F13L106T14_3_FullDuplexMuxModule_L98F21T68_Expr_2 = FullDuplexMuxModule_L96F13L106T14_3_FullDuplexMuxModule_L98F39T68_Expr;
	assign FullDuplexMuxModule_L96F13L106T14_4_FullDuplexMuxModule_L98F21T68_Expr_1 = validAddresses;
	assign FullDuplexMuxModule_L96F13L106T14_4_FullDuplexMuxModule_L98F21T68_Expr_2 = FullDuplexMuxModule_L96F13L106T14_4_FullDuplexMuxModule_L98F39T68_Expr;
	assign FullDuplexMuxModule_L96F13L106T14_5_FullDuplexMuxModule_L98F21T68_Expr_1 = validAddresses;
	assign FullDuplexMuxModule_L96F13L106T14_5_FullDuplexMuxModule_L98F21T68_Expr_2 = FullDuplexMuxModule_L96F13L106T14_5_FullDuplexMuxModule_L98F39T68_Expr;
	assign FullDuplexMuxModule_L96F13L106T14_6_FullDuplexMuxModule_L98F21T68_Expr_1 = validAddresses;
	assign FullDuplexMuxModule_L96F13L106T14_6_FullDuplexMuxModule_L98F21T68_Expr_2 = FullDuplexMuxModule_L96F13L106T14_6_FullDuplexMuxModule_L98F39T68_Expr;
	assign FullDuplexMuxModule_L96F13L106T14_7_FullDuplexMuxModule_L98F21T68_Expr_1 = validAddresses;
	assign FullDuplexMuxModule_L96F13L106T14_7_FullDuplexMuxModule_L98F21T68_Expr_2 = FullDuplexMuxModule_L96F13L106T14_7_FullDuplexMuxModule_L98F39T68_Expr;
	assign Inputs_iLeft[0] = iLeft0;
	assign Inputs_iLeft[1] = iLeft1;
	assign Inputs_iLeft[2] = iLeft2;
	assign Inputs_iLeft[3] = iLeft3;
	assign Inputs_iLeft[4] = iLeft4;
	assign Inputs_iLeft[5] = iLeft5;
	assign Inputs_iLeft[6] = iLeft6;
	assign Inputs_iLeft[7] = iLeft7;
	assign Inputs_iLeftAddr = iLeftAddr;
	assign Inputs_iLeftAddrValid = iLeftAddrValid;
	assign Inputs_iRight[0] = iRight0;
	assign Inputs_iRight[1] = iRight1;
	assign Inputs_iRight[2] = iRight2;
	assign Inputs_iRight[3] = iRight3;
	assign Inputs_iRightAddr = iRightAddr;
	assign Inputs_iRightAddrValid = iRightAddrValid;
	assign mEmptyLeftData_IsActive = AXILikeMuxModule_L18F32T37_Expr;
	assign mEmptyLeftData_Payload_Data = { {7{1'b0}}, AXILikeMuxModule_L13F28T41_Expr };
	assign mEmptyLeftData_Payload_DataFlag = AXILikeMuxModule_L12F32T37_Expr;
	assign mEmptyRightData_IsActive = AXILikeMuxModule_L24F32T37_Expr;
	assign mEmptyRightData_Payload_Data = { {7{1'b0}}, AXILikeMuxModule_L13F28T41_Expr };
	assign mEmptyRightData_Payload_DataFlag = AXILikeMuxModule_L12F32T37_Expr;
	assign validAddresses = FullDuplexMuxModule_L49F32T79_Expr;
	assign mInLeftData[0] = Inputs_iLeft[0];
	assign mInLeftData[1] = Inputs_iLeft[1];
	assign mInLeftData[2] = Inputs_iLeft[2];
	assign mInLeftData[3] = Inputs_iLeft[3];
	assign mInLeftData[4] = Inputs_iLeft[4];
	assign mInLeftData[5] = Inputs_iLeft[5];
	assign mInLeftData[6] = Inputs_iLeft[6];
	assign mInLeftData[7] = Inputs_iLeft[7];
	assign mInRightData[0] = Inputs_iRight[0];
	assign mInRightData[1] = Inputs_iRight[1];
	assign mInRightData[2] = Inputs_iRight[2];
	assign mInRightData[3] = Inputs_iRight[3];
	assign oLeft0 = mOutLeftData[0];
	assign oLeft1 = mOutLeftData[1];
	assign oLeft2 = mOutLeftData[2];
	assign oLeft3 = mOutLeftData[3];
	assign oRight0 = mOutRightData[0];
	assign oRight1 = mOutRightData[1];
	assign oRight2 = mOutRightData[2];
	assign oRight3 = mOutRightData[3];
	assign oRight4 = mOutRightData[4];
	assign oRight5 = mOutRightData[5];
	assign oRight6 = mOutRightData[6];
	assign oRight7 = mOutRightData[7];
	// [BEGIN USER ARCHITECTURE]
	// [END USER ARCHITECTURE]
endmodule
