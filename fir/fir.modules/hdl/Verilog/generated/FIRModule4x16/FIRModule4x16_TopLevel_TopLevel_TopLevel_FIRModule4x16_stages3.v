`timescale 1ns/1ps
`default_nettype none
// PLEASE READ THIS, IT MAY SAVE YOU SOME TIME AND MONEY, THANK YOU!
// * This file was generated by Quokka FPGA Toolkit.
// * Generated code is your property, do whatever you want with it
// * Place custom code between [BEGIN USER ***] and [END USER ***].
// * CAUTION: All code outside of [USER] scope is subject to regeneration.
// * Bad things happen sometimes in developer's life,
//   it is recommended to use source control management software (e.g. git, bzr etc) to keep your custom code safe'n'sound.
// * Internal structure of code is subject to change.
//   You can use some of signals in custom code, but most likely they will not exist in future (e.g. will get shorter or gone completely)
// * Please send your feedback, comments, improvement ideas etc. to evmuryshkin@gmail.com
// * Visit https://github.com/EvgenyMuryshkin/QuokkaEvaluation to access latest version of playground
//
// DISCLAIMER:
//   Code comes AS-IS, it is your responsibility to make sure it is working as expected
//   no responsibility will be taken for any loss or damage caused by use of Quokka toolkit.
//
// System configuration name is FIRModule4x16_TopLevel_TopLevel_TopLevel_FIRModule4x16_stages3, clock frequency is 1Hz, Embedded
// FSM summary
// -- Packages
module FIRModule4x16_TopLevel_TopLevel_TopLevel_FIRModule4x16_stages3
(
	// [BEGIN USER PORTS]
	// [END USER PORTS]
	input wire BoardSignals_Clock,
	input wire BoardSignals_Reset,
	input wire BoardSignals_Running,
	input wire BoardSignals_Starting,
	input wire BoardSignals_Started,
	input wire [15:0] iIQ,
	input wire [3:0] iDO,
	input wire [15:0] iFILO,
	input wire [32:0] iAccum,
	input wire iInternalFeedbackSelector,
	input wire [1:0] iCoeffReadAddr,
	input wire iCoeffWE,
	input wire [1:0] iCoeffWriteAddr,
	input wire [15:0] iCoeffData,
	input wire [7:0] iDataReadAddr,
	input wire iDataWE,
	input wire [15:0] iData,
	input wire [7:0] iDataWriteAddr,
	output wire [15:0] oIQ,
	output wire [15:0] oData,
	output wire [32:0] oAccum
);
	// [BEGIN USER SIGNALS]
	// [END USER SIGNALS]
	localparam HiSignal = 1'b1;
	localparam LoSignal = 1'b0;
	wire Zero = 1'b0;
	wire One = 1'b1;
	wire true = 1'b1;
	wire false = 1'b0;
	wire [2: 0] firParams_Order = 3'b100;
	wire [2: 0] firParams_DOSize = 3'b100;
	wire [4: 0] firParams_IQSize = 5'b10000;
	wire [4: 0] firParams_CoeffSize = 5'b10000;
	wire [4: 0] firParams_SumSize = 5'b10001;
	wire [5: 0] firParams_MultSize = 6'b100001;
	wire [5: 0] firParams_AccumSize = 6'b100001;
	wire [1: 0] firParams_CoeffRamAddrBits = 2'b10;
	wire [3: 0] firParams_DataRamAddrBits = 4'b1000;
	wire FIRStageModule_L104F49T50_Expr = 1'b0;
	wire [15: 0] Inputs_iIQ;
	wire [3: 0] Inputs_iDO;
	wire [15: 0] Inputs_iFILO;
	wire [32: 0] Inputs_iAccum;
	wire Inputs_iInternalFeedbackSelector;
	wire [1: 0] Inputs_iCoeffReadAddr;
	wire Inputs_iCoeffWE;
	wire [1: 0] Inputs_iCoeffWriteAddr;
	wire [15: 0] Inputs_iCoeffData;
	wire [7: 0] Inputs_iDataReadAddr;
	wire Inputs_iDataWE;
	wire [15: 0] Inputs_iData;
	wire [7: 0] Inputs_iDataWriteAddr;
	reg [15: 0] NextState_IQ1;
	reg [15: 0] NextState_IQ2;
	wire [15: 0] internalIQ;
	wire [15: 0] dsp_iIQ;
	wire [15: 0] dsp_iFILO;
	wire [15: 0] dsp_iCoeff;
	wire [32: 0] dsp_iAccum;
	wire dsp_iInternalFeedbackSelector;
	wire [32: 0] dsp_oAccum;
	wire [15: 0] dspiIQdsp_iIQHardLink;
	wire [15: 0] dspiFILOdsp_iFILOHardLink;
	wire [15: 0] dspiCoeffdsp_iCoeffHardLink;
	wire [32: 0] dspiAccumdsp_iAccumHardLink;
	wire dspiInternalFeedbackSelectordsp_iInternalFeedbackSelectorHardLink;
	wire [32: 0] dspoAccumdsp_oAccumHardLink;
	reg [15: 0] State_IQ1 = 16'b0000000000000000;
	wire [15: 0] State_IQ1Default = 16'b0000000000000000;
	reg [15: 0] State_IQ2 = 16'b0000000000000000;
	wire [15: 0] State_IQ2Default = 16'b0000000000000000;
	reg [15: 0] State_coeff;
	reg [15: 0] State_data;
	wire FIRStageModule_L104F35T50_Expr;
	wire signed [4: 0] FIRStageModule_L104F35T50_ExprLhs;
	wire signed [4: 0] FIRStageModule_L104F35T50_ExprRhs;
	reg [15: 0] FIRStageModule_L104F35L106T27_Lookup;
	wire FIRStageModule_L104F35L106T27_LookupMultiplexerAddress;
	wire [15: 0] FIRStageModule_L104F35L106T27_Lookup1;
	wire [15: 0] FIRStageModule_L104F35L106T27_Lookup2;
	reg [15 : 0] State_coeffRAM [0 : 1];
	initial
	begin : Init_State_coeffRAM
$readmemh("FIRModule4x16_TopLevel_TopLevel_TopLevel_FIRModule4x16_stages3_State_coeffRAM.hex", State_coeffRAM);
	end
	reg [15 : 0] State_dataRAM [0 : 127];
	initial
	begin : Init_State_dataRAM
$readmemh("FIRModule4x16_TopLevel_TopLevel_TopLevel_FIRModule4x16_stages3_State_dataRAM.hex", State_dataRAM);
	end
	// inferred simple dual port RAM with read-first behaviour
	always @ (posedge BoardSignals_Clock)
	begin
		if (Inputs_iCoeffWE)
		begin
			State_coeffRAM[Inputs_iCoeffWriteAddr] <= Inputs_iCoeffData;
		end
		State_coeff <= State_coeffRAM[Inputs_iCoeffReadAddr];
	end
	// inferred simple dual port RAM with read-first behaviour
	always @ (posedge BoardSignals_Clock)
	begin
		if (Inputs_iDataWE)
		begin
			State_dataRAM[Inputs_iDataWriteAddr] <= Inputs_iData;
		end
		State_data <= State_dataRAM[Inputs_iDataReadAddr];
	end
	always @ (posedge BoardSignals_Clock)
	begin
		if ((BoardSignals_Reset == 1))
		begin
			State_IQ1 <= State_IQ1Default;
			State_IQ2 <= State_IQ2Default;
		end
		else
		begin
			State_IQ1 <= NextState_IQ1;
			State_IQ2 <= NextState_IQ2;
		end
	end
	assign FIRStageModule_L104F35T50_Expr = FIRStageModule_L104F35T50_ExprLhs == FIRStageModule_L104F35T50_ExprRhs ? 1'b1 : 1'b0;
	FIRModule4x16_TopLevel_TopLevel_TopLevel_FIRModule4x16_stages3_FIRStageModule_dsp
	FIRModule4x16_TopLevel_TopLevel_TopLevel_FIRModule4x16_stages3_FIRStageModule_dsp
	(
		// [BEGIN USER MAP FOR dsp]
		// [END USER MAP FOR dsp]
		.BoardSignals_Clock (BoardSignals_Clock),
		.BoardSignals_Reset (BoardSignals_Reset),
		.BoardSignals_Running (BoardSignals_Running),
		.BoardSignals_Starting (BoardSignals_Starting),
		.BoardSignals_Started (BoardSignals_Started),
		.iIQ (dspiIQdsp_iIQHardLink),
		.iFILO (dspiFILOdsp_iFILOHardLink),
		.iCoeff (dspiCoeffdsp_iCoeffHardLink),
		.iAccum (dspiAccumdsp_iAccumHardLink),
		.iInternalFeedbackSelector (dspiInternalFeedbackSelectordsp_iInternalFeedbackSelectorHardLink),
		.oAccum (dspoAccumdsp_oAccumHardLink)
	);
	always @ (*)
	begin
		case (FIRStageModule_L104F35L106T27_LookupMultiplexerAddress)
			'b0:
			begin
				FIRStageModule_L104F35L106T27_Lookup = FIRStageModule_L104F35L106T27_Lookup1;
			end
			'b1:
			begin
				FIRStageModule_L104F35L106T27_Lookup = FIRStageModule_L104F35L106T27_Lookup2;
			end
			default:
			begin
				FIRStageModule_L104F35L106T27_Lookup = 'b0000000000000000;
			end
		endcase
	end
	always @ (*)
	begin
		NextState_IQ1 = State_IQ1;
		NextState_IQ2 = State_IQ2;
		NextState_IQ1 = Inputs_iIQ;
		NextState_IQ2 = State_IQ1;
	end
	assign FIRStageModule_L104F35T50_ExprLhs = { 1'b0, Inputs_iDO };
	assign FIRStageModule_L104F35T50_ExprRhs = { {4{1'b0}}, FIRStageModule_L104F49T50_Expr };
	assign Inputs_iIQ = iIQ;
	assign Inputs_iDO = iDO;
	assign Inputs_iFILO = iFILO;
	assign Inputs_iAccum = iAccum;
	assign Inputs_iInternalFeedbackSelector = iInternalFeedbackSelector;
	assign Inputs_iCoeffReadAddr = iCoeffReadAddr;
	assign Inputs_iCoeffWE = iCoeffWE;
	assign Inputs_iCoeffWriteAddr = iCoeffWriteAddr;
	assign Inputs_iCoeffData = iCoeffData;
	assign Inputs_iDataReadAddr = iDataReadAddr;
	assign Inputs_iDataWE = iDataWE;
	assign Inputs_iData = iData;
	assign Inputs_iDataWriteAddr = iDataWriteAddr;
	assign internalIQ = FIRStageModule_L104F35L106T27_Lookup;
	assign dsp_iIQ = internalIQ;
	assign dsp_iFILO = Inputs_iFILO;
	assign dsp_iCoeff = State_coeff;
	assign dsp_iAccum = Inputs_iAccum;
	assign dsp_iInternalFeedbackSelector = Inputs_iInternalFeedbackSelector;
	assign oIQ = State_IQ2;
	assign oData = State_data;
	assign oAccum = dsp_oAccum;
	assign dspiIQdsp_iIQHardLink = dsp_iIQ;
	assign dspiFILOdsp_iFILOHardLink = dsp_iFILO;
	assign dspiCoeffdsp_iCoeffHardLink = dsp_iCoeff;
	assign dspiAccumdsp_iAccumHardLink = dsp_iAccum;
	assign dspiInternalFeedbackSelectordsp_iInternalFeedbackSelectorHardLink = dsp_iInternalFeedbackSelector;
	assign dsp_oAccum = dspoAccumdsp_oAccumHardLink;
	assign FIRStageModule_L104F35L106T27_Lookup1 = Inputs_iData;
	assign FIRStageModule_L104F35L106T27_Lookup2 = Inputs_iIQ;
	assign FIRStageModule_L104F35L106T27_LookupMultiplexerAddress = FIRStageModule_L104F35T50_Expr;
	// [BEGIN USER ARCHITECTURE]
	// [END USER ARCHITECTURE]
endmodule
