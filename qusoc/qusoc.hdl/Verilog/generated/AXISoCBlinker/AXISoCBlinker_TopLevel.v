`timescale 1ns/1ps
`default_nettype none
// PLEASE READ THIS, IT MAY SAVE YOU SOME TIME AND MONEY, THANK YOU!
// * This file was generated by Quokka FPGA Toolkit.
// * Generated code is your property, do whatever you want with it
// * Place custom code between [BEGIN USER ***] and [END USER ***].
// * CAUTION: All code outside of [USER] scope is subject to regeneration.
// * Bad things happen sometimes in developer's life,
//   it is recommended to use source control management software (e.g. git, bzr etc) to keep your custom code safe'n'sound.
// * Internal structure of code is subject to change.
//   You can use some of signals in custom code, but most likely they will not exist in future (e.g. will get shorter or gone completely)
// * Please send your feedback, comments, improvement ideas etc. to evmuryshkin@gmail.com
// * Visit https://github.com/EvgenyMuryshkin/QuokkaEvaluation to access latest version of playground
//
// DISCLAIMER:
//   Code comes AS-IS, it is your responsibility to make sure it is working as expected
//   no responsibility will be taken for any loss or damage caused by use of Quokka toolkit.
//
// System configuration name is AXISoCBlinker_TopLevel, clock frequency is 1Hz, Top-level
// FSM summary
// -- Packages
module AXISoCBlinker_TopLevel
(
	// [BEGIN USER PORTS]
	// [END USER PORTS]
	input wire Clock,
	input wire Reset,
	output wire [31:0] oData
);
	// [BEGIN USER SIGNALS]
	// [END USER SIGNALS]
	localparam HiSignal = 1'b1;
	localparam LoSignal = 1'b0;
	wire Zero = 1'b0;
	wire One = 1'b1;
	wire true = 1'b1;
	wire false = 1'b0;
	wire [32: 0] AXI4RegisterModuleInputs_Reg = 33'b000000000000000000000000000000000;
	wire [73: 0] CPU_S2M;
	wire [221: 0] CPU_M2S;
	wire [221: 0] Memory_M2S;
	wire [73: 0] Memory_S2M;
	wire [221: 0] Reg_M2S;
	wire [32: 0] Reg_Reg;
	wire Reg_outACK;
	wire Reg_outWritten;
	wire [73: 0] Reg_S2M;
	wire [73: 0] AXISoCTestModule_L37F32L40T14_Object;
	wire [221: 0] AXISoCTestModule_L42F35L45T14_Object;
	wire [254: 0] AXISoCTestModule_L47F32L50T14_Object;
	wire [369: 0] AXISoCTestModule_L52F41L59T14_Object;
	wire [31: 0] AXISoCTestModule_L61F37T65_Source;
	wire [73: 0] CPU_S2M_CPU_S2M_HardLink;
	wire [221: 0] CPU_M2S_CPU_M2S_HardLink;
	wire [221: 0] Interconnect_iM2S0_Interconnect_iM2S_HardLink;
	wire [73: 0] Interconnect_iS2M0_Interconnect_iS2M_HardLink;
	wire [73: 0] Interconnect_iS2M1_Interconnect_iS2M_HardLink;
	wire [221: 0] Interconnect_oM2S0_Interconnect_oM2S_HardLink;
	wire [221: 0] Interconnect_oM2S1_Interconnect_oM2S_HardLink;
	wire [73: 0] Interconnect_oS2M0_Interconnect_oS2M_HardLink;
	wire [221: 0] Memory_M2S_Memory_M2S_HardLink;
	wire [73: 0] Memory_S2M_Memory_S2M_HardLink;
	wire [221: 0] Reg_M2S_Reg_M2S_HardLink;
	wire [32: 0] Reg_Reg_Reg_Reg_HardLink;
	wire Reg_outACK_Reg_outACK_HardLink;
	wire [7: 0] Reg_outData0_Reg_outData_HardLink;
	wire [7: 0] Reg_outData1_Reg_outData_HardLink;
	wire [7: 0] Reg_outData2_Reg_outData_HardLink;
	wire [7: 0] Reg_outData3_Reg_outData_HardLink;
	wire Reg_outWritten_Reg_outWritten_HardLink;
	wire [73: 0] Reg_S2M_Reg_S2M_HardLink;
	wire [221 : 0] Interconnect_iM2S [0 : 0];
	wire [73 : 0] Interconnect_iS2M [0 : 1];
	wire [221 : 0] Interconnect_oM2S [0 : 1];
	wire [73 : 0] Interconnect_oS2M [0 : 0];
	wire [7 : 0] Reg_outData [0 : 3];
	wire BoardSignals_Clock;
	wire BoardSignals_Reset;
	wire BoardSignals_Running;
	wire BoardSignals_Starting;
	wire BoardSignals_Started;
	reg InternalReset = 1'b0;
	work_Quokka_BoardSignalsProc BoardSignalsConnection(BoardSignals_Clock, BoardSignals_Reset, BoardSignals_Running, BoardSignals_Starting, BoardSignals_Started, Clock, Reset, InternalReset);
	AXISoCBlinker_TopLevel_CPU
	AXISoCBlinker_TopLevel_CPU
	(
		// [BEGIN USER MAP FOR CPU]
		// [END USER MAP FOR CPU]
		.BoardSignals_Clock (BoardSignals_Clock),
		.BoardSignals_Reset (BoardSignals_Reset),
		.BoardSignals_Running (BoardSignals_Running),
		.BoardSignals_Starting (BoardSignals_Starting),
		.BoardSignals_Started (BoardSignals_Started),
		.S2M (CPU_S2M_CPU_S2M_HardLink),
		.M2S (CPU_M2S_CPU_M2S_HardLink)
	);
	AXISoCBlinker_TopLevel_Interconnect
	AXISoCBlinker_TopLevel_Interconnect
	(
		// [BEGIN USER MAP FOR Interconnect]
		// [END USER MAP FOR Interconnect]
		.BoardSignals_Clock (BoardSignals_Clock),
		.BoardSignals_Reset (BoardSignals_Reset),
		.BoardSignals_Running (BoardSignals_Running),
		.BoardSignals_Starting (BoardSignals_Starting),
		.BoardSignals_Started (BoardSignals_Started),
		.iM2S0 (Interconnect_iM2S0_Interconnect_iM2S_HardLink),
		.iS2M0 (Interconnect_iS2M0_Interconnect_iS2M_HardLink),
		.iS2M1 (Interconnect_iS2M1_Interconnect_iS2M_HardLink),
		.oM2S0 (Interconnect_oM2S0_Interconnect_oM2S_HardLink),
		.oM2S1 (Interconnect_oM2S1_Interconnect_oM2S_HardLink),
		.oS2M0 (Interconnect_oS2M0_Interconnect_oS2M_HardLink)
	);
	AXISoCBlinker_TopLevel_Memory
	AXISoCBlinker_TopLevel_Memory
	(
		// [BEGIN USER MAP FOR Memory]
		// [END USER MAP FOR Memory]
		.BoardSignals_Clock (BoardSignals_Clock),
		.BoardSignals_Reset (BoardSignals_Reset),
		.BoardSignals_Running (BoardSignals_Running),
		.BoardSignals_Starting (BoardSignals_Starting),
		.BoardSignals_Started (BoardSignals_Started),
		.M2S (Memory_M2S_Memory_M2S_HardLink),
		.S2M (Memory_S2M_Memory_S2M_HardLink)
	);
	AXISoCBlinker_TopLevel_Reg
	AXISoCBlinker_TopLevel_Reg
	(
		// [BEGIN USER MAP FOR Reg]
		// [END USER MAP FOR Reg]
		.BoardSignals_Clock (BoardSignals_Clock),
		.BoardSignals_Reset (BoardSignals_Reset),
		.BoardSignals_Running (BoardSignals_Running),
		.BoardSignals_Starting (BoardSignals_Starting),
		.BoardSignals_Started (BoardSignals_Started),
		.M2S (Reg_M2S_Reg_M2S_HardLink),
		.Reg (Reg_Reg_Reg_Reg_HardLink),
		.outACK (Reg_outACK_Reg_outACK_HardLink),
		.outData0 (Reg_outData0_Reg_outData_HardLink),
		.outData1 (Reg_outData1_Reg_outData_HardLink),
		.outData2 (Reg_outData2_Reg_outData_HardLink),
		.outData3 (Reg_outData3_Reg_outData_HardLink),
		.outWritten (Reg_outWritten_Reg_outWritten_HardLink),
		.S2M (Reg_S2M_Reg_S2M_HardLink)
	);
	assign AXISoCTestModule_L37F32L40T14_Object[73:0] = Interconnect_oS2M[0];
	assign CPU_S2M = AXISoCTestModule_L37F32L40T14_Object[73:0];
	assign AXISoCTestModule_L42F35L45T14_Object[221:0] = Interconnect_oM2S[0];
	assign Memory_M2S = AXISoCTestModule_L42F35L45T14_Object[221:0];
	assign AXISoCTestModule_L47F32L50T14_Object[221:0] = Interconnect_oM2S[1];
	assign AXISoCTestModule_L47F32L50T14_Object[254:222] = AXI4RegisterModuleInputs_Reg;
	assign Reg_Reg = AXISoCTestModule_L47F32L50T14_Object[254:222];
	assign Reg_M2S = AXISoCTestModule_L47F32L50T14_Object[221:0];
	assign AXISoCTestModule_L52F41L59T14_Object[221:0] = CPU_M2S;
	assign AXISoCTestModule_L52F41L59T14_Object[369:222] = {
		Reg_S2M,
		Memory_S2M
	}
	;
	assign Interconnect_iS2M[1] = AXISoCTestModule_L52F41L59T14_Object[369:296];
	assign Interconnect_iS2M[0] = AXISoCTestModule_L52F41L59T14_Object[295:222];
	assign Interconnect_iM2S[0] = AXISoCTestModule_L52F41L59T14_Object[221:0];
	assign AXISoCTestModule_L61F37T65_Source = {
		Reg_outData[3],
		Reg_outData[2],
		Reg_outData[1],
		Reg_outData[0]
	}
	;
	assign oData = AXISoCTestModule_L61F37T65_Source;
	assign CPU_S2M_CPU_S2M_HardLink = CPU_S2M;
	assign CPU_M2S = CPU_M2S_CPU_M2S_HardLink;
	assign Interconnect_iM2S0_Interconnect_iM2S_HardLink = Interconnect_iM2S[0];
	assign Interconnect_iS2M0_Interconnect_iS2M_HardLink = Interconnect_iS2M[0];
	assign Interconnect_iS2M1_Interconnect_iS2M_HardLink = Interconnect_iS2M[1];
	assign Interconnect_oM2S[0] = Interconnect_oM2S0_Interconnect_oM2S_HardLink;
	assign Interconnect_oM2S[1] = Interconnect_oM2S1_Interconnect_oM2S_HardLink;
	assign Interconnect_oS2M[0] = Interconnect_oS2M0_Interconnect_oS2M_HardLink;
	assign Memory_M2S_Memory_M2S_HardLink = Memory_M2S;
	assign Memory_S2M = Memory_S2M_Memory_S2M_HardLink;
	assign Reg_M2S_Reg_M2S_HardLink = Reg_M2S;
	assign Reg_Reg_Reg_Reg_HardLink = Reg_Reg;
	assign Reg_outACK = Reg_outACK_Reg_outACK_HardLink;
	assign Reg_outData[0] = Reg_outData0_Reg_outData_HardLink;
	assign Reg_outData[1] = Reg_outData1_Reg_outData_HardLink;
	assign Reg_outData[2] = Reg_outData2_Reg_outData_HardLink;
	assign Reg_outData[3] = Reg_outData3_Reg_outData_HardLink;
	assign Reg_outWritten = Reg_outWritten_Reg_outWritten_HardLink;
	assign Reg_S2M = Reg_S2M_Reg_S2M_HardLink;
	// [BEGIN USER ARCHITECTURE]
	// [END USER ARCHITECTURE]
endmodule
