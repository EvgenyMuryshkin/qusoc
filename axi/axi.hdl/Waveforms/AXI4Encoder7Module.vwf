/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 1991-2010 Altera Corporation
Your use of Altera Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Altera Program License 
Subscription Agreement, Altera MegaCore Function License 
Agreement, or other applicable license agreement, including, 
without limitation, that your use is for the sole purpose of 
programming logic devices manufactured by Altera and sold by 
Altera or its authorized distributors.  Please refer to the 
applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	PRINT_OPTIONS = "Print_options_version 6\
range_start 0ps\
range_end 1.0us\
width 1\
names_percentage 25\
comments 1\
grid_lines 1\
time_bars 1\
name_every_page 0\
expand_groups 0\
print_all 1\
print_row_height 100";
	DATA_OFFSET = 0.0;
	DATA_DURATION = 1000.0;
	SIMULATION_TIME = 1000.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("iValues0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("iValues1")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("iValues2")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("iValues3")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("iValues4")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("iValues5")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("iValues6")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("MSBIndex")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 3;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("MSBIndex[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MSBIndex";
}

SIGNAL("MSBIndex[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MSBIndex";
}

SIGNAL("MSBIndex[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MSBIndex";
}

SIGNAL("MSBValue")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 7;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("MSBValue[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MSBValue";
}

SIGNAL("MSBValue[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MSBValue";
}

SIGNAL("MSBValue[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MSBValue";
}

SIGNAL("MSBValue[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MSBValue";
}

SIGNAL("MSBValue[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MSBValue";
}

SIGNAL("MSBValue[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MSBValue";
}

SIGNAL("MSBValue[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "MSBValue";
}

SIGNAL("HasActive")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

TRANSITION_LIST("iValues0")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 280.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 640.0;
	}
}

TRANSITION_LIST("iValues1")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 80.0;
		LEVEL 0 FOR 280.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 600.0;
	}
}

TRANSITION_LIST("iValues2")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 120.0;
		LEVEL 0 FOR 280.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 560.0;
	}
}

TRANSITION_LIST("iValues3")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 160.0;
		LEVEL 0 FOR 280.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 520.0;
	}
}

TRANSITION_LIST("iValues4")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 280.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 480.0;
	}
}

TRANSITION_LIST("iValues5")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 240.0;
		LEVEL 0 FOR 280.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 440.0;
	}
}

TRANSITION_LIST("iValues6")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 280.0;
		LEVEL 0 FOR 280.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 400.0;
	}
}

TRANSITION_LIST("MSBIndex[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 170.061;
		LEVEL 1 FOR 115.546;
		LEVEL 0 FOR 204.454;
		LEVEL 1 FOR 35.19;
		LEVEL 0 FOR 3.994;
		LEVEL 1 FOR 76.362;
		LEVEL 0 FOR 394.393;
	}
}

TRANSITION_LIST("MSBIndex[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 89.727;
		LEVEL 1 FOR 79.701;
		LEVEL 0 FOR 80.653;
		LEVEL 1 FOR 36.209;
		LEVEL 0 FOR 123.725;
		LEVEL 1 FOR 79.413;
		LEVEL 0 FOR 80.653;
		LEVEL 1 FOR 36.209;
		LEVEL 0 FOR 393.71;
	}
}

TRANSITION_LIST("MSBIndex[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 49.879;
		LEVEL 1 FOR 40.893;
		LEVEL 0 FOR 39.104;
		LEVEL 1 FOR 39.628;
		LEVEL 0 FOR 37.075;
		LEVEL 1 FOR 43.653;
		LEVEL 0 FOR 120.54;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 39.104;
		LEVEL 1 FOR 39.628;
		LEVEL 0 FOR 40.728;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 429.768;
	}
}

TRANSITION_LIST("MSBValue[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 250.977;
		LEVEL 1 FOR 35.318;
		LEVEL 0 FOR 284.682;
		LEVEL 1 FOR 35.318;
		LEVEL 0 FOR 393.705;
	}
}

TRANSITION_LIST("MSBValue[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 206.82;
		LEVEL 1 FOR 43.691;
		LEVEL 0 FOR 279.962;
		LEVEL 1 FOR 40.038;
		LEVEL 0 FOR 429.489;
	}
}

TRANSITION_LIST("MSBValue[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 170.729;
		LEVEL 1 FOR 36.331;
		LEVEL 0 FOR 283.669;
		LEVEL 1 FOR 34.945;
		LEVEL 0 FOR 4.239;
		LEVEL 1 FOR 0.8;
		LEVEL 0 FOR 469.287;
	}
}

TRANSITION_LIST("MSBValue[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 129.312;
		LEVEL 1 FOR 39.843;
		LEVEL 0 FOR 280.157;
		LEVEL 1 FOR 39.843;
		LEVEL 0 FOR 510.845;
	}
}

TRANSITION_LIST("MSBValue[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 89.449;
		LEVEL 1 FOR 39.9;
		LEVEL 0 FOR 280.1;
		LEVEL 1 FOR 39.9;
		LEVEL 0 FOR 550.651;
	}
}

TRANSITION_LIST("MSBValue[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 49.798;
		LEVEL 1 FOR 40.094;
		LEVEL 0 FOR 279.906;
		LEVEL 1 FOR 40.094;
		LEVEL 0 FOR 590.108;
	}
}

TRANSITION_LIST("MSBValue[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 48.486;
		LEVEL 0 FOR 280.0;
		LEVEL 1 FOR 40.0;
		LEVEL 0 FOR 631.514;
	}
}

TRANSITION_LIST("HasActive")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 1 FOR 285.392;
		LEVEL 0 FOR 44.699;
		LEVEL 1 FOR 194.944;
		LEVEL 0 FOR 3.962;
		LEVEL 1 FOR 76.395;
		LEVEL 0 FOR 394.608;
	}
}

DISPLAY_LINE
{
	CHANNEL = "iValues0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "iValues1";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "iValues2";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "iValues3";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 3;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "iValues4";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 4;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "iValues5";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 5;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "iValues6";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 6;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "HasActive";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 7;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "MSBIndex";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 8;
	TREE_LEVEL = 0;
	CHILDREN = 9, 10, 11;
}

DISPLAY_LINE
{
	CHANNEL = "MSBIndex[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 8;
}

DISPLAY_LINE
{
	CHANNEL = "MSBIndex[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 8;
}

DISPLAY_LINE
{
	CHANNEL = "MSBIndex[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 8;
}

DISPLAY_LINE
{
	CHANNEL = "MSBValue";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 12;
	TREE_LEVEL = 0;
	CHILDREN = 13, 14, 15, 16, 17, 18, 19;
}

DISPLAY_LINE
{
	CHANNEL = "MSBValue[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 13;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "MSBValue[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 14;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "MSBValue[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "MSBValue[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "MSBValue[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "MSBValue[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 12;
}

DISPLAY_LINE
{
	CHANNEL = "MSBValue[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 12;
}

TIME_BAR
{
	TIME = 20000;
	MASTER = TRUE;
}
;
